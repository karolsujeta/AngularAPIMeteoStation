var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AirData.html",[0,0.125,1,1.731]],["body/classes/AirData.html",[0,0.166,1,3.23,2,1.187,3,0.39,4,0.331,5,0.331,6,3.457,7,2.301,8,1.003,9,4.062,10,4.062,11,4.062,12,1.999,13,2.189,14,3.612,15,2.912,16,0.452,17,0.723,18,1.595,19,5.861,20,0.811,21,4.062,22,0.639,23,4.062,24,1.761,25,1.761,26,0.731,27,0.035,28,0.516,29,0.483,30,0.731,31,2.298,32,4.528,33,5.458,34,5.458,35,3.457,36,1.203,37,1.325,38,2.787,39,5.458,40,5.458,41,4.528,42,4.062,43,0.39,44,1.083,45,0.023,46,0.028,47,0.023]],["title/components/AirQualityComponentComponent.html",[48,0.815,49,1.174]],["body/components/AirQualityComponentComponent.html",[0,0.117,3,0.274,4,0.233,5,0.233,12,1.396,15,2.535,16,0.317,17,0.573,20,0.461,22,0.631,26,0.513,27,0.035,28,0.583,29,0.382,30,0.513,36,0.878,38,2.033,41,3.304,43,0.274,45,0.016,46,0.022,47,0.029,48,1.442,49,1.906,50,2.033,51,1.616,52,1.616,53,1.616,54,1.616,55,4.332,56,1.973,57,3.308,58,1.457,59,2.522,60,2.906,61,1.616,62,3.207,63,2.621,64,2.621,65,2.256,66,2.906,67,2.256,68,2.522,69,1.677,70,3.144,71,4.965,72,2.854,73,3.144,74,3.983,75,2.522,76,2.854,77,1.677,78,1.616,79,2.854,80,0.795,81,0.834,82,1.807,83,1.807,84,2.854,85,1.201,86,1.201,87,2.854,88,2.854,89,2.854,90,2.854,91,3.304,92,3.983,93,2.891,94,4.965,95,3.983,96,2.856,97,2.522,98,3.064,99,3.983,100,3.983,101,1.164,102,3.983,103,3.983,104,3.983,105,3.983,106,1.677,107,3.983,108,3.983,109,3.561,110,3.983,111,3.983,112,3.304,113,3.983,114,3.983,115,3.304,116,3.983,117,3.983,118,3.983,119,3.983,120,2.256,121,3.304,122,3.983,123,3.983,124,3.983,125,3.983,126,3.983,127,3.983,128,3.983,129,3.983,130,1.677,131,3.983,132,3.983,133,2.856,134,3.983,135,3.983,136,3.983,137,3.983,138,3.983,139,3.983,140,3.983,141,3.983,142,3.983,143,3.983,144,3.983,145,3.983,146,3.983,147,3.983,148,3.983,149,3.983,150,2.256,151,3.983,152,1.807,153,1.807,154,2.854,155,1.321,156,2.256,157,2.256,158,1.616,159,2.812,160,1.616,161,2.812,162,1.095,163,1.616,164,1,165,1.095,166,1,167,1,168,1.201,169,0.913,170,1.201,171,1.616,172,1.616]],["title/classes/AirQualityData.html",[0,0.125,173,1.936]],["body/classes/AirQualityData.html",[0,0.183,2,1.308,3,0.43,4,0.365,5,0.365,7,2.535,20,0.86,22,0.569,26,0.805,27,0.035,28,0.569,29,0.43,30,0.805,43,0.43,45,0.025,46,0.03,47,0.025,56,1.706,80,0.893,82,3.376,83,3.376,93,2.722,150,3.338,173,3.376,174,3.21,175,2.635,176,5.694,177,1.664,178,5.694,179,4.476,180,2.834,181,3.606]],["title/injectables/AirQualityService.html",[73,1.936,182,1.174]],["body/injectables/AirQualityService.html",[0,0.163,3,0.383,4,0.325,5,0.325,16,0.444,17,0.715,20,0.644,22,0.688,26,0.718,27,0.036,28,0.508,29,0.478,30,0.718,37,1.314,43,0.383,45,0.022,46,0.028,47,0.022,56,1.278,64,1.848,69,2.093,73,3.149,77,1.681,80,1.164,81,1.167,82,3.59,83,3.59,85,1.681,86,1.681,165,1.533,173,2.529,177,1.167,182,1.909,183,2.261,184,3.312,185,4.702,186,1.848,187,2.386,188,3.993,189,2.301,190,3.993,191,3.43,192,1.533,193,1.533,194,4.973,195,4.973,196,3.993,197,1.681,198,3.149,199,2.864,200,2.864,201,1.533,202,2.529,203,2.261,204,2.529,205,3.993,206,2.864,207,3.993,208,3.993,209,2.864,210,2.864,211,1.681,212,3.993,213,3.993,214,3.993]],["title/components/AppComponent.html",[48,0.815,162,1.174]],["body/components/AppComponent.html",[0,0.159,3,0.373,4,0.317,5,0.317,15,2.866,16,0.432,17,0.703,22,0.494,27,0.036,28,0.621,29,0.373,43,0.373,45,0.022,46,0.027,47,0.022,48,1.496,49,1.492,50,2.496,51,2.201,52,2.201,53,2.201,54,2.201,56,1.565,61,2.201,62,3.434,63,2.851,64,1.798,65,2.769,67,2.769,80,0.776,81,1.136,109,4.026,155,1.798,156,2.769,157,2.769,158,2.201,159,3.179,160,2.201,161,3.179,162,2.155,163,2.201,164,1.362,165,1.492,166,1.362,167,1.362,168,1.636,169,1.244,170,1.636,171,2.201,172,2.201,177,1.136,192,1.492,193,1.492,203,2.769,215,3.224,216,4.889,217,4.889,218,5.35,219,4.889,220,5.35,221,4.056,222,3.886,223,3.886,224,4.889,225,4.889,226,2.496,227,4.889]],["title/modules/AppModule.html",[201,1.174,228,1.936]],["body/modules/AppModule.html",[0,0.146,3,0.343,4,0.291,5,0.291,27,0.036,43,0.343,45,0.02,46,0.026,47,0.02,49,1.778,56,1.483,57,2.261,63,1.652,80,1.235,81,1.044,155,1.652,162,2.363,164,2.024,166,2.024,167,2.024,169,1.849,187,1.503,197,1.503,201,1.371,228,3.976,229,2.022,230,2.261,231,4.265,232,3.687,233,3.842,234,2.561,235,2.962,236,2.962,237,2.962,238,2.962,239,3.271,240,2.933,241,2.962,242,2.561,243,3.571,244,3.842,245,4.632,246,3.842,247,2.561,248,3.842,249,3.571,250,3.571,251,4.632,252,3.571,253,2.962,254,5.141,255,2.962,256,4.676,257,2.962,258,2.962,259,2.261,260,2.962,261,4.632,262,3.571,263,4.632,264,4.632,265,2.962,266,2.962]],["title/modules/AppRoutingModule.html",[201,1.174,239,1.731]],["body/modules/AppRoutingModule.html",[0,0.163,3,0.383,4,0.325,5,0.325,27,0.036,43,0.478,45,0.022,46,0.028,47,0.022,48,1.554,49,1.909,56,1.814,57,2.529,64,1.848,80,1.203,81,1.167,164,1.743,165,1.533,166,1.743,167,1.898,169,1.734,180,2.529,229,2.261,234,2.864,239,2.816,244,3.312,248,4.125,255,3.312,256,4.837,257,3.312,258,3.312,259,2.529,260,3.312,266,3.312,267,2.864,268,2.864,269,3.43,270,4.973,271,3.566,272,5.946,273,4.973,274,2.529,275,3.993,276,3.993,277,3.993,278,3.993,279,2.864]],["title/classes/CalculatedProps.html",[0,0.125,280,1.936]],["body/classes/CalculatedProps.html",[0,0.124,2,0.883,3,0.29,4,0.246,5,0.246,8,0.603,16,0.336,17,0.596,18,1.785,20,0.487,22,0.7,26,0.543,27,0.036,28,0.384,29,0.529,30,0.543,31,2.481,43,0.29,45,0.017,46,0.023,47,0.017,97,3.222,101,1.702,175,2.776,177,1.722,226,1.542,280,2.623,281,2.505,282,0.805,283,3.02,284,3.02,285,2.505,286,3.922,287,3.922,288,1.058,289,4.728,290,3.922,291,1.913,292,2.505,293,2.505,294,2.505,295,3.769,296,3.02,297,3.02,298,3.02,299,3.436,300,3.02,301,3.02,302,3.02,303,3.02,304,3.02,305,3.02,306,3.02,307,3.02,308,4.728,309,4.567,310,5.506,311,4.22,312,5.506,313,4.142,314,4.567,315,5.087,316,5.087,317,4.142,318,2.481,319,5.506,320,3.02,321,5.087,322,5.087,323,3.252,324,4.763,325,4.763,326,3.02,327,5.087,328,4.142,329,3.02,330,3.02,331,4.142,332,1.71,333,4.142,334,3.02,335,4.142,336,3.02,337,4.142,338,3.02,339,4.142,340,3.02,341,4.142,342,3.02]],["title/classes/ForecastData.html",[0,0.125,343,1.731]],["body/classes/ForecastData.html",[0,0.185,2,1.004,3,0.33,4,0.28,5,0.28,7,1.945,8,0.901,12,1.878,16,0.382,17,0.649,18,1.702,20,0.814,22,0.574,25,1.768,26,0.618,27,0.036,28,0.641,29,0.434,30,0.618,36,1.112,37,1.096,43,0.434,44,1.484,45,0.019,46,0.025,47,0.019,96,3.238,98,2.857,101,1.627,106,2.344,120,3.153,133,2.463,170,1.901,175,2.48,177,1.566,192,1.318,193,1.318,282,1.204,323,2.557,343,3.035,344,3.195,345,3.745,346,3.195,347,3.526,348,3.526,349,3.745,350,3.745,351,3.434,352,3.434,353,4.185,354,4.185,355,2.576,356,2.857,357,4.185,358,3.618,359,3.618,360,3.689,361,3.618,362,4.185,363,2.857,364,3.843,365,3.434,366,2.305,367,2.463,368,2.463,369,2.463,370,2.848,371,3.745,372,2.848,373,2.848,374,3.745,375,2.848,376,3.238,377,2.463,378,2.175,379,2.175,380,2.175,381,2.463,382,2.848,383,1.945]],["title/components/MapComponentComponent.html",[48,0.815,164,1.071]],["body/components/MapComponentComponent.html",[0,0.078,3,0.107,4,0.156,5,0.091,8,0.725,12,2.019,13,2.165,16,0.124,17,0.275,20,0.309,22,0.609,24,0.67,26,0.653,27,0.036,28,0.543,29,0.373,30,0.653,32,3.392,35,3.196,36,1.275,37,1.309,38,0.976,43,0.184,44,1.034,45,0.033,46,0.011,47,0.011,48,0.968,49,0.429,50,0.976,51,0.633,52,0.633,53,0.633,54,0.633,56,0.612,58,0.571,59,1.587,60,1.587,61,0.633,62,2.316,63,1.893,64,0.518,65,1.083,66,1.587,67,1.083,68,1.211,69,0.805,70,1.878,75,1.878,77,1.528,78,1.419,80,0.5,81,0.327,85,0.471,86,1.402,101,1.696,106,1.528,130,1.92,153,2.965,155,0.518,156,1.083,157,1.083,158,0.633,159,2.506,160,0.633,161,1.679,162,0.429,163,0.633,164,1.36,165,1.965,166,0.392,167,0.392,168,0.471,169,0.358,170,0.471,171,0.633,172,0.633,181,3.385,186,0.518,187,1.248,189,1.159,192,1.394,193,1.394,197,0.471,211,1.248,240,1.211,271,0.802,288,0.67,295,3.674,318,1.971,332,2.814,355,2.259,363,2.506,384,3.503,385,1.586,386,1.586,387,2.459,388,1.372,389,1.913,390,2.763,391,1.372,392,4.884,393,2.459,394,2.18,395,2.18,396,1.679,397,3.331,398,2.505,399,2.505,400,3.331,401,3.331,402,3.331,403,1.913,404,1.913,405,1.913,406,1.913,407,1.913,408,1.679,409,1.913,410,1.913,411,1.913,412,1.913,413,1.119,414,2.651,415,3.671,416,4.187,417,2.965,418,4.09,419,3.392,420,4.426,421,2.59,422,3.972,423,3.174,424,3.174,425,2.933,426,3.174,427,3.174,428,2.803,429,4.426,430,4.426,431,1.913,432,1.119,433,1.913,434,2.056,435,2.078,436,4.682,437,1.913,438,1.211,439,1.913,440,1.372,441,1.586,442,1.913,443,1.913,444,1.119,445,2.965,446,1.913,447,1.119,448,2.965,449,1.913,450,1.119,451,2.965,452,1.119,453,1.913,454,1.913,455,1.913,456,1.586,457,1.913,458,1.372,459,1.913,460,1.913,461,1.119,462,4.682,463,1.913,464,4.09,465,4.09,466,1.119,467,1.913,468,2.459,469,2.965,470,1.913,471,1.119,472,1.913,473,1.119,474,1.913,475,1.119,476,1.913,477,0.928,478,0.802,479,0.802,480,1.119,481,0.928,482,1.119,483,1.119,484,1.119,485,1.119,486,0.928,487,1.119,488,1.119,489,1.119,490,1.119,491,1.119,492,1.119,493,0.928,494,1.119,495,1.372,496,0.633,497,0.928,498,1.913,499,1.119,500,1.119,501,3.331,502,2.459,503,2.965,504,1.119,505,1.119,506,1.119,507,1.119,508,1.119,509,2.078,510,1.119,511,1.119,512,1.119,513,1.119,514,1.913,515,1.913,516,1.119,517,1.913,518,1.119,519,1.119,520,1.119,521,1.119,522,1.586,523,1.119,524,1.372,525,1.586,526,1.119,527,1.119,528,1.119,529,1.119,530,1.119,531,1.119,532,1.119,533,1.119,534,1.119,535,1.119,536,1.119,537,0.928,538,0.928,539,0.928,540,0.928,541,0.928,542,0.928,543,0.928,544,0.928,545,0.928,546,0.928,547,0.928,548,0.928,549,0.928,550,0.928,551,0.928,552,0.928,553,0.928,554,0.928,555,1.913,556,0.928,557,1.797,558,0.928,559,1.119,560,1.119,561,1.119,562,1.119,563,1.119,564,1.119,565,0.928,566,4.09,567,4.09,568,4.09,569,2.459,570,1.913,571,1.586,572,1.913,573,1.586,574,1.913,575,1.586,576,0.802,577,2.078,578,1.586,579,1.119,580,1.913,581,2.389,582,3.358,583,2.078,584,1.119,585,2.782,586,0.928,587,0.928,588,3.331,589,1.119,590,3.392,591,1.119,592,3.012,593,2.782,594,1.119,595,2.782,596,3.331,597,1.119,598,1.119,599,1.913,600,1.119,601,1.119,602,1.119,603,1.119,604,1.119,605,3.331,606,3.331,607,0.928,608,1.119,609,2.126,610,1.119,611,2.459,612,0.928,613,0.802,614,0.928,615,0.928,616,1.119,617,0.928,618,0.928,619,0.928,620,1.119,621,1.119,622,0.802,623,0.928,624,1.119,625,1.119,626,0.928,627,0.928,628,1.372,629,1.586,630,1.586,631,0.928,632,0.802,633,0.928,634,0.928,635,0.928,636,1.211,637,0.928]],["title/classes/MeteoStatsData.html",[0,0.125,638,1.936]],["body/classes/MeteoStatsData.html",[0,0.087,2,0.625,3,0.205,4,0.174,5,0.174,8,0.644,16,0.238,17,0.464,18,1.821,20,0.521,22,0.722,24,1.131,25,1.131,26,0.384,27,0.035,28,0.272,29,0.545,30,0.384,31,2.623,35,3.098,36,1.379,37,1.51,43,0.205,44,1.497,45,0.012,46,0.018,47,0.012,80,0.426,97,2.463,98,2.202,130,1.824,150,2.876,168,2.415,175,2.912,180,1.353,282,1.155,288,1.131,290,4.057,291,3.098,295,3.454,314,3.858,318,2.61,360,3.098,378,2.044,379,2.044,380,2.946,383,2.202,391,1.494,416,3.858,575,4.057,638,2.044,639,4.758,640,1.773,641,2.044,642,2.044,643,2.677,644,3.227,645,2.677,646,3.227,647,3.227,648,5.541,649,4.892,650,5.454,651,4.652,652,4.652,653,4.892,654,4.892,655,4.652,656,4.892,657,4.892,658,4.057,659,4.892,660,4.892,661,4.892,662,4.439,663,4.892,664,4.892,665,4.892,666,2.137,667,2.137,668,1.648,669,3.227,670,5.351,671,3.889,672,3.889,673,5.907,674,2.137,675,2.137,676,2.137,677,2.137,678,2.137,679,2.137,680,2.137,681,2.137,682,2.137,683,2.137,684,2.137,685,2.137]],["title/classes/MeteoStatsModel.html",[0,0.125,686,1.936]],["body/classes/MeteoStatsModel.html",[0,0.182,2,1.303,3,0.428,4,0.363,5,0.363,8,0.89,16,0.496,17,0.765,18,1.661,22,0.567,27,0.035,29,0.428,36,1.172,37,1.291,43,0.428,45,0.025,46,0.03,47,0.025,80,0.89,130,2.239,150,3.334,168,1.877,221,3.698,282,1.418,638,3.809,641,3.368,643,4.412,668,2.715,686,3.368,687,4.412,688,3.698,689,4.412,690,4.459]],["title/injectables/MeteoStatsService.html",[182,1.174,691,2.193]],["body/injectables/MeteoStatsService.html",[0,0.093,3,0.219,4,0.186,5,0.186,8,0.808,12,1.943,13,2.047,16,0.254,17,0.488,20,0.368,22,0.66,24,1.189,25,1.189,26,0.728,27,0.036,28,0.514,29,0.532,30,0.728,31,2.511,36,1.222,37,1.397,43,0.219,44,1.337,45,0.013,46,0.019,47,0.013,69,1.428,77,1.428,78,1.293,80,0.894,81,0.667,85,0.961,86,0.961,97,2.836,101,1.309,112,3.715,130,2.245,177,1.465,182,1.302,183,1.293,186,1.057,187,1.885,189,1.873,191,2.563,192,1.302,193,1.302,197,0.961,198,1.446,199,1.638,202,1.446,203,1.293,204,1.446,226,3.046,282,0.904,288,1.189,299,2.813,318,2.398,323,1.921,324,3.715,325,3.715,355,2.286,356,1.921,369,2.432,383,2.536,391,1.57,394,2.286,395,1.732,414,2.536,415,4.159,421,2.148,468,2.813,496,2.94,686,1.446,689,1.894,691,3.212,692,3.825,693,4.424,694,1.894,695,4.479,696,3.392,697,3.392,698,3.715,699,4.479,700,5.014,701,4.818,702,4.159,703,3.288,704,4.159,705,3.723,706,4.159,707,4.046,708,4.046,709,2.902,710,4.046,711,3.392,712,3.392,713,3.392,714,3.392,715,2.84,716,4.785,717,4.785,718,2.284,719,3.392,720,3.392,721,4.159,722,3.392,723,3.392,724,3.392,725,3.392,726,4.479,727,3.392,728,2.284,729,3.392,730,3.392,731,2.284,732,3.392,733,3.596,734,2.813,735,2.148,736,3.392,737,3.392,738,2.432,739,2.813,740,3.392,741,2.284,742,3.392,743,3.392,744,2.284,745,3.392,746,3.392,747,3.392,748,3.392,749,3.392,750,3.392,751,3.392,752,2.284,753,2.284,754,2.284,755,2.284,756,4.479,757,2.284,758,1.894,759,2.284,760,1.894,761,2.284,762,4.046,763,2.284,764,4.046,765,2.284,766,2.284]],["title/components/QualityComponentComponent.html",[48,0.815,166,1.071]],["body/components/QualityComponentComponent.html",[0,0.078,1,1.082,3,0.184,4,0.242,5,0.156,6,1.21,8,0.381,13,1.393,14,2.298,15,2.259,16,0.213,17,0.426,20,0.308,22,0.52,24,1.038,25,1.038,26,0.344,27,0.036,28,0.461,29,0.285,30,0.344,31,1.721,36,1.076,37,1.074,43,0.184,44,0.79,45,0.011,46,0.017,47,0.023,48,1.345,49,0.734,50,1.513,51,1.082,52,1.082,53,1.082,54,1.082,56,1.725,58,0.976,59,1.876,60,2.298,61,1.082,62,2.857,63,2.335,64,0.884,65,1.678,66,2.298,67,1.678,68,1.876,69,1.247,70,2.589,75,2.589,77,0.804,78,1.082,80,0.974,81,0.558,85,0.804,86,0.804,101,1.368,106,1.97,109,2.125,152,1.21,153,3.196,155,0.884,156,1.678,157,2.315,158,1.082,159,3.237,160,1.082,161,2.315,162,0.734,163,1.082,164,0.67,165,2.032,166,1.64,167,0.67,168,0.804,169,0.612,170,0.804,171,1.082,172,1.082,181,3.092,186,0.884,187,1.721,189,1.679,197,0.804,201,0.734,206,2.602,211,1.97,240,1.21,282,0.509,309,2.458,311,3.01,318,1.721,332,2.65,385,2.458,386,2.458,387,3.01,388,2.125,390,2.458,391,2.166,394,1.513,395,1.513,434,1.082,440,2.125,458,2.602,478,2.125,479,2.125,495,1.37,522,1.585,524,1.37,525,1.585,537,1.585,538,1.585,539,1.585,540,1.585,541,1.585,542,1.585,543,1.585,544,1.585,545,1.585,546,1.585,547,2.458,548,1.585,549,1.585,550,1.585,551,1.585,552,1.585,553,1.585,554,1.585,556,1.585,557,1.37,558,1.585,565,1.585,576,2.125,582,3.502,585,2.932,592,3.391,593,3.357,595,3.502,609,3.173,613,2.125,622,3.173,626,1.585,627,1.585,628,2.125,629,2.458,630,1.585,631,1.585,632,3.797,633,3.01,634,3.391,635,1.585,636,2.802,642,1.876,767,3.173,768,2.963,769,3.01,770,2.125,771,2.963,772,2.963,773,2.802,774,2.963,775,1.911,776,2.963,777,2.458,778,3.391,779,1.911,780,2.963,781,2.963,782,1.911,783,1.585,784,2.963,785,1.37,786,1.911,787,2.458,788,4.186,789,2.458,790,2.602,791,1.585,792,2.458,793,2.602,794,1.585,795,2.932,796,1.585,797,1.37,798,2.602,799,1.585,800,1.585,801,1.585,802,2.125,803,1.585,804,1.585,805,1.585,806,1.585,807,2.602,808,1.911,809,1.911,810,2.963,811,2.963,812,1.911,813,1.911,814,2.963,815,2.963,816,2.458,817,2.963,818,2.963,819,1.911,820,1.911,821,1.911,822,1.911,823,1.911,824,1.585,825,1.911,826,1.911,827,2.963,828,1.585,829,1.911,830,1.911,831,1.585,832,1.585,833,1.911,834,1.911,835,1.911,836,1.911,837,2.963,838,5.046,839,2.963,840,2.963,841,2.963,842,2.963,843,2.963,844,2.963,845,2.963,846,2.963,847,2.963,848,2.963,849,2.963,850,2.963,851,2.963,852,2.458,853,2.458,854,2.458,855,2.458,856,3.01,857,3.391,858,1.585,859,1.911,860,2.963,861,1.911,862,2.458,863,2.458,864,3.391,865,1.911,866,1.911,867,3.629,868,2.963,869,1.911,870,1.911,871,1.585,872,2.963,873,1.911,874,1.911,875,1.911,876,2.963,877,2.963,878,1.911,879,1.911,880,1.911,881,2.458,882,2.963,883,1.585,884,1.911,885,1.911,886,1.911,887,1.911,888,2.963,889,2.963,890,1.911,891,1.911]],["title/injectables/QualityServiceService.html",[182,1.174,773,1.936]],["body/injectables/QualityServiceService.html",[0,0.121,1,2.647,3,0.284,4,0.241,5,0.241,6,3.35,8,0.814,12,1.766,13,2.099,14,3.192,15,2.573,16,0.329,17,0.587,18,1.366,20,0.477,22,0.641,24,1.43,25,1.766,26,0.734,27,0.036,28,0.519,29,0.484,30,0.734,36,1.206,37,1.386,43,0.284,44,1.246,45,0.017,46,0.023,47,0.017,56,0.946,69,1.718,77,1.244,80,1.14,81,0.864,85,1.244,86,1.718,91,3.385,101,1.193,106,1.718,120,1.673,130,2.122,165,1.134,177,1.638,182,1.566,183,1.673,185,3.385,186,1.368,187,2.122,189,2.163,191,2.96,192,1.134,193,1.134,197,1.244,198,1.871,200,2.926,201,1.134,202,1.871,203,1.673,204,1.871,209,2.119,210,2.119,211,1.244,391,1.888,414,2.311,421,2.584,424,2.926,557,2.926,571,3.385,636,3.192,668,2.083,709,3.352,733,2.926,734,3.385,735,2.584,770,2.926,773,3.192,785,2.119,787,2.451,852,3.385,892,2.119,893,5.04,894,4.081,895,4.081,896,5.04,897,4.081,898,4.081,899,3.385,900,4.081,901,4.081,902,4.081,903,4.081,904,4.081,905,4.081,906,4.081,907,4.081,908,3.385,909,4.081,910,4.081,911,4.081,912,4.674,913,4.674,914,4.081,915,5.04,916,2.955,917,4.081,918,3.385,919,5.04,920,5.04,921,4.081,922,5.04,923,4.081,924,3.385,925,3.385,926,2.451,927,2.451,928,2.451,929,2.451,930,2.955,931,2.955,932,2.451,933,2.451,934,2.119]],["title/classes/Station.html",[0,0.125,715,1.731]],["body/classes/Station.html",[0,0.168,2,1.198,3,0.394,4,0.334,5,0.334,8,1.009,16,0.456,17,0.727,18,1.717,20,0.661,22,0.696,24,1.771,25,1.771,26,0.737,27,0.035,28,0.771,29,0.526,30,0.737,36,0.903,38,2.092,43,0.394,44,1.347,45,0.023,46,0.028,47,0.023,93,3.152,115,3.399,130,1.725,174,2.939,175,2.647,177,1.672,226,2.092,282,1.092,288,1.436,355,2.092,367,3.93,396,3.24,428,2.595,641,2.595,642,2.595,645,3.399,668,2.58,715,3.24,935,3.399,936,3.399,937,3.399,938,4.098,939,4.545,940,5.054,941,3.399]],["title/classes/StationList.html",[0,0.125,942,2.193]],["body/classes/StationList.html",[0,0.108,2,0.769,3,0.253,4,0.215,5,0.215,8,0.525,16,0.293,17,0.541,20,0.708,22,0.478,24,1.318,27,0.036,29,0.253,43,0.253,45,0.015,46,0.021,47,0.015,80,0.525,93,2.445,120,2.13,211,1.108,282,1.003,288,1.318,318,1.583,396,2.712,641,2.382,692,3.148,698,3.12,715,1.49,738,2.697,739,3.12,942,3.89,943,3.641,944,2.183,945,3.12,946,3.12,947,3.761,948,4.789,949,3.12,950,3.761,951,3.973,952,3.761,953,3.761,954,4.389,955,3.761,956,2.632,957,2.632,958,6.458,959,2.632,960,2.632,961,2.632,962,3.761,963,2.632,964,2.632,965,2.632,966,2.632,967,2.632,968,2.632,969,2.632,970,2.632,971,2.632,972,2.632,973,2.632,974,2.632,975,2.632,976,2.632,977,3.761,978,2.632,979,2.632,980,2.632,981,2.632,982,2.632,983,2.632,984,2.632,985,2.632,986,2.632,987,2.632,988,2.632,989,2.632,990,2.632,991,2.632,992,2.632,993,2.632,994,2.632,995,2.632,996,2.632,997,2.632,998,2.632,999,2.632,1000,2.632,1001,2.632,1002,2.632,1003,2.632,1004,2.632,1005,2.632,1006,2.632,1007,2.632,1008,2.632,1009,2.632,1010,2.632,1011,2.632,1012,2.632,1013,2.632,1014,2.632,1015,2.632,1016,2.632,1017,2.632,1018,2.632,1019,2.632,1020,2.632,1021,2.632,1022,2.632,1023,2.632,1024,2.632,1025,2.632,1026,2.632,1027,3.761,1028,2.632,1029,2.632,1030,2.632,1031,2.632,1032,2.632,1033,2.632,1034,2.632,1035,2.632,1036,2.632,1037,2.632,1038,2.632,1039,3.761,1040,2.632,1041,2.632,1042,2.632,1043,2.632,1044,2.632,1045,2.632,1046,2.632,1047,3.761,1048,2.632,1049,2.632,1050,2.632,1051,2.632,1052,2.632,1053,2.632,1054,2.632,1055,2.632,1056,2.632,1057,2.632,1058,2.632,1059,2.632,1060,2.632,1061,2.632,1062,2.632,1063,2.632,1064,2.632,1065,2.632,1066,2.632,1067,2.632,1068,2.632,1069,2.632,1070,2.632,1071,2.632,1072,2.632,1073,2.632,1074,2.632,1075,2.632,1076,2.632,1077,2.632,1078,2.632,1079,2.632,1080,2.632,1081,2.632,1082,2.632,1083,2.632,1084,2.632,1085,2.632,1086,2.632,1087,2.632,1088,2.632,1089,2.632,1090,2.632,1091,2.632,1092,2.632,1093,2.632,1094,2.632,1095,2.632,1096,2.632,1097,2.632,1098,2.632,1099,2.632,1100,2.632,1101,2.632,1102,2.632,1103,2.632,1104,2.632,1105,2.632,1106,2.632,1107,2.632,1108,2.632,1109,2.632,1110,2.632,1111,2.632,1112,2.632,1113,2.632,1114,2.632,1115,2.632,1116,2.632,1117,2.632,1118,2.632,1119,2.632]],["title/classes/StatisticType.html",[0,0.125,1120,1.936]],["body/classes/StatisticType.html",[0,0.151,2,1.077,3,0.354,4,0.3,5,0.3,8,0.943,12,1.291,16,0.41,17,0.68,18,1.663,20,0.594,22,0.663,24,1.656,25,1.656,26,0.663,27,0.036,28,0.776,29,0.501,30,0.663,31,2.197,35,2.993,36,0.812,37,0.894,43,0.454,44,1.26,45,0.021,46,0.027,47,0.021,93,3.063,101,1.077,174,2.642,175,2.547,177,1.609,226,2.664,271,2.642,282,0.982,285,3.056,288,1.291,356,2.086,383,3.117,394,1.881,395,1.881,438,2.333,456,3.056,496,2.086,668,2.413,701,4.976,702,3.056,703,2.333,704,3.056,705,2.642,706,3.056,721,3.92,939,4.328,941,3.056,945,3.056,946,3.056,1120,3.605,1121,3.948,1122,2.642,1123,3.684,1124,3.684,1125,3.684,1126,3.684,1127,3.684,1128,4.726,1129,3.684,1130,3.684,1131,3.684,1132,3.684,1133,3.684,1134,3.684,1135,5.218,1136,5.218,1137,5.218,1138,4.726,1139,2.642,1140,3.056,1141,3.056,1142,3.056]],["title/classes/Statistics.html",[0,0.125,274,1.936]],["body/classes/Statistics.html",[0,0.149,2,1.065,3,0.35,4,0.297,5,0.297,8,0.936,13,2.321,16,0.405,17,0.675,18,1.767,20,0.757,22,0.697,24,1.644,25,1.644,26,0.656,27,0.036,28,0.463,29,0.526,30,0.656,31,2.445,43,0.35,44,1.384,45,0.02,46,0.026,47,0.02,80,0.727,226,2.396,274,3.592,280,3.929,282,1.251,288,1.644,291,2.972,292,3.892,294,3.892,295,3.592,318,2.584,434,3.424,435,4.306,658,4.817,662,4.706,668,2.396,936,3.892,1143,4.706,1144,3.022,1145,5.808,1146,3.643,1147,3.643,1148,5.191,1149,5.191,1150,5.191,1151,3.643,1152,3.643,1153,3.643]],["title/components/WeatherComponentComponent.html",[48,0.815,169,0.979]],["body/components/WeatherComponentComponent.html",[0,0.054,3,0.127,4,0.108,5,0.108,8,0.565,12,1.892,13,1.268,16,0.147,17,0.317,18,1.652,20,0.214,22,0.652,26,0.51,27,0.036,28,0.599,29,0.453,30,0.51,31,1.391,36,1.266,38,1.874,43,0.127,44,0.881,45,0.007,46,0.012,47,0.007,48,1.173,49,0.508,50,1.126,51,0.75,52,0.75,53,0.75,54,0.75,56,0.706,58,0.676,59,1.396,60,1.794,61,0.75,62,2.493,63,2.037,64,0.613,65,1.249,66,1.794,67,1.249,68,1.396,69,0.928,70,2.092,75,2.092,77,1.545,78,2.078,80,0.791,81,0.387,85,0.557,86,0.557,98,1.871,101,1.414,106,1.668,130,1.545,150,1.249,152,0.838,153,1.794,155,0.613,156,1.249,157,1.249,158,0.75,159,2.493,160,0.75,161,1.871,162,0.508,163,0.75,164,0.464,165,0.508,166,0.464,167,0.464,168,0.557,169,1.058,170,1.985,171,0.75,172,0.75,177,1.286,181,0.838,186,0.613,187,1.391,189,1.311,192,1.521,193,1.521,197,0.557,201,0.508,282,0.353,286,1.829,287,1.829,288,1.389,291,2.51,293,1.098,318,1.391,323,1.249,332,2.078,346,3.509,347,2.092,348,2.092,355,1.687,356,1.249,359,1.581,360,2.986,361,1.581,363,1.871,364,2.37,366,0.676,368,2.842,376,1.581,377,1.581,378,1.396,379,1.396,380,1.396,381,1.581,388,1.581,391,2.443,394,2.023,395,1.687,396,1.604,408,1.871,414,2.38,421,1.396,422,3.044,423,2.37,426,2.37,427,2.37,428,1.396,434,0.75,438,2.092,440,2.37,441,1.829,477,1.829,478,0.949,479,0.949,481,1.829,486,1.829,493,1.829,495,2.032,496,1.249,497,1.098,502,1.098,509,1.829,524,2.842,569,1.829,573,1.829,576,2.032,577,3.044,578,2.35,581,1.581,582,2.37,583,1.098,585,1.581,586,1.098,587,1.098,590,2.741,593,1.581,595,1.581,609,2.632,611,4.52,612,2.741,613,3.014,614,2.741,615,3.044,617,2.741,618,2.741,619,2.741,622,1.581,623,2.35,628,0.949,632,1.581,735,2.092,738,1.581,769,1.098,770,1.581,777,1.829,778,1.829,790,0.949,828,1.829,831,1.098,832,1.098,853,2.741,854,3.044,855,3.651,856,2.741,857,3.486,858,2.741,862,1.829,863,3.791,864,3.651,871,1.829,881,1.829,883,3.287,908,1.098,918,1.829,924,1.829,937,1.829,949,3.651,951,1.098,1154,3.736,1155,3.67,1156,3.67,1157,2.833,1158,2.833,1159,2.833,1160,2.833,1161,2.833,1162,2.833,1163,3.67,1164,2.833,1165,2.205,1166,3.304,1167,2.205,1168,1.324,1169,1.324,1170,1.324,1171,4.57,1172,1.324,1173,1.324,1174,2.205,1175,1.324,1176,2.205,1177,3.651,1178,3.963,1179,2.205,1180,4.402,1181,2.205,1182,3.963,1183,3.304,1184,3.304,1185,2.205,1186,2.205,1187,2.205,1188,2.205,1189,3.963,1190,2.205,1191,2.205,1192,3.304,1193,2.205,1194,2.205,1195,1.324,1196,2.205,1197,2.205,1198,2.741,1199,3.304,1200,2.205,1201,1.829,1202,2.205,1203,1.324,1204,1.324,1205,2.205,1206,3.304,1207,2.205,1208,2.205,1209,3.304,1210,2.833,1211,2.833,1212,2.205,1213,4.202,1214,2.833,1215,1.324,1216,2.205,1217,2.205,1218,2.205,1219,1.324,1220,3.304,1221,1.324,1222,2.205,1223,4.402,1224,1.324,1225,2.205,1226,1.324,1227,2.205,1228,1.324,1229,1.324,1230,1.098,1231,1.324,1232,1.324,1233,1.324,1234,1.324,1235,2.205,1236,1.324,1237,1.324,1238,1.324,1239,1.324,1240,1.324,1241,1.324,1242,1.324,1243,1.324,1244,1.324,1245,1.324,1246,1.324,1247,1.098,1248,1.324,1249,1.324,1250,2.205,1251,2.205,1252,1.324,1253,1.098,1254,3.304,1255,1.324,1256,3.67,1257,1.324,1258,1.324,1259,2.205,1260,1.324,1261,1.324,1262,1.324,1263,1.324,1264,1.324,1265,2.205,1266,3.304,1267,2.205,1268,2.205,1269,4.95,1270,2.205,1271,2.205,1272,2.205,1273,2.205,1274,2.205,1275,2.205,1276,2.205,1277,2.205,1278,2.205,1279,1.324,1280,4.402,1281,1.324,1282,1.324,1283,1.324,1284,1.324,1285,1.324,1286,1.324,1287,1.324,1288,1.324,1289,2.205,1290,2.205,1291,3.304,1292,1.324,1293,1.324,1294,1.324,1295,1.324,1296,2.205,1297,1.324,1298,1.324,1299,1.324,1300,1.324,1301,2.205,1302,2.205,1303,1.324,1304,1.324,1305,1.324,1306,2.205,1307,1.324,1308,1.324,1309,2.205,1310,2.205,1311,2.205,1312,1.324,1313,2.205,1314,2.205,1315,2.205,1316,1.324,1317,1.324,1318,1.324,1319,1.324,1320,1.324,1321,1.324,1322,1.324,1323,1.324,1324,1.324,1325,1.324,1326,1.324,1327,1.324,1328,1.324,1329,1.324,1330,1.324,1331,1.324,1332,1.324,1333,1.324,1334,1.324,1335,1.324,1336,1.324,1337,1.324]],["title/classes/WeatherData.html",[0,0.125,366,1.561]],["body/classes/WeatherData.html",[0,0.174,2,0.92,3,0.302,4,0.256,5,0.256,7,1.782,8,0.85,12,1.895,16,0.35,17,0.613,18,1.776,20,0.779,22,0.687,25,1.692,26,0.566,27,0.036,28,0.708,29,0.519,30,0.566,36,1.192,37,1.034,43,0.409,44,1.441,45,0.018,46,0.024,47,0.018,96,2.257,98,1.782,101,1.694,106,1.793,120,2.412,133,3.463,170,2.346,175,2.749,177,1.736,282,1.135,323,3.228,343,2.412,344,3.53,345,3.533,346,3.277,347,2.697,348,2.697,349,3.533,350,2.61,353,4.005,354,2.61,355,1.606,356,1.782,357,2.61,358,3.055,359,2.257,360,3.85,361,2.257,362,2.61,363,1.782,364,3.711,366,2.642,367,3.463,368,3.463,369,3.463,370,4.005,371,4.623,372,4.005,373,4.005,374,4.623,375,4.005,376,4.087,377,3.463,378,3.058,379,3.058,380,3.058,381,3.463,382,4.005,383,2.735,425,2.257,1338,3.147,1339,3.147,1340,3.147,1341,3.147,1342,3.147,1343,3.147]],["title/injectables/WeatherServiceService.html",[182,1.174,408,1.731]],["body/injectables/WeatherServiceService.html",[0,0.107,3,0.252,4,0.214,5,0.214,8,0.874,12,2.006,13,1.836,16,0.292,17,0.54,18,1.538,20,0.423,22,0.643,26,0.788,27,0.036,28,0.557,29,0.486,30,0.788,36,1.327,37,1.444,38,1.916,43,0.252,44,1,45,0.015,46,0.021,47,0.015,69,1.58,77,1.58,80,1.106,81,0.766,85,1.104,86,2.013,101,1.097,106,2.216,121,2.175,165,1.007,170,1.104,177,1.673,182,1.44,183,1.485,186,1.214,187,2.013,189,1.736,191,3.204,192,1.44,193,1.44,197,1.104,198,2.376,200,2.691,201,1.007,202,1.661,203,1.485,204,2.774,209,2.691,210,2.691,211,1.58,282,1,288,1.315,343,1.485,344,3.333,346,3.625,347,3.028,348,3.333,358,2.691,363,2.708,366,1.339,391,1.736,393,3.112,394,2.687,395,2.687,396,2.125,408,2.125,414,2.708,423,2.691,424,2.691,425,3.775,426,3.429,427,3.429,428,3.028,438,3.028,709,3.142,733,3.429,735,3.028,760,2.175,785,1.881,797,2.691,892,1.881,899,3.112,925,3.112,926,2.175,927,2.175,928,2.175,929,2.175,932,2.175,933,2.175,934,1.881,1177,4.597,1198,3.966,1201,3.112,1247,3.112,1253,3.112,1344,3.752,1345,3.752,1346,3.752,1347,3.752,1348,3.752,1349,3.752,1350,4.782,1351,3.752,1352,4.381,1353,3.752,1354,2.623,1355,3.752,1356,3.752,1357,4.782,1358,2.623,1359,3.752,1360,4.782,1361,3.752,1362,2.623,1363,4.782,1364,3.752,1365,3.752,1366,3.752,1367,3.752,1368,2.623,1369,2.623,1370,2.623,1371,2.623,1372,2.623,1373,2.623,1374,2.623,1375,2.623,1376,2.623,1377,2.623]],["title/coverage.html",[1378,3.465]],["body/coverage.html",[0,0.246,1,1.821,5,0.262,6,2.737,7,2.957,27,0.036,29,0.309,37,0.781,45,0.018,46,0.024,47,0.018,48,1.495,49,1.234,55,2.668,56,1.563,57,2.037,58,3.113,73,2.037,82,2.737,83,2.737,152,2.037,162,1.234,164,1.127,166,1.127,167,1.127,168,1.354,169,1.029,173,2.037,182,2.004,184,2.668,211,1.354,215,2.668,259,2.737,267,2.306,268,2.306,274,2.037,279,2.306,280,2.037,281,2.668,332,3.453,343,1.821,344,3.092,366,1.642,384,3.1,408,1.821,581,2.306,636,3.931,638,2.037,639,2.668,640,2.668,686,2.037,687,2.668,688,2.668,691,2.306,692,3.1,693,2.668,694,2.668,715,1.821,767,4.023,773,2.037,793,2.306,795,2.306,798,2.306,802,2.306,807,2.306,892,3.1,935,2.668,942,2.306,943,2.668,944,2.668,1120,2.037,1121,3.1,1122,3.1,1139,2.306,1143,2.668,1144,2.668,1154,3.1,1378,2.668,1379,3.216,1380,3.216,1381,3.216,1382,6.131,1383,5.902,1384,4.323,1385,3.216,1386,4.323,1387,4.323,1388,5.447,1389,3.586,1390,3.216,1391,4.323,1392,3.216,1393,4.323,1394,3.216,1395,3.216,1396,3.216,1397,3.216,1398,3.216,1399,4.883,1400,3.216,1401,3.216,1402,3.216,1403,3.216,1404,2.668,1405,3.586,1406,2.668,1407,3.586,1408,2.668,1409,2.668,1410,3.216]],["title/dependencies.html",[230,2.329,1411,2.551]],["body/dependencies.html",[27,0.036,45,0.025,46,0.03,47,0.025,81,1.279,180,2.771,199,3.772,230,2.771,232,3.138,246,4.362,247,3.772,253,3.629,265,3.629,783,3.629,788,3.629,1230,3.629,1412,4.375,1413,6.146,1414,4.375,1415,5.259,1416,4.375,1417,4.375,1418,4.375,1419,4.375,1420,3.629,1421,4.375,1422,4.375,1423,4.375,1424,4.375,1425,4.375,1426,4.375,1427,4.375,1428,4.375,1429,4.375,1430,4.375,1431,4.375,1432,4.375,1433,4.375,1434,4.375,1435,4.375,1436,4.375]],["title/index.html",[16,0.284,1437,2.551,1438,2.551]],["body/index.html",[4,0.341,27,0.029,28,0.531,45,0.023,46,0.029,47,0.023,48,1.473,63,1.934,211,1.759,242,2.997,419,3.466,607,3.466,758,4.778,934,3.668,1420,5.05,1439,4.179,1440,5.115,1441,4.179,1442,5.527,1443,5.527,1444,4.179,1445,4.179,1446,4.179,1447,5.909,1448,4.179,1449,4.179,1450,4.179,1451,4.179,1452,4.179,1453,4.179,1454,4.179,1455,4.179,1456,4.179,1457,4.179,1458,5.527,1459,5.527,1460,4.179,1461,5.909,1462,4.179,1463,4.179,1464,4.179,1465,4.179,1466,4.179,1467,4.179,1468,3.466,1469,5.115,1470,5.115,1471,5.76,1472,4.179,1473,5.115,1474,5.115,1475,4.179,1476,4.179,1477,4.179,1478,4.179,1479,5.527,1480,4.179,1481,4.179]],["title/modules.html",[229,2.365]],["body/modules.html",[27,0.032,45,0.027,46,0.032,47,0.027,228,3.103,229,2.774,239,2.774,247,3.514,1482,4.899,1483,4.899,1484,5.62,1485,4.899,1486,4.899]],["title/overview.html",[1487,3.465]],["body/overview.html",[2,1.271,27,0.035,45,0.024,46,0.029,47,0.024,50,2.221,155,2.013,162,2.356,164,1.971,166,1.971,167,1.971,169,1.8,183,2.464,201,1.67,228,4.035,229,2.464,230,2.755,231,3.609,232,3.12,233,3.609,234,3.12,235,3.609,236,3.609,237,3.609,238,3.609,239,3.185,240,3.319,241,3.609,242,3.12,269,2.755,637,3.609,703,2.755,1487,3.609,1488,4.351,1489,4.351,1490,4.351]],["title/routes.html",[269,2.645]],["body/routes.html",[27,0.032,45,0.028,46,0.032,47,0.028,269,3.162]],["title/miscellaneous/variables.html",[1491,2.116,1492,3.051]],["body/miscellaneous/variables.html",[13,1.388,14,2.289,15,1.846,16,0.402,27,0.036,28,0.657,29,0.595,36,0.797,37,0.877,45,0.02,46,0.026,47,0.02,58,3.149,93,2.64,101,1.056,167,1.267,169,1.157,192,2.172,193,2.172,206,2.593,259,2.289,267,2.593,268,3.349,279,3.349,384,2.593,434,2.047,458,2.593,496,2.047,642,2.957,703,2.289,705,2.593,767,2.593,789,3.873,790,3.349,791,2.999,792,3.873,793,3.349,794,2.999,795,3.349,796,2.999,797,2.593,798,3.349,799,2.999,800,2.999,801,2.999,802,3.349,803,2.999,804,2.999,805,2.999,806,2.999,807,3.349,816,3.873,824,2.999,1120,2.289,1121,2.593,1122,3.349,1139,3.349,1140,2.999,1141,2.999,1142,2.999,1154,2.593,1389,2.999,1404,2.999,1405,4.534,1406,2.999,1407,2.999,1408,3.873,1409,3.873,1468,3.873,1491,2.999,1492,2.999,1493,3.615,1494,3.615,1495,3.615,1496,5.659,1497,4.669,1498,3.615,1499,3.615,1500,3.615,1501,3.615,1502,3.615,1503,3.615,1504,4.669]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":332,"title":{},"body":{"classes/CalculatedProps.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["0.2",{"_index":1326,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.4s",{"_index":1327,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.5",{"_index":866,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0.5s",{"_index":1311,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.6s",{"_index":616,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["0.9.1",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["088",{"_index":861,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0ff",{"_index":865,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["1",{"_index":496,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["1.2s",{"_index":1321,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["1.5s",{"_index":614,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["1.6.0",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":627,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["100",{"_index":636,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["100px",{"_index":1306,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["108",{"_index":567,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["10px",{"_index":622,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["11",{"_index":1490,"title":{},"body":{"overview.html":{}}}],["11px",{"_index":856,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["12",{"_index":596,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["12/15",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["12px",{"_index":873,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["130px",{"_index":888,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["14/14",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":604,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["1500",{"_index":497,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["15px",{"_index":1309,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["19",{"_index":531,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["1px",{"_index":857,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["1s",{"_index":1310,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["2",{"_index":703,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":154,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["20px",{"_index":860,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["22",{"_index":594,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["22px",{"_index":1330,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["23.1688403",{"_index":526,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["250",{"_index":818,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["2560x1600.jpg",{"_index":1288,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["25px",{"_index":1307,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["270",{"_index":568,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["280px",{"_index":875,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["29/29",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":633,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["2s",{"_index":1316,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["3",{"_index":705,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["3.5.0",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":1336,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["30px",{"_index":630,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["32",{"_index":603,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["35",{"_index":599,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["38",{"_index":601,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["3px",{"_index":855,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["4",{"_index":1489,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":583,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["40vh",{"_index":1282,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["48px",{"_index":882,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["4px",{"_index":869,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["5",{"_index":637,"title":{},"body":{"components/MapComponentComponent.html":{},"overview.html":{}}}],["5/5",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":581,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["50px",{"_index":874,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["52",{"_index":110,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["53.1324886",{"_index":525,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["55px",{"_index":610,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["5px",{"_index":1319,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["6",{"_index":1488,"title":{},"body":{"overview.html":{}}}],["6.0.2",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1401,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":608,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["60px",{"_index":1308,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["65",{"_index":589,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["68",{"_index":598,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["6px",{"_index":1331,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["70px",{"_index":890,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["7px",{"_index":1318,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["8",{"_index":545,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["8.2.11",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["8.2.14",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["8.3.14",{"_index":1445,"title":{},"body":{"index.html":{}}}],["8/8",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1402,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":885,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["9",{"_index":527,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["90",{"_index":566,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["95px",{"_index":889,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["absolute",{"_index":592,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["actual_component",{"_index":172,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["adne",{"_index":910,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["adnie",{"_index":129,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["adres",{"_index":733,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["afterviewinit",{"_index":518,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["air",{"_index":64,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["airdata",{"_index":1,"title":{"classes/AirData.html":{}},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["airdata(item.current",{"_index":931,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["airly",{"_index":206,"title":{},"body":{"injectables/AirQualityService.html":{},"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["airly.eu",{"_index":893,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["airport",{"_index":1049,"title":{},"body":{"classes/StationList.html":{}}}],["airqualitycomponentcomponent",{"_index":49,"title":{"components/AirQualityComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["airqualitydata",{"_index":173,"title":{"classes/AirQualityData.html":{}},"body":{"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["airqualitydata(item.id",{"_index":212,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["airqualityservice",{"_index":73,"title":{"injectables/AirQualityService.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["aktualne",{"_index":1356,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["aktualnie",{"_index":39,"title":{},"body":{"classes/AirData.html":{}}}],["aktualnym",{"_index":1198,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["align",{"_index":1291,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["analizowanego",{"_index":1220,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["angular",{"_index":1442,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":197,"title":{},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["angular/compiler",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/i18n/i18n_ast",{"_index":786,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":180,"title":{},"body":{"classes/AirQualityData.html":{},"modules/AppRoutingModule.html":{},"classes/MeteoStatsData.html":{},"dependencies.html":{}}}],["animacje",{"_index":1237,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["animation",{"_index":611,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["api",{"_index":37,"title":{},"body":{"classes/AirData.html":{},"injectables/AirQualityService.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StatisticType.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/rest/aqindex/getindex/52",{"_index":195,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["apibaseurl",{"_index":707,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["apikey",{"_index":708,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["apiurl",{"_index":709,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["apiurlforecast",{"_index":1352,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["aplikacja",{"_index":94,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["aplikacji",{"_index":1235,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["app",{"_index":63,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"index.html":{}}}],["app.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":228,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":239,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":1214,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["area\").show",{"_index":1246,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["args",{"_index":548,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["around",{"_index":1324,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["array",{"_index":954,"title":{},"body":{"classes/StationList.html":{}}}],["artifacts",{"_index":1462,"title":{},"body":{"index.html":{}}}],["atmosferyczny",{"_index":649,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["attribution",{"_index":532,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["auto",{"_index":590,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["automatically",{"_index":1452,"title":{},"body":{"index.html":{}}}],["autopan",{"_index":815,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["autopananimation",{"_index":817,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["available",{"_index":1486,"title":{},"body":{"modules.html":{}}}],["average",{"_index":308,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["averagesum",{"_index":315,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["background",{"_index":863,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["backwards",{"_index":619,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["bartoszow",{"_index":1042,"title":{},"body":{"classes/StationList.html":{}}}],["bazowy",{"_index":732,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["bedzie",{"_index":33,"title":{},"body":{"classes/AirData.html":{}}}],["belsk",{"_index":1060,"title":{},"body":{"classes/StationList.html":{}}}],["biala",{"_index":1106,"title":{},"body":{"classes/StationList.html":{}}}],["bialystok",{"_index":1012,"title":{},"body":{"classes/StationList.html":{}}}],["białegostoku",{"_index":500,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["białymstoku",{"_index":417,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["bielany",{"_index":1028,"title":{},"body":{"classes/StationList.html":{}}}],["bielsko",{"_index":1105,"title":{},"body":{"classes/StationList.html":{}}}],["black",{"_index":635,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["block",{"_index":587,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["bootstrap",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":632,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["bottom",{"_index":629,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["box",{"_index":853,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["brak",{"_index":850,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["break",{"_index":764,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["browse",{"_index":1484,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["brwinow",{"_index":1025,"title":{},"body":{"classes/StationList.html":{}}}],["build",{"_index":1461,"title":{},"body":{"index.html":{}}}],["button",{"_index":621,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["będ",{"_index":356,"title":{},"body":{"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["będzie",{"_index":134,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["błędzie",{"_index":1217,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["c",{"_index":1269,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ca",{"_index":118,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["calculatedprops",{"_index":280,"title":{"classes/CalculatedProps.html":{}},"body":{"classes/CalculatedProps.html":{},"classes/Statistics.html":{},"coverage.html":{}}}],["caqi",{"_index":841,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["case",{"_index":762,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["catcherror",{"_index":927,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["catcherror((error",{"_index":932,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["cccccc",{"_index":872,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["center",{"_index":524,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["centralnej",{"_index":463,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["centralresults",{"_index":397,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["change",{"_index":1454,"title":{},"body":{"index.html":{}}}],["chart",{"_index":1213,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["chart.js",{"_index":1230,"title":{},"body":{"components/WeatherComponentComponent.html":{},"dependencies.html":{}}}],["chce",{"_index":138,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["chcemy",{"_index":112,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/MeteoStatsService.html":{}}}],["check",{"_index":607,"title":{},"body":{"components/MapComponentComponent.html":{},"index.html":{}}}],["chmurki",{"_index":806,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["chojnice",{"_index":1000,"title":{},"body":{"classes/StationList.html":{}}}],["city",{"_index":605,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["citywinddegresults",{"_index":398,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["citywindspeedresults",{"_index":399,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["ciśnienia",{"_index":292,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/Statistics.html":{}}}],["ciśnienie",{"_index":380,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["ciśnienu",{"_index":1149,"title":{},"body":{"classes/Statistics.html":{}}}],["class",{"_index":0,"title":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/WeatherData.html":{}},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/WeatherData.html":{},"overview.html":{}}}],["cli",{"_index":1443,"title":{},"body":{"index.html":{}}}],["closer",{"_index":811,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["closer:after",{"_index":886,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudcontainer",{"_index":807,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloudimage",{"_index":891,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudoverlay",{"_index":819,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudoverlay.setposition(args.coordinate",{"_index":836,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudoverlay.setposition(undefined",{"_index":822,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudpopup",{"_index":887,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cluster_appmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":104,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["code",{"_index":1456,"title":{},"body":{"index.html":{}}}],["color",{"_index":864,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["column",{"_index":1294,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["compat",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":48,"title":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":161,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.css",{"_index":66,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.html",{"_index":68,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts",{"_index":58,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component.component.ts:108",{"_index":1175,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:109",{"_index":447,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:11",{"_index":74,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["component.component.ts:122",{"_index":432,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:15",{"_index":76,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["component.component.ts:155",{"_index":1168,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:18",{"_index":79,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["component.component.ts:23",{"_index":471,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:25",{"_index":1229,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:27",{"_index":473,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:29",{"_index":1219,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:31",{"_index":461,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:33",{"_index":1215,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:35",{"_index":475,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:37",{"_index":1221,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:39",{"_index":466,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:41",{"_index":1228,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:43",{"_index":409,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:45",{"_index":1226,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:49",{"_index":1224,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:50",{"_index":1167,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:55",{"_index":452,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:57",{"_index":779,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component.component.ts:58",{"_index":1203,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:61",{"_index":774,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component.component.ts:70",{"_index":1204,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:72",{"_index":775,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component.component.ts:73",{"_index":413,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:83",{"_index":1195,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:85",{"_index":444,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:97",{"_index":450,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component/air",{"_index":57,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["component/stats",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":160,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["components",{"_index":50,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"overview.html":{}}}],["components/air",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/quality/quality",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/stats",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/weather/weather",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["console.log(args.coordinate",{"_index":549,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["console.log(data[0].list[0].wind.deg",{"_index":503,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["console.log(lonlat",{"_index":554,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["console.log(records",{"_index":832,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["console.log(results",{"_index":89,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["console.log(this.citywindspeedresults",{"_index":513,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["const",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"classes/StatisticType.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(current",{"_index":21,"title":{},"body":{"classes/AirData.html":{}}}],["constructor(date",{"_index":666,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["constructor(http",{"_index":186,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(id",{"_index":174,"title":{},"body":{"classes/AirQualityData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{}}}],["constructor(list",{"_index":351,"title":{},"body":{"classes/ForecastData.html":{}}}],["constructor(min",{"_index":313,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["constructor(name",{"_index":1338,"title":{},"body":{"classes/WeatherData.html":{}}}],["constructor(private",{"_index":85,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(public",{"_index":941,"title":{},"body":{"classes/Station.html":{},"classes/StatisticType.html":{}}}],["constructor(service",{"_index":72,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["constructor(temperature",{"_index":1146,"title":{},"body":{"classes/Statistics.html":{}}}],["container",{"_index":626,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["content",{"_index":576,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["content\").animate",{"_index":1242,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content/uploads/2017/03/sun",{"_index":1284,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__chart",{"_index":1211,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__chart\").show",{"_index":1245,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__left",{"_index":579,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["content__my",{"_index":1333,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__right",{"_index":584,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["content__table",{"_index":1210,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__table\").show",{"_index":1244,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["context",{"_index":1408,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["copernicus",{"_index":1048,"title":{},"body":{"classes/StationList.html":{}}}],["copy",{"_index":533,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["coverage",{"_index":1378,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":19,"title":{},"body":{"classes/AirData.html":{}}}],["custom",{"_index":1334,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["czas",{"_index":359,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["czasie",{"_index":1222,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["czasowym",{"_index":325,"title":{},"body":{"classes/CalculatedProps.html":{},"injectables/MeteoStatsService.html":{}}}],["czestochowa",{"_index":1086,"title":{},"body":{"classes/StationList.html":{}}}],["czy",{"_index":1128,"title":{},"body":{"classes/StatisticType.html":{}}}],["czyli",{"_index":285,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/StatisticType.html":{}}}],["cząca",{"_index":695,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["części",{"_index":464,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["daily",{"_index":765,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["daje",{"_index":1347,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["dane",{"_index":12,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["danej",{"_index":697,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["danych",{"_index":391,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["danym",{"_index":323,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["danymi",{"_index":441,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["darmowe",{"_index":1346,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["dat",{"_index":97,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{}}}],["data",{"_index":150,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/WeatherComponentComponent.html":{}}}],["data.ts",{"_index":640,"title":{},"body":{"classes/MeteoStatsData.html":{},"coverage.html":{}}}],["data.ts:25",{"_index":674,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:26",{"_index":681,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:27",{"_index":683,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:28",{"_index":682,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:29",{"_index":676,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:30",{"_index":679,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:31",{"_index":678,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:32",{"_index":684,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:33",{"_index":685,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:34",{"_index":675,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:35",{"_index":680,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:36",{"_index":677,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:8",{"_index":667,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data[0].list[0].main.temp_max",{"_index":1255,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[0].main.temp_min",{"_index":1257,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[0].weather[0].icon",{"_index":1258,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[i+1].main.temp_min",{"_index":1259,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[i].main.temp_max",{"_index":1263,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[i].main.temp_min",{"_index":1264,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data].map((item",{"_index":210,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["datacount",{"_index":316,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["datacount).tofixed(2).tostring",{"_index":342,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["date",{"_index":314,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{}}}],["date.getdate",{"_index":1261,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["date.getmonth()+1",{"_index":1262,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["datefrom",{"_index":716,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["dateto",{"_index":717,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["daty",{"_index":303,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["ddawane",{"_index":439,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["deblin",{"_index":1066,"title":{},"body":{"classes/StationList.html":{}}}],["declarations",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":479,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["decoration",{"_index":884,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["default",{"_index":192,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["deg",{"_index":624,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["delay",{"_index":615,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["dependencies",{"_index":230,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["dev",{"_index":1449,"title":{},"body":{"index.html":{}}}],["development",{"_index":1446,"title":{},"body":{"index.html":{}}}],["direction",{"_index":1293,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["directive",{"_index":158,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["directives",{"_index":171,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1460,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1465,"title":{},"body":{"index.html":{}}}],["display",{"_index":577,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["dist",{"_index":1464,"title":{},"body":{"index.html":{}}}],["dla",{"_index":38,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"classes/Station.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["dni",{"_index":348,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["dniowych",{"_index":1132,"title":{},"body":{"classes/StatisticType.html":{}}}],["document).ready(function",{"_index":493,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["document.getelementbyid(\"inputlat",{"_index":560,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["document.getelementbyid(\"inputlon",{"_index":562,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["document.getelementbyid('cloudpopup",{"_index":812,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["document.getelementbyid('popup",{"_index":810,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["documentation",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["dodanie",{"_index":498,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["dom",{"_index":53,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["don't",{"_index":372,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["dostępne",{"_index":1123,"title":{},"body":{"classes/StatisticType.html":{}}}],["drawchart",{"_index":1163,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["druga",{"_index":536,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["du",{"_index":119,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["duration",{"_index":613,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["dwóch",{"_index":1238,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dynamic",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["dzienne",{"_index":704,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["dziennie",{"_index":897,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["dzienny",{"_index":1141,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["dzięki",{"_index":1184,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["długo",{"_index":920,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["długości",{"_index":794,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1476,"title":{},"body":{"index.html":{}}}],["elblag",{"_index":982,"title":{},"body":{"classes/StationList.html":{}}}],["element",{"_index":157,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["encapsulation",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":758,"title":{},"body":{"injectables/MeteoStatsService.html":{},"index.html":{}}}],["endpointów",{"_index":1370,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["environment",{"_index":1405,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epsg:3857",{"_index":552,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["epsg:4326",{"_index":553,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["error",{"_index":1249,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["errormsg",{"_index":1155,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["events",{"_index":880,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["exceeded",{"_index":907,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["execute",{"_index":1473,"title":{},"body":{"index.html":{}}}],["expansion",{"_index":620,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["exports",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":824,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1297,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ffffff",{"_index":1280,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["files",{"_index":1455,"title":{},"body":{"index.html":{}}}],["fill",{"_index":617,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["flag",{"_index":1467,"title":{},"body":{"index.html":{}}}],["flex",{"_index":578,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["font",{"_index":1296,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["forecastdata",{"_index":343,"title":{"classes/ForecastData.html":{}},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["forecastdata(item.list",{"_index":1377,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["formsmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["frame",{"_index":631,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["full",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":547,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["funkcj",{"_index":1186,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["funkcja",{"_index":414,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["funkcjami",{"_index":1344,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["funkcji",{"_index":422,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["further",{"_index":1478,"title":{},"body":{"index.html":{}}}],["g/m3",{"_index":838,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["gdansk",{"_index":977,"title":{},"body":{"classes/StationList.html":{}}}],["gdynia",{"_index":975,"title":{},"body":{"classes/StationList.html":{}}}],["gdzie",{"_index":125,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["generate",{"_index":1458,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1441,"title":{},"body":{"index.html":{}}}],["geograficzn",{"_index":921,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["geograficzna",{"_index":922,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["geograficznej",{"_index":792,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["get(`${this.apiurlforecast}${term}&appid=b742a4225977a8a94a092feb673aad31&units=metric",{"_index":1376,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["get(`${this.apiurl}${term}&appid=9a3485ea70ca20151b5d5d7b29054807&units=metric",{"_index":1371,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["get(`${this.apiurl}&lat=${lat}&lng=${lng}&apikey=sv8wb734fm470c2hys8atebfrng5lzu9",{"_index":930,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["get(this.api",{"_index":205,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["get(this.apiurl",{"_index":760,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/WeatherServiceService.html":{}}}],["getairdata",{"_index":185,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{}}}],["getairdata(lat",{"_index":914,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["getairdata(latitude",{"_index":830,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["getdatabialystok",{"_index":403,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatabialystok(term",{"_index":412,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatacitycheck",{"_index":404,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatacitycheck(term",{"_index":431,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatakrakow",{"_index":405,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatakrakow(term",{"_index":443,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatapoznan",{"_index":406,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatapoznan(term",{"_index":446,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatawarszawa",{"_index":407,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatawarszawa(term",{"_index":449,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getforecastservice",{"_index":1164,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getforecastservice(term",{"_index":1174,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getstatsdata",{"_index":711,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getstatsdata(type",{"_index":714,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getting",{"_index":1437,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":712,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["gettype(type",{"_index":727,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getweatherdata",{"_index":1201,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherdata(term",{"_index":1247,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherforecastdata",{"_index":423,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherforecastdata(term",{"_index":1253,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherservice",{"_index":1165,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getweatherservice(term",{"_index":1194,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["go",{"_index":419,"title":{},"body":{"components/MapComponentComponent.html":{},"index.html":{}}}],["godzinowe",{"_index":702,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["godzinowy",{"_index":1140,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["godzinowych",{"_index":1131,"title":{},"body":{"classes/StatisticType.html":{}}}],["goleniow",{"_index":992,"title":{},"body":{"classes/StationList.html":{}}}],["gora",{"_index":1039,"title":{},"body":{"classes/StationList.html":{}}}],["gorzow",{"_index":1014,"title":{},"body":{"classes/StationList.html":{}}}],["gradient(#626d329f,#6e5f33af",{"_index":1314,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["graph",{"_index":1485,"title":{},"body":{"modules.html":{}}}],["głownej",{"_index":1234,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["głownych",{"_index":1239,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["główna",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["głównej",{"_index":411,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["głęboko",{"_index":651,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["h2",{"_index":1295,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["hammerjs",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":582,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["height:0px",{"_index":1325,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["hel",{"_index":973,"title":{},"body":{"classes/StationList.html":{}}}],["help",{"_index":1479,"title":{},"body":{"index.html":{}}}],["historyczne",{"_index":736,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["hourly",{"_index":763,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["hpa",{"_index":1274,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["html",{"_index":156,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["http",{"_index":189,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["http://api.gios.gov.pl/pjp",{"_index":194,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["http://localhost:4200",{"_index":1451,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":187,"title":{},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["httpclientmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":925,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["https://airapi.airly.eu/v2/measurements/nearest?indextype=airly_caqi&maxdistancekm=100",{"_index":923,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["https://api.meteostat.net/v1/history",{"_index":730,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["https://api.openweathermap.org/data/2.5/forecast?q",{"_index":1364,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["https://api.openweathermap.org/data/2.5/weather?q",{"_index":1361,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["ich",{"_index":1179,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["icon",{"_index":623,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["id",{"_index":93,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":787,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["ikonka",{"_index":382,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["img",{"_index":588,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["implements",{"_index":59,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["import",{"_index":80,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["imports",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["indywidualy",{"_index":1135,"title":{},"body":{"classes/StatisticType.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["informacj",{"_index":729,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["informacja",{"_index":1216,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["informacje",{"_index":434,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["inicajlizująca",{"_index":453,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inicjowanie",{"_index":776,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["inicjue",{"_index":1205,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["inicująca",{"_index":1176,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["initmap",{"_index":521,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["injectable",{"_index":182,"title":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["injectables",{"_index":183,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"overview.html":{}}}],["inputlat",{"_index":559,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inputlat.setattribute('value',lat",{"_index":563,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inputlon",{"_index":561,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inputlon.setattribute('value',lon",{"_index":564,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["interpretujący",{"_index":803,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["irena",{"_index":1067,"title":{},"body":{"classes/StationList.html":{}}}],["isnull",{"_index":1231,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["item.main",{"_index":1374,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["item.stindexlevel",{"_index":213,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["item.stsourcedatadate",{"_index":214,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["item.visibility",{"_index":1373,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["item.weather",{"_index":1375,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["items",{"_index":1292,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["jakie",{"_index":1127,"title":{},"body":{"classes/StatisticType.html":{}}}],["jako",{"_index":109,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{}}}],["jakości",{"_index":14,"title":{},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"miscellaneous/variables.html":{}}}],["jasionka",{"_index":1099,"title":{},"body":{"classes/StationList.html":{}}}],["jej",{"_index":950,"title":{},"body":{"classes/StationList.html":{}}}],["jelenia",{"_index":1076,"title":{},"body":{"classes/StationList.html":{}}}],["jest",{"_index":899,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["jeśli",{"_index":111,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["jquery",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":1290,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["kalisz",{"_index":1052,"title":{},"body":{"classes/StationList.html":{}}}],["kalsy",{"_index":953,"title":{},"body":{"classes/StationList.html":{}}}],["karma",{"_index":1475,"title":{},"body":{"index.html":{}}}],["kasprowy",{"_index":1110,"title":{},"body":{"classes/StationList.html":{}}}],["katowice",{"_index":1090,"title":{},"body":{"classes/StationList.html":{}}}],["kay",{"_index":207,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["ketrzyn",{"_index":984,"title":{},"body":{"classes/StationList.html":{}}}],["key=xwftslqc",{"_index":740,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["kiedy",{"_index":304,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["kielce",{"_index":1094,"title":{},"body":{"classes/StationList.html":{}}}],["kierunek",{"_index":416,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{}}}],["kierunkach",{"_index":467,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["kierunku",{"_index":436,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["kierunków",{"_index":389,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["klaasy",{"_index":410,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["klasa",{"_index":282,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["klasy",{"_index":25,"title":{},"body":{"classes/AirData.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/WeatherData.html":{}}}],["klikniętego",{"_index":40,"title":{},"body":{"classes/AirData.html":{}}}],["klodzko",{"_index":1080,"title":{},"body":{"classes/StationList.html":{}}}],["klucz",{"_index":743,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["know",{"_index":373,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["kolejne",{"_index":901,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["kolo",{"_index":1021,"title":{},"body":{"classes/StationList.html":{}}}],["kolobrzeg",{"_index":960,"title":{},"body":{"classes/StationList.html":{}}}],["komponent",{"_index":385,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["komunikat",{"_index":905,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["konkretnej",{"_index":751,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["konkretnie",{"_index":747,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["konstruktor",{"_index":24,"title":{},"body":{"classes/AirData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{}}}],["korzysta",{"_index":114,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["kostruktor",{"_index":353,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["koszalin",{"_index":962,"title":{},"body":{"classes/StationList.html":{}}}],["kozienice",{"_index":1064,"title":{},"body":{"classes/StationList.html":{}}}],["kraju",{"_index":465,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["krakow",{"_index":1092,"title":{},"body":{"classes/StationList.html":{}}}],["krakowie",{"_index":445,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["któr",{"_index":369,"title":{},"body":{"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"classes/WeatherData.html":{}}}],["która",{"_index":32,"title":{},"body":{"classes/AirData.html":{},"components/MapComponentComponent.html":{}}}],["które",{"_index":481,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["którego",{"_index":734,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{}}}],["której",{"_index":355,"title":{},"body":{"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["którgo",{"_index":1363,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["l",{"_index":782,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["l.map('map",{"_index":523,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":529,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["lat",{"_index":557,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["latitude",{"_index":793,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lato",{"_index":1298,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["layers",{"_index":539,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["leaflet",{"_index":783,"title":{},"body":{"components/QualityComponentComponent.html":{},"dependencies.html":{}}}],["leba",{"_index":969,"title":{},"body":{"classes/StationList.html":{}}}],["lebork",{"_index":971,"title":{},"body":{"classes/StationList.html":{}}}],["left",{"_index":595,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["legend",{"_index":155,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"overview.html":{}}}],["legionowo",{"_index":1030,"title":{},"body":{"classes/StationList.html":{}}}],["legnica",{"_index":1041,"title":{},"body":{"classes/StationList.html":{}}}],["lesko",{"_index":1116,"title":{},"body":{"classes/StationList.html":{}}}],["leszno",{"_index":1044,"title":{},"body":{"classes/StationList.html":{}}}],["letter",{"_index":1303,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["liczone",{"_index":900,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["limit",{"_index":906,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["limitu",{"_index":903,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["linear",{"_index":1313,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["list",{"_index":120,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"classes/WeatherData.html":{}}}],["list.ts",{"_index":944,"title":{},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["list.ts:11",{"_index":952,"title":{},"body":{"classes/StationList.html":{}}}],["lista",{"_index":948,"title":{},"body":{"classes/StationList.html":{}}}],["lng",{"_index":915,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["lodz",{"_index":1056,"title":{},"body":{"classes/StationList.html":{}}}],["lon",{"_index":555,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["long",{"_index":565,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["longitude",{"_index":795,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lonlat",{"_index":550,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["lonlat[0",{"_index":556,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["lonlat[1",{"_index":558,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["lub",{"_index":293,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["lublin",{"_index":1071,"title":{},"body":{"classes/StationList.html":{}}}],["ma",{"_index":105,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["macierz",{"_index":354,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["main",{"_index":374,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["mainpage",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["maj",{"_index":429,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["maksymaln",{"_index":287,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["maksymalna",{"_index":379,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["maksymalne",{"_index":1225,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["maksymalnej",{"_index":672,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["maksymalnych",{"_index":298,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["mamy",{"_index":723,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["map",{"_index":165,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["map\").animate",{"_index":494,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["map((data",{"_index":209,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["map__bialystok",{"_index":591,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["map__krakow",{"_index":597,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["map__poznan",{"_index":602,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["map__warszawa",{"_index":600,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["mapa",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["mapcomponentcomponent",{"_index":164,"title":{"components/MapComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapie",{"_index":390,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["mapy",{"_index":387,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["margin",{"_index":609,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["marker",{"_index":859,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":309,"title":{},"body":{"classes/CalculatedProps.html":{},"components/QualityComponentComponent.html":{}}}],["max.tostring",{"_index":338,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["max/min",{"_index":361,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["maxdate",{"_index":310,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["maxdate.tostring",{"_index":340,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["maxtemp",{"_index":1254,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["maxzoom",{"_index":530,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["message",{"_index":785,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["metadata",{"_index":61,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["meteo",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"classes/MeteoStatsModel.html":{}}}],["meteoapp",{"_index":1439,"title":{},"body":{"index.html":{}}}],["meteostat",{"_index":696,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["meteostatdata",{"_index":669,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["meteostatsdata",{"_index":638,"title":{"classes/MeteoStatsData.html":{}},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["meteostatsmodel",{"_index":686,"title":{"classes/MeteoStatsModel.html":{}},"body":{"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["meteostatsservice",{"_index":691,"title":{"injectables/MeteoStatsService.html":{}},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["methods",{"_index":69,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miasta",{"_index":368,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["miasto",{"_index":573,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["miejsc",{"_index":122,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["miejsca",{"_index":41,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{}}}],["miejscowo",{"_index":428,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/Station.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miejscowości",{"_index":396,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/Station.html":{},"classes/StationList.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miejscowościach",{"_index":469,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["miejscu",{"_index":852,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["miejsowo",{"_index":1193,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["miesięczne",{"_index":706,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["miesięczny",{"_index":1142,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["miesięcznych",{"_index":1133,"title":{},"body":{"classes/StatisticType.html":{}}}],["mieście",{"_index":509,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["mikolajki",{"_index":1008,"title":{},"body":{"classes/StationList.html":{}}}],["min",{"_index":311,"title":{},"body":{"classes/CalculatedProps.html":{},"components/QualityComponentComponent.html":{}}}],["min.tostring",{"_index":334,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minadate",{"_index":312,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minadate.tostring",{"_index":336,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minimaln",{"_index":286,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["minimalna",{"_index":378,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["minimalne",{"_index":1227,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["minimalnej",{"_index":671,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["minimalnych",{"_index":297,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["mintemp",{"_index":1256,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["miscellaneous",{"_index":1491,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mlawa",{"_index":1004,"title":{},"body":{"classes/StationList.html":{}}}],["mode",{"_index":618,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["model",{"_index":689,"title":{},"body":{"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{}}}],["model.ts",{"_index":688,"title":{},"body":{"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["model.ts:7",{"_index":690,"title":{},"body":{"classes/MeteoStatsModel.html":{}}}],["models/station",{"_index":956,"title":{},"body":{"classes/StationList.html":{}}}],["models/stats",{"_index":752,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["module",{"_index":201,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"overview.html":{}}}],["module.ts",{"_index":7,"title":{},"body":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{},"coverage.html":{}}}],["module.ts:11",{"_index":42,"title":{},"body":{"classes/AirData.html":{}}}],["module.ts:14",{"_index":1341,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:15",{"_index":1342,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:16",{"_index":1340,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:17",{"_index":1343,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:24",{"_index":352,"title":{},"body":{"classes/ForecastData.html":{}}}],["module.ts:3",{"_index":179,"title":{},"body":{"classes/AirQualityData.html":{}}}],["module.ts:31",{"_index":365,"title":{},"body":{"classes/ForecastData.html":{}}}],["module.ts:4",{"_index":23,"title":{},"body":{"classes/AirData.html":{}}}],["module.ts:5",{"_index":1339,"title":{},"body":{"classes/WeatherData.html":{}}}],["modules",{"_index":229,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mog",{"_index":115,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/Station.html":{}}}],["momencie",{"_index":376,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["monthly",{"_index":766,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["more",{"_index":1480,"title":{},"body":{"index.html":{}}}],["movetobottom",{"_index":612,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["movetoleft",{"_index":1320,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["możemy",{"_index":1365,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["możliwo",{"_index":1348,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["możliwych",{"_index":945,"title":{},"body":{"classes/StationList.html":{},"classes/StatisticType.html":{}}}],["móg",{"_index":135,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["na",{"_index":106,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["nacisnięcie",{"_index":1207,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["najbliższe",{"_index":347,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["najmniejszej",{"_index":331,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["największej",{"_index":328,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["następujących",{"_index":646,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["nasłonecznienie",{"_index":655,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["nav",{"_index":1281,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav\").fadeto(\"slow",{"_index":1243,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__btn",{"_index":1317,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__btn:hover",{"_index":1322,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__input",{"_index":1305,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__input:hover",{"_index":1312,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__error",{"_index":1328,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["navigate",{"_index":1450,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1279,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nazw",{"_index":951,"title":{},"body":{"classes/StationList.html":{},"components/WeatherComponentComponent.html":{}}}],["nazwa",{"_index":367,"title":{},"body":{"classes/ForecastData.html":{},"classes/Station.html":{},"classes/WeatherData.html":{}}}],["nazwy",{"_index":937,"title":{},"body":{"classes/Station.html":{},"components/WeatherComponentComponent.html":{}}}],["new",{"_index":211,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":1420,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":519,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["ngmodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":70,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["nie",{"_index":908,"title":{},"body":{"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["niegu",{"_index":650,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["niej",{"_index":1173,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["none",{"_index":881,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["northresults",{"_index":400,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["nowy",{"_index":1113,"title":{},"body":{"classes/StationList.html":{}}}],["null",{"_index":1252,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["number",{"_index":175,"title":{},"body":{"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/WeatherData.html":{}}}],["numer",{"_index":939,"title":{},"body":{"classes/Station.html":{},"classes/StatisticType.html":{}}}],["o",{"_index":13,"title":{},"body":{"classes/AirData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["obiekt",{"_index":642,"title":{},"body":{"classes/MeteoStatsData.html":{},"components/QualityComponentComponent.html":{},"classes/Station.html":{},"miscellaneous/variables.html":{}}}],["obiektu",{"_index":668,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{}}}],["obiektów",{"_index":647,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["obieku",{"_index":10,"title":{},"body":{"classes/AirData.html":{}}}],["object",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obok",{"_index":126,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["obrazu",{"_index":805,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":191,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["observable.throw(error.message",{"_index":933,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["od",{"_index":725,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["odczuwalna",{"_index":377,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["odczytane",{"_index":349,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["odpowiadająca",{"_index":790,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["odpowied",{"_index":781,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["odpowiedni",{"_index":143,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["odpowiednie",{"_index":486,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["odpowiedniego",{"_index":99,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["odpowiedzialny",{"_index":768,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["odtępach",{"_index":1130,"title":{},"body":{"classes/StatisticType.html":{}}}],["odwoluje",{"_index":433,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["odwołuje",{"_index":421,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["odwołujemy",{"_index":1172,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["okecie",{"_index":1032,"title":{},"body":{"classes/StationList.html":{}}}],["okien",{"_index":1240,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["określa",{"_index":1126,"title":{},"body":{"classes/StatisticType.html":{}}}],["określająca",{"_index":383,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"classes/WeatherData.html":{}}}],["określający",{"_index":363,"title":{},"body":{"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["określonych",{"_index":719,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["określonym",{"_index":750,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["ol",{"_index":788,"title":{},"body":{"components/QualityComponentComponent.html":{},"dependencies.html":{}}}],["ol.layer.tile",{"_index":540,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.map",{"_index":537,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.overlay",{"_index":814,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.proj.fromlonlat([23.1688403",{"_index":544,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.proj.transform(args.coordinate",{"_index":551,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.source.osm",{"_index":541,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.view",{"_index":543,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["olsztyn",{"_index":1006,"title":{},"body":{"classes/StationList.html":{}}}],["ona",{"_index":127,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["oninit",{"_index":60,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["opacity",{"_index":495,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["opad",{"_index":648,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["openstreetmap",{"_index":534,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["openweathermap.org",{"_index":425,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["opeweathermap.org",{"_index":350,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["opis",{"_index":843,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["opisanym",{"_index":917,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["opisująca",{"_index":345,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["opisujące",{"_index":1359,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["opole",{"_index":1082,"title":{},"body":{"classes/StationList.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["opłaty",{"_index":911,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["oraz",{"_index":288,"title":{},"body":{"classes/CalculatedProps.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["osatecznie",{"_index":283,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["ospowiednie",{"_index":1181,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ostroleka",{"_index":1010,"title":{},"body":{"classes/StationList.html":{}}}],["otrzymane",{"_index":437,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["out",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":1337,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["overlay",{"_index":813,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overlay,cloudoverlay",{"_index":826,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overlay.setposition(args.coordinate",{"_index":835,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overlay.setposition(undefined",{"_index":821,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overlays",{"_index":825,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overview",{"_index":1487,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1411,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":871,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["param",{"_index":44,"title":{},"body":{"classes/AirData.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["parametr",{"_index":427,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["parametrach",{"_index":720,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["parametrami",{"_index":375,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["path",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["peakgust",{"_index":656,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pi",{"_index":1360,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["pierwsza",{"_index":516,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pierwszej",{"_index":1241,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pila",{"_index":998,"title":{},"body":{"classes/StationList.html":{}}}],["pipe",{"_index":198,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["pięciodniow",{"_index":1351,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["plock",{"_index":1023,"title":{},"body":{"classes/StationList.html":{}}}],["pm1",{"_index":837,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pm10",{"_index":839,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pm25",{"_index":840,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["po",{"_index":91,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["pobiera",{"_index":424,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["pobierająca",{"_index":415,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{}}}],["pobierających",{"_index":455,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pobierającymi",{"_index":1345,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["pobieramy",{"_index":924,"title":{},"body":{"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["pobierane",{"_index":735,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["pobieranie",{"_index":770,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["pobierz",{"_index":146,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pobior",{"_index":482,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pobra",{"_index":726,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["pobran",{"_index":670,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pobrane",{"_index":35,"title":{},"body":{"classes/AirData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/StatisticType.html":{}}}],["pobranego",{"_index":499,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pobrania",{"_index":1349,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["pobranie",{"_index":746,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["pobrany",{"_index":673,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pobranych",{"_index":644,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pod",{"_index":1180,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["poda",{"_index":370,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["podane",{"_index":300,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["podanej",{"_index":1200,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["podanym",{"_index":699,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["podmuch",{"_index":654,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["podstawie",{"_index":483,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["podstawowe",{"_index":1236,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pogod",{"_index":364,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["pogoda",{"_index":1266,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pogodowe",{"_index":358,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pogodowej",{"_index":955,"title":{},"body":{"classes/StationList.html":{}}}],["pogody",{"_index":346,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pointer",{"_index":879,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pojawi",{"_index":485,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pojawia",{"_index":904,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["poka",{"_index":1209,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["policzone",{"_index":936,"title":{},"body":{"classes/Station.html":{},"classes/Statistics.html":{}}}],["polsce",{"_index":102,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pom",{"_index":965,"title":{},"body":{"classes/StationList.html":{}}}],["pomiar",{"_index":140,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiarowego",{"_index":100,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiarowych",{"_index":123,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiaru",{"_index":98,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["pomiary",{"_index":1129,"title":{},"body":{"classes/StatisticType.html":{}}}],["poprzenie",{"_index":514,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["poprzez",{"_index":918,"title":{},"body":{"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["popup",{"_index":867,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popup:after",{"_index":876,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popup:before",{"_index":877,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popupa",{"_index":801,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["popupcloser",{"_index":802,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["popupcloser.blur",{"_index":823,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popupcloser.onclick",{"_index":820,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popupcontainer",{"_index":798,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":585,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["postaci",{"_index":458,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["powietrza",{"_index":15,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"miscellaneous/variables.html":{}}}],["poziom",{"_index":842,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["poznan",{"_index":1019,"title":{},"body":{"classes/StationList.html":{}}}],["poznaniu",{"_index":448,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pozwala",{"_index":894,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["południowej",{"_index":474,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["połączy",{"_index":724,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["precipitation",{"_index":657,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pressure",{"_index":658,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["prezentujących",{"_index":460,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["private",{"_index":181,"title":{},"body":{"classes/AirQualityData.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["prod",{"_index":1466,"title":{},"body":{"index.html":{}}}],["production",{"_index":1468,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prognoz",{"_index":1177,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["prognozy",{"_index":1171,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["project",{"_index":1440,"title":{},"body":{"index.html":{}}}],["properties",{"_index":17,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["protractor",{"_index":1477,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":202,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["providers",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["przechowuje",{"_index":949,"title":{},"body":{"classes/StationList.html":{},"components/WeatherComponentComponent.html":{}}}],["przechowująca",{"_index":318,"title":{},"body":{"classes/CalculatedProps.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/StationList.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{}}}],["przechowującego",{"_index":11,"title":{},"body":{"classes/AirData.html":{}}}],["przechowywa",{"_index":34,"title":{},"body":{"classes/AirData.html":{}}}],["przechowywane",{"_index":357,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["przedstawione",{"_index":457,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["przedziale",{"_index":324,"title":{},"body":{"classes/CalculatedProps.html":{},"injectables/MeteoStatsService.html":{}}}],["przekroczeniu",{"_index":902,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["przemysl",{"_index":1118,"title":{},"body":{"classes/StationList.html":{}}}],["przez",{"_index":394,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["przy",{"_index":738,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{},"components/WeatherComponentComponent.html":{}}}],["przycisk",{"_index":799,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["przycisku",{"_index":1208,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przypadku",{"_index":296,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["przypisanie",{"_index":1178,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przypisujemy",{"_index":1188,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przód",{"_index":1367,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["prędko",{"_index":652,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["prędkości",{"_index":470,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["public",{"_index":18,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pulawy",{"_index":1069,"title":{},"body":{"classes/StationList.html":{}}}],["punktu",{"_index":772,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pyrzowice",{"_index":1088,"title":{},"body":{"classes/StationList.html":{}}}],["póki",{"_index":103,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["północnej",{"_index":472,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["północy",{"_index":898,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["quality",{"_index":56,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["quality.service",{"_index":84,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["quality.service.ts",{"_index":184,"title":{},"body":{"injectables/AirQualityService.html":{},"coverage.html":{}}}],["quality.service.ts:10",{"_index":188,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality.service.ts:14",{"_index":196,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality.service.ts:16",{"_index":190,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality/air",{"_index":83,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["qualitycomponent",{"_index":829,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["qualitycomponent.results",{"_index":833,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["qualitycomponentcomponent",{"_index":166,"title":{"components/QualityComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["qualityserviceservice",{"_index":773,"title":{"injectables/QualityServiceService.html":{}},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["raciborz",{"_index":1084,"title":{},"body":{"classes/StationList.html":{}}}],["radawiec",{"_index":1072,"title":{},"body":{"classes/StationList.html":{}}}],["radius",{"_index":862,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["radom",{"_index":1062,"title":{},"body":{"classes/StationList.html":{}}}],["reactiveformsmodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":1481,"title":{},"body":{"index.html":{}}}],["rebiechowo",{"_index":978,"title":{},"body":{"classes/StationList.html":{}}}],["records",{"_index":834,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["redirectto",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redni",{"_index":289,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["relative",{"_index":586,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["reload",{"_index":1453,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":1289,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["reprezentujace",{"_index":488,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["reprezentująca",{"_index":641,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{}}}],["require",{"_index":1409,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resko",{"_index":994,"title":{},"body":{"classes/StationList.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.current.indexes[0].description",{"_index":849,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.indexes[0].level",{"_index":848,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.indexes[0].value",{"_index":847,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[0].value",{"_index":844,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[1].value",{"_index":846,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[2].value",{"_index":845,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.id",{"_index":147,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result.stindexlevel.indexlevelname",{"_index":149,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result.stsourcedatadate",{"_index":151,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result[0].main.feels_like",{"_index":1270,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.humidity",{"_index":1275,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.pressure",{"_index":1273,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp",{"_index":1268,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp_max",{"_index":1272,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp_min",{"_index":1271,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].name",{"_index":1267,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resultsforecast",{"_index":1156,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartdata",{"_index":1157,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartmaxtemp",{"_index":1158,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartmintemp",{"_index":1159,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttocharttemp",{"_index":1160,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttotable",{"_index":1161,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsweather",{"_index":1162,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resulttable.date",{"_index":1276,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resulttable.maxtemp",{"_index":1277,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resulttable.mintemp",{"_index":1278,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultweather",{"_index":1196,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["retruns",{"_index":1368,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["return",{"_index":86,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["returns",{"_index":77,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["rgba(0,0,0,0.2",{"_index":870,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["rgba(172,91,0,0.88",{"_index":1332,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rgba(74,100,107,0.8",{"_index":858,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["right",{"_index":628,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["rodzaj",{"_index":1137,"title":{},"body":{"classes/StatisticType.html":{}}}],["rodzaju",{"_index":1136,"title":{},"body":{"classes/StatisticType.html":{}}}],["root",{"_index":203,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["root'},{'name",{"_index":163,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["routablecomponent",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":269,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1447,"title":{},"body":{"index.html":{}}}],["running",{"_index":1469,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":199,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/throw",{"_index":929,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/add/operator/catch",{"_index":928,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/observable",{"_index":926,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/operators",{"_index":200,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rysowania",{"_index":1191,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rysująca",{"_index":1169,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rzeszow",{"_index":1098,"title":{},"body":{"classes/StationList.html":{}}}],["równie",{"_index":302,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["s",{"_index":438,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["sa",{"_index":909,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["sacz",{"_index":1114,"title":{},"body":{"classes/StationList.html":{}}}],["sandomierz",{"_index":1101,"title":{},"body":{"classes/StationList.html":{}}}],["sans",{"_index":1299,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["scaffolding",{"_index":1457,"title":{},"body":{"index.html":{}}}],["scrollbar",{"_index":1335,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["selector",{"_index":62,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["serif",{"_index":1300,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["serve",{"_index":1448,"title":{},"body":{"index.html":{}}}],["server",{"_index":934,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"index.html":{}}}],["service",{"_index":75,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["service.service",{"_index":478,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["service.service.ts",{"_index":892,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["service.service.ts:22",{"_index":1362,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:27",{"_index":1353,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:29",{"_index":913,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["service.service.ts:35",{"_index":1354,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:43",{"_index":916,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["service.service.ts:56",{"_index":1358,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["services/quality/quality",{"_index":784,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["services/weather/weather",{"_index":477,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["servicetmp",{"_index":827,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["shadow",{"_index":854,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["showairdata",{"_index":71,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["showcontent",{"_index":1166,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["si",{"_index":130,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"components/WeatherComponentComponent.html":{}}}],["side",{"_index":580,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["siedlce",{"_index":1034,"title":{},"body":{"classes/StationList.html":{}}}],["sile",{"_index":435,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/Statistics.html":{}}}],["size",{"_index":1329,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["siła",{"_index":574,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["siły",{"_index":294,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/Statistics.html":{}}}],["skrajne",{"_index":307,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["sky",{"_index":1285,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["skąd",{"_index":137,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["składa",{"_index":645,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Station.html":{}}}],["składający",{"_index":643,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{}}}],["slubice",{"_index":1017,"title":{},"body":{"classes/StationList.html":{}}}],["sniezka",{"_index":1078,"title":{},"body":{"classes/StationList.html":{}}}],["snowdepth",{"_index":659,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["snowfall",{"_index":660,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["solid",{"_index":634,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"index.html":{}}}],["southresults",{"_index":401,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["space",{"_index":1323,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["spacing",{"_index":1304,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["spec\\.ts",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":625,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["sprawd",{"_index":569,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["sprawdzenia",{"_index":1369,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["src/.../app",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../quality",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statistic",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stats",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/air",{"_index":55,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/map/map",{"_index":384,"title":{},"body":{"components/MapComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/quality/quality",{"_index":767,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/stats",{"_index":1389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/weather/weather",{"_index":1154,"title":{},"body":{"components/WeatherComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/calculated",{"_index":1143,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["src/app/models/meteo",{"_index":639,"title":{},"body":{"classes/MeteoStatsData.html":{},"coverage.html":{}}}],["src/app/models/station.ts",{"_index":935,"title":{},"body":{"classes/Station.html":{},"coverage.html":{}}}],["src/app/models/station.ts:11",{"_index":940,"title":{},"body":{"classes/Station.html":{}}}],["src/app/models/station.ts:5",{"_index":938,"title":{},"body":{"classes/Station.html":{}}}],["src/app/models/statistic",{"_index":1121,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/statistics.ts",{"_index":281,"title":{},"body":{"classes/CalculatedProps.html":{},"coverage.html":{}}}],["src/app/models/statistics.ts:10",{"_index":329,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:14",{"_index":330,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:18",{"_index":320,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:22",{"_index":326,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:26",{"_index":317,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/stats",{"_index":687,"title":{},"body":{"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["src/app/services/air",{"_index":82,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["src/app/services/meteo",{"_index":692,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{},"coverage.html":{}}}],["src/app/services/quality/quality",{"_index":6,"title":{},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["src/app/services/weather/weather",{"_index":344,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1406,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1407,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacj",{"_index":722,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stacji",{"_index":698,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{}}}],["stan",{"_index":96,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["stanem",{"_index":1199,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["stanie",{"_index":1350,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["stany",{"_index":148,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["start",{"_index":757,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["started",{"_index":1438,"title":{"index.html":{}},"body":{}}],["stat/meteo",{"_index":693,"title":{},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["stat/station",{"_index":943,"title":{},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["statements",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["station",{"_index":715,"title":{"classes/Station.html":{}},"body":{"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"coverage.html":{}}}],["station(12100",{"_index":959,"title":{},"body":{"classes/StationList.html":{}}}],["station(12105",{"_index":961,"title":{},"body":{"classes/StationList.html":{}}}],["station(12106",{"_index":963,"title":{},"body":{"classes/StationList.html":{}}}],["station(12115",{"_index":966,"title":{},"body":{"classes/StationList.html":{}}}],["station(12120",{"_index":968,"title":{},"body":{"classes/StationList.html":{}}}],["station(12125",{"_index":970,"title":{},"body":{"classes/StationList.html":{}}}],["station(12135",{"_index":972,"title":{},"body":{"classes/StationList.html":{}}}],["station(12145",{"_index":974,"title":{},"body":{"classes/StationList.html":{}}}],["station(12150",{"_index":976,"title":{},"body":{"classes/StationList.html":{}}}],["station(12155",{"_index":979,"title":{},"body":{"classes/StationList.html":{}}}],["station(12160",{"_index":981,"title":{},"body":{"classes/StationList.html":{}}}],["station(12185",{"_index":983,"title":{},"body":{"classes/StationList.html":{}}}],["station(12195",{"_index":985,"title":{},"body":{"classes/StationList.html":{}}}],["station(12200",{"_index":987,"title":{},"body":{"classes/StationList.html":{}}}],["station(12205",{"_index":989,"title":{},"body":{"classes/StationList.html":{}}}],["station(12206",{"_index":991,"title":{},"body":{"classes/StationList.html":{}}}],["station(12210",{"_index":993,"title":{},"body":{"classes/StationList.html":{}}}],["station(12215",{"_index":995,"title":{},"body":{"classes/StationList.html":{}}}],["station(12230",{"_index":997,"title":{},"body":{"classes/StationList.html":{}}}],["station(12235",{"_index":999,"title":{},"body":{"classes/StationList.html":{}}}],["station(12250",{"_index":1001,"title":{},"body":{"classes/StationList.html":{}}}],["station(12270",{"_index":1003,"title":{},"body":{"classes/StationList.html":{}}}],["station(12272",{"_index":1005,"title":{},"body":{"classes/StationList.html":{}}}],["station(12280",{"_index":1007,"title":{},"body":{"classes/StationList.html":{}}}],["station(12285",{"_index":1009,"title":{},"body":{"classes/StationList.html":{}}}],["station(12295",{"_index":1011,"title":{},"body":{"classes/StationList.html":{}}}],["station(12300",{"_index":1013,"title":{},"body":{"classes/StationList.html":{}}}],["station(12310",{"_index":1016,"title":{},"body":{"classes/StationList.html":{}}}],["station(12330",{"_index":1018,"title":{},"body":{"classes/StationList.html":{}}}],["station(12345",{"_index":1020,"title":{},"body":{"classes/StationList.html":{}}}],["station(12360",{"_index":1022,"title":{},"body":{"classes/StationList.html":{}}}],["station(12365",{"_index":1024,"title":{},"body":{"classes/StationList.html":{}}}],["station(12372",{"_index":1026,"title":{},"body":{"classes/StationList.html":{}}}],["station(12374",{"_index":1029,"title":{},"body":{"classes/StationList.html":{}}}],["station(12375",{"_index":1031,"title":{},"body":{"classes/StationList.html":{}}}],["station(12385",{"_index":1033,"title":{},"body":{"classes/StationList.html":{}}}],["station(12399",{"_index":1035,"title":{},"body":{"classes/StationList.html":{}}}],["station(12400",{"_index":1037,"title":{},"body":{"classes/StationList.html":{}}}],["station(12415",{"_index":1040,"title":{},"body":{"classes/StationList.html":{}}}],["station(12418",{"_index":1043,"title":{},"body":{"classes/StationList.html":{}}}],["station(12424",{"_index":1046,"title":{},"body":{"classes/StationList.html":{}}}],["station(12425",{"_index":1050,"title":{},"body":{"classes/StationList.html":{}}}],["station(12435",{"_index":1051,"title":{},"body":{"classes/StationList.html":{}}}],["station(12455",{"_index":1053,"title":{},"body":{"classes/StationList.html":{}}}],["station(12465",{"_index":1055,"title":{},"body":{"classes/StationList.html":{}}}],["station(12469",{"_index":1057,"title":{},"body":{"classes/StationList.html":{}}}],["station(12471",{"_index":1059,"title":{},"body":{"classes/StationList.html":{}}}],["station(12485",{"_index":1061,"title":{},"body":{"classes/StationList.html":{}}}],["station(12488",{"_index":1063,"title":{},"body":{"classes/StationList.html":{}}}],["station(12490",{"_index":1065,"title":{},"body":{"classes/StationList.html":{}}}],["station(12491",{"_index":1068,"title":{},"body":{"classes/StationList.html":{}}}],["station(12495",{"_index":1070,"title":{},"body":{"classes/StationList.html":{}}}],["station(12497",{"_index":1073,"title":{},"body":{"classes/StationList.html":{}}}],["station(12500",{"_index":1075,"title":{},"body":{"classes/StationList.html":{}}}],["station(12510",{"_index":1077,"title":{},"body":{"classes/StationList.html":{}}}],["station(12520",{"_index":1079,"title":{},"body":{"classes/StationList.html":{}}}],["station(12530",{"_index":1081,"title":{},"body":{"classes/StationList.html":{}}}],["station(12540",{"_index":1083,"title":{},"body":{"classes/StationList.html":{}}}],["station(12550",{"_index":1085,"title":{},"body":{"classes/StationList.html":{}}}],["station(12555",{"_index":1087,"title":{},"body":{"classes/StationList.html":{}}}],["station(12560",{"_index":1089,"title":{},"body":{"classes/StationList.html":{}}}],["station(12566",{"_index":1091,"title":{},"body":{"classes/StationList.html":{}}}],["station(12570",{"_index":1093,"title":{},"body":{"classes/StationList.html":{}}}],["station(12575",{"_index":1095,"title":{},"body":{"classes/StationList.html":{}}}],["station(12580",{"_index":1097,"title":{},"body":{"classes/StationList.html":{}}}],["station(12585",{"_index":1100,"title":{},"body":{"classes/StationList.html":{}}}],["station(12595",{"_index":1102,"title":{},"body":{"classes/StationList.html":{}}}],["station(12600",{"_index":1104,"title":{},"body":{"classes/StationList.html":{}}}],["station(12625",{"_index":1107,"title":{},"body":{"classes/StationList.html":{}}}],["station(12650",{"_index":1109,"title":{},"body":{"classes/StationList.html":{}}}],["station(12660",{"_index":1112,"title":{},"body":{"classes/StationList.html":{}}}],["station(12690",{"_index":1115,"title":{},"body":{"classes/StationList.html":{}}}],["station(12695",{"_index":1117,"title":{},"body":{"classes/StationList.html":{}}}],["stationlist",{"_index":942,"title":{"classes/StationList.html":{}},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["statistics",{"_index":274,"title":{"classes/Statistics.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Statistics.html":{},"coverage.html":{}}}],["statistictype",{"_index":1120,"title":{"classes/StatisticType.html":{}},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statistictypelist",{"_index":1139,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stats",{"_index":168,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["stats.service.ts",{"_index":694,"title":{},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["stats.service.ts:19",{"_index":731,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:23",{"_index":741,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:28",{"_index":744,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:32",{"_index":713,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:46",{"_index":718,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:57",{"_index":728,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.ts",{"_index":1144,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["stats.ts:15",{"_index":1152,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:16",{"_index":1151,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:17",{"_index":1153,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:6",{"_index":1147,"title":{},"body":{"classes/Statistics.html":{}}}],["statscomponentcomponent",{"_index":167,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["statstype",{"_index":710,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["statystyk",{"_index":701,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["statystyki",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{}}}],["statysyk",{"_index":947,"title":{},"body":{"classes/StationList.html":{}}}],["stindexlevel",{"_index":176,"title":{},"body":{"classes/AirQualityData.html":{}}}],["stored",{"_index":1463,"title":{},"body":{"index.html":{}}}],["string",{"_index":177,"title":{},"body":{"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["strona",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["stronie",{"_index":778,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["strzałek",{"_index":459,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["strzałki",{"_index":487,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["strzyzewice",{"_index":1045,"title":{},"body":{"classes/StationList.html":{}}}],["stsourcedatadate",{"_index":178,"title":{},"body":{"classes/AirQualityData.html":{}}}],["stworzony",{"_index":749,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["styles",{"_index":52,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["styleurls",{"_index":65,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((data",{"_index":502,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((records",{"_index":831,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((results",{"_index":88,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["subscribe((winddata",{"_index":510,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["sulejow",{"_index":1058,"title":{},"body":{"classes/StationList.html":{}}}],["summer",{"_index":1286,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["sunshine",{"_index":661,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["support",{"_index":1482,"title":{},"body":{"modules.html":{}}}],["suwalki",{"_index":986,"title":{},"body":{"classes/StationList.html":{}}}],["sv8wb734fm470c2hys8atebfrng5lzu9",{"_index":208,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["svg",{"_index":1483,"title":{},"body":{"modules.html":{}}}],["swibno",{"_index":980,"title":{},"body":{"classes/StationList.html":{}}}],["swinoujscie",{"_index":988,"title":{},"body":{"classes/StationList.html":{}}}],["switch",{"_index":761,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["swoim",{"_index":1265,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["szczecin",{"_index":990,"title":{},"body":{"classes/StationList.html":{}}}],["szczecinek",{"_index":996,"title":{},"body":{"classes/StationList.html":{}}}],["szczytowy",{"_index":653,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["szeroko",{"_index":919,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["szerokości",{"_index":791,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["sztywno",{"_index":107,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["t",{"_index":117,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tabel",{"_index":1206,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["tabela",{"_index":132,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tabeli",{"_index":440,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["table",{"_index":152,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1410,"title":{},"body":{"coverage.html":{}}}],["tablica",{"_index":462,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["tablicy",{"_index":420,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["tak",{"_index":128,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["target",{"_index":538,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["tarnow",{"_index":1096,"title":{},"body":{"classes/StationList.html":{}}}],["te",{"_index":306,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["tego",{"_index":113,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["temperatur",{"_index":1189,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["temperatura",{"_index":360,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["temperature",{"_index":662,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["temperaturemax",{"_index":663,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["temperaturemin",{"_index":664,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["temperatury",{"_index":291,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{}}}],["temperatury/ciśniania/siły",{"_index":319,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["temperaturze",{"_index":1148,"title":{},"body":{"classes/Statistics.html":{}}}],["temperaturę/ciśnianie/si",{"_index":321,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["template",{"_index":51,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["templateurl",{"_index":67,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["terespol",{"_index":1036,"title":{},"body":{"classes/StationList.html":{}}}],["term",{"_index":426,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["test",{"_index":1472,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1471,"title":{},"body":{"index.html":{}}}],["text",{"_index":883,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["this.apibaseurl",{"_index":755,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.apikey",{"_index":759,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.apiurl",{"_index":754,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.average",{"_index":341,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.centralresults.push(data[0].list[0].wind.deg",{"_index":506,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.citywinddegresults.push(winddata[0].list[0].wind.deg",{"_index":512,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.citywindspeedresults.push(winddata[0].list[0].wind.speed",{"_index":511,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.errormsg",{"_index":1250,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.getdatabialystok(\"białystok",{"_index":489,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.getdatakrakow(\"kraków",{"_index":490,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.getdatapoznan(\"poznan",{"_index":492,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.getdatawarszawa(\"warszawa",{"_index":491,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.gettype(type",{"_index":753,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.http",{"_index":204,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["this.initmap",{"_index":520,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.map",{"_index":522,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["this.map.on('click",{"_index":546,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["this.max",{"_index":337,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.maxdate",{"_index":339,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.min",{"_index":333,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.minadate",{"_index":335,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.northresults.push(data[0].list[0].wind.deg",{"_index":504,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.results",{"_index":90,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["this.resultsforecasttotable.push({date",{"_index":1260,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.resultsweather.push(records",{"_index":1248,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.service",{"_index":828,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["this.service.getairdata",{"_index":87,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["this.service.getweatherforecastdata(term",{"_index":501,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.southresults.push(data[0].list[0].wind.deg",{"_index":505,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.stationlist",{"_index":957,"title":{},"body":{"classes/StationList.html":{}}}],["this.stationlist.push(new",{"_index":958,"title":{},"body":{"classes/StationList.html":{}}}],["this.stationlist.sort",{"_index":1119,"title":{},"body":{"classes/StationList.html":{}}}],["this.statstype",{"_index":756,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.westresults.push(data[0].list[0].wind.deg",{"_index":507,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["tiles",{"_index":528,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["tiles.addto(this.map",{"_index":535,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["title",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":593,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["torun",{"_index":1002,"title":{},"body":{"classes/StationList.html":{}}}],["transform",{"_index":1301,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["transition",{"_index":1315,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["transparent",{"_index":878,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["tree",{"_index":54,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["true",{"_index":816,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["trzy",{"_index":1124,"title":{},"body":{"classes/StatisticType.html":{}}}],["tslib",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["tutaj",{"_index":124,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tworzenie",{"_index":9,"title":{},"body":{"classes/AirData.html":{}}}],["tych",{"_index":484,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["tym",{"_index":851,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["typ",{"_index":721,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["type",{"_index":29,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":1122,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.ts:12",{"_index":1138,"title":{},"body":{"classes/StatisticType.html":{}}}],["type.ts:6",{"_index":1134,"title":{},"body":{"classes/StatisticType.html":{}}}],["typie",{"_index":700,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["typy",{"_index":1125,"title":{},"body":{"classes/StatisticType.html":{}}}],["umożliwiający",{"_index":745,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["unit",{"_index":1470,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":912,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["uppercase",{"_index":1302,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["url(https://www.setaswall.com/wp",{"_index":1283,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["use",{"_index":1459,"title":{},"body":{"index.html":{}}}],["ustalonych",{"_index":748,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["ustka",{"_index":967,"title":{},"body":{"classes/StationList.html":{}}}],["util",{"_index":1232,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["uzyska",{"_index":1366,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["uzyskanych",{"_index":1185,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["użytkownik",{"_index":133,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["użytkownika",{"_index":395,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["value",{"_index":193,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":159,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["variable",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1492,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1444,"title":{},"body":{"index.html":{}}}],["via",{"_index":1474,"title":{},"body":{"index.html":{}}}],["view",{"_index":542,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["viewencapsulation",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.none",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":371,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["void",{"_index":78,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["w",{"_index":101,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["wallpaper",{"_index":1287,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["warszawa",{"_index":1027,"title":{},"body":{"classes/StationList.html":{}}}],["warszawie",{"_index":451,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["warto",{"_index":290,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{}}}],["wartości",{"_index":299,"title":{},"body":{"classes/CalculatedProps.html":{},"injectables/MeteoStatsService.html":{}}}],["wczyta",{"_index":116,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["weather",{"_index":170,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["weathercomponentcomponent",{"_index":169,"title":{"components/WeatherComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["weatherdata",{"_index":366,"title":{"classes/WeatherData.html":{}},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["weatherdata(item.name",{"_index":1372,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["weatherserviceservice",{"_index":408,"title":{"injectables/WeatherServiceService.html":{}},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["wersja",{"_index":517,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wersje",{"_index":515,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["westresults",{"_index":402,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["white",{"_index":868,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wiatr",{"_index":570,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wiatru",{"_index":295,"title":{},"body":{"classes/CalculatedProps.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["width",{"_index":153,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["wielun",{"_index":1054,"title":{},"body":{"classes/StationList.html":{}}}],["wierch",{"_index":1111,"title":{},"body":{"classes/StationList.html":{}}}],["wietrze",{"_index":392,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wilgotno",{"_index":381,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["wind",{"_index":606,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["winddata",{"_index":442,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["winddirection",{"_index":665,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["windpower",{"_index":1145,"title":{},"body":{"classes/Statistics.html":{}}}],["windspeed",{"_index":575,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{}}}],["wlkp",{"_index":1015,"title":{},"body":{"classes/StationList.html":{}}}],["wlodawa",{"_index":1074,"title":{},"body":{"classes/StationList.html":{}}}],["wpisze",{"_index":141,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wprowad",{"_index":572,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wprowadzaniu",{"_index":1218,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wprowadzeniu",{"_index":92,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wprowadzono",{"_index":1251,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wroclaw",{"_index":1047,"title":{},"body":{"classes/StationList.html":{}}}],["wskazanym",{"_index":508,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["współrzędna",{"_index":789,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["wszystkich",{"_index":121,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["wtedy",{"_index":142,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wyboru",{"_index":946,"title":{},"body":{"classes/StationList.html":{},"classes/StatisticType.html":{}}}],["wybra",{"_index":136,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wybran",{"_index":1357,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wybrane",{"_index":797,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["wybranego",{"_index":771,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wybranej",{"_index":393,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["wybranych",{"_index":468,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{}}}],["wybranym",{"_index":571,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["wyciąga",{"_index":1355,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wyciągamy",{"_index":1187,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyciągnięte",{"_index":1223,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykorzystujemy",{"_index":1190,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykorzystywane",{"_index":737,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["wykres",{"_index":1170,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykresem",{"_index":1212,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykresu",{"_index":1192,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wynik",{"_index":144,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wyniki",{"_index":804,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["wyskoczy",{"_index":145,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wywołanie",{"_index":480,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wywłanie",{"_index":454,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wyznaczająca",{"_index":284,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["wyznaczaniu",{"_index":739,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{}}}],["wyświetlający",{"_index":796,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["wyświetlamy",{"_index":1202,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlane",{"_index":1233,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlanie",{"_index":388,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["wyświetlenia",{"_index":777,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["wyświetlenie",{"_index":808,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wyświetli",{"_index":131,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wyświetlon",{"_index":780,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wyświetlone",{"_index":1197,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["z",{"_index":36,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["za",{"_index":769,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["zachodniej",{"_index":476,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["zadanie",{"_index":895,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["zadeklarowane",{"_index":108,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["zakopane",{"_index":1108,"title":{},"body":{"classes/StationList.html":{}}}],["zakładce",{"_index":809,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["zakładki",{"_index":386,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["zamosc",{"_index":1103,"title":{},"body":{"classes/StationList.html":{}}}],["zamykania",{"_index":800,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["zanotowan",{"_index":322,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zanotowania",{"_index":327,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zanotowano",{"_index":305,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zapisujaca",{"_index":418,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["zapyta",{"_index":896,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["zawierająca",{"_index":742,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["zegrze",{"_index":964,"title":{},"body":{"classes/StationList.html":{}}}],["zielona",{"_index":1038,"title":{},"body":{"classes/StationList.html":{}}}],["zmeinna",{"_index":1150,"title":{},"body":{"classes/Statistics.html":{}}}],["zmienn",{"_index":1183,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["zmienna",{"_index":31,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{}}}],["zmienne",{"_index":1182,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["znak",{"_index":362,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["znale",{"_index":139,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["zone.js",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"overview.html":{}}}],["zosta",{"_index":430,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["zostaj",{"_index":301,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zostan",{"_index":456,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/StatisticType.html":{}}}],["zwraca",{"_index":95,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AirData.html":{"url":"classes/AirData.html","title":"class - AirData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quality/quality-module.ts\n        \n\n            \n                Description\n            \n            \n                Tworzenie obieku przechowującego dane o jakości powietrza.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(current: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quality/quality-module.ts:4\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy 'AirData' \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Zmienna, która bedzie przechowywać dane o jakości powietrza \npobrane z api dla aktualnie klikniętego miejsca.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-module.ts:11\n                            \n                        \n\n                \n                    \n                        Zmienna, która bedzie przechowywać dane o jakości powietrza \npobrane z api dla aktualnie klikniętego miejsca.\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AirData {\n    /**\n     * Konstruktor klasy 'AirData' \n     * @param current Zmienna, która bedzie przechowywać dane o jakości powietrza \n     * pobrane z api dla aktualnie klikniętego miejsca.\n     */\n    constructor(\n        public current: any\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AirQualityComponentComponent.html":{"url":"components/AirQualityComponentComponent.html","title":"component - AirQualityComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AirQualityComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/air-quality-component/air-quality-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-air-quality-component\n            \n\n            \n                styleUrls\n                ./air-quality-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./air-quality-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                results\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AirQualityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/air-quality-component/air-quality-component.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AirQualityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAirData\n                        \n                        \n                    \n                \n            \n            \n                \nshowAirData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AirQualityService } from 'src/app/services/air-quality/air-quality.service';\n\n@Component({\n  selector: 'app-air-quality-component',\n  templateUrl: './air-quality-component.component.html',\n  styleUrls: ['./air-quality-component.component.css']\n})\nexport class AirQualityComponentComponent implements OnInit {\n\n  results: any;\n\n  constructor(private service: AirQualityService) { }\n\n  ngOnInit() {\n  }\n\n  showAirData() {\n    return this.service.getAirData()\n      .subscribe((results: any) => {\n        console.log(results);\n        this.results = results;\n      })\n  }\n}\n\n    \n\n    \n            Po wprowadzeniu id aplikacja zwraca stan powietrza i datę pomiaru dla odpowiedniego miejsca pomiarowego w polsce\n    Póki co aplikacja ma na sztywno zadeklarowane id pomiaru jako 52\n    Jeśli chcemy z tego korzystać to mogę wczytać tę całą dużą listę wszystkich miejsc pomiarowych tutaj gdzieś obok. Ona tak ładnie się wyświetli jako tabela i użytkownik będzie mógł wybrać skąd chce znaleźć pomiar. Wpisze wtedy odpowiedni ID i wynik wyskoczy\n\n\n    \n    Pobierz dane!\n\n\n\n\n    \n        \n            ID\n            {{result.id}}\n        \n\n        \n            Stany powietrza\n            {{result.stIndexLevel.indexLevelName}}\n        \n\n        \n            Data pomiaru\n            {{result.stSourceDataDate}}\n        \n    \n\n    \n\n    \n                \n                    ./air-quality-component.component.css\n                \n                .table{\n    width: 20%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Po wprowadzeniu id aplikacja zwraca stan powietrza i datę pomiaru dla odpowiedniego miejsca pomiarowego w polsce    Póki co aplikacja ma na sztywno zadeklarowane id pomiaru jako 52    Jeśli chcemy z tego korzystać to mogę wczytać tę całą dużą listę wszystkich miejsc pomiarowych tutaj gdzieś obok. Ona tak ładnie się wyświetli jako tabela i użytkownik będzie mógł wybrać skąd chce znaleźć pomiar. Wpisze wtedy odpowiedni ID i wynik wyskoczy        Pobierz dane!                        ID            {{result.id}}                            Stany powietrza            {{result.stIndexLevel.indexLevelName}}                            Data pomiaru            {{result.stSourceDataDate}}            '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AirQualityComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AirQualityData.html":{"url":"classes/AirQualityData.html","title":"class - AirQualityData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirQualityData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/air-quality/air-quality-module.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, stIndexLevel: string, stSourceDataDate: Data)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/air-quality/air-quality-module.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stIndexLevel\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stSourceDataDate\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Data } from '@angular/router';\n\nexport class AirQualityData {\n    constructor(\n        private id: number,\n        private stIndexLevel: string,\n        private stSourceDataDate: Data\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AirQualityService.html":{"url":"injectables/AirQualityService.html","title":"injectable - AirQualityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AirQualityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/air-quality/air-quality.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/air-quality/air-quality.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAirData\n                        \n                        \n                    \n                \n            \n            \n                \ngetAirData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/air-quality/air-quality.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://api.gios.gov.pl/pjp-api/rest/aqindex/getIndex/52'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/air-quality/air-quality.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { pipe, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AirQualityData } from './air-quality-module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AirQualityService {\n\n  constructor(private http: HttpClient) { }\n\n  api = 'http://api.gios.gov.pl/pjp-api/rest/aqindex/getIndex/52';\n\n  getAirData(): Observable {\n    return this.http\n      .get(this.api)        // airly kay:  SV8Wb734fM470C2HYs8atebFRNg5LzU9\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new AirQualityData(item.id, item.stIndexLevel, item.stSourceDataDate)))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'meteo-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'meteo-app';\n}\n\n    \n\n    \n        \n    Strona główna\n    Statystyki\n    Mapa\n    Jakość powietrza -->\n    Jakość powietrza\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Strona główna    Statystyki    Mapa    Jakość powietrza -->    Jakość powietrza'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponentComponent\n\nMapComponentComponent\n\nAppModule -->\n\nMapComponentComponent->AppModule\n\n\n\n\n\nQualityComponentComponent\n\nQualityComponentComponent\n\nAppModule -->\n\nQualityComponentComponent->AppModule\n\n\n\n\n\nStatsComponentComponent\n\nStatsComponentComponent\n\nAppModule -->\n\nStatsComponentComponent->AppModule\n\n\n\n\n\nWeatherComponentComponent\n\nWeatherComponentComponent\n\nAppModule -->\n\nWeatherComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            MapComponentComponent\n                        \n                        \n                            QualityComponentComponent\n                        \n                        \n                            StatsComponentComponent\n                        \n                        \n                            WeatherComponentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { WeatherComponentComponent } from './components/weather/weather-component.component';\nimport { MapComponentComponent } from './components/map/map-component.component';\nimport { StatsComponentComponent } from './components/stats-component/stats-component.component';\nimport { QualityComponentComponent } from './components/quality/quality-component.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatExpansionModule, MatInputModule } from '@angular/material';\n// import { AirQualityComponentComponent } from './components/air-quality-component/air-quality-component.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponentComponent,\n    MapComponentComponent,\n    StatsComponentComponent,\n    QualityComponentComponent\n    // AirQualityComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatInputModule\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StatsComponentComponent } from './components/stats-component/stats-component.component';\nimport { WeatherComponentComponent } from './components/weather/weather-component.component';\nimport { MapComponentComponent } from './components/map/map-component.component';\nimport { QualityComponentComponent } from './components/quality/quality-component.component';\n// import { AirQualityComponentComponent } from './components/air-quality-component/air-quality-component.component';\n\n\nconst routes: Routes = [\n  { path: 'mainpage', component: WeatherComponentComponent },\n  { path: 'statistics', component: StatsComponentComponent },\n  { path: 'map', component: MapComponentComponent },\n  { path: 'quality', component: QualityComponentComponent },\n  // { path: 'air-quality', component: AirQualityComponentComponent },\n  { path: '', redirectTo: '/mainpage', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routableComponent = [\n  WeatherComponentComponent, StatsComponentComponent\n];\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CalculatedProps.html":{"url":"classes/CalculatedProps.html","title":"class - CalculatedProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CalculatedProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistics.ts\n        \n\n            \n                Description\n            \n            \n                Klasa osatecznie wyznaczająca statystyki, czyli minimalną, maksymalną oraz średnią wartość temperatury, ciśnienia lub siły wiatru.\nW przypadku minimalnych i maksymalnych wartości, podane zostają również daty, kiedy zanotowano te skrajne wartości.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                average\n                            \n                            \n                                    Public\n                                max\n                            \n                            \n                                    Public\n                                maxDate\n                            \n                            \n                                    Public\n                                min\n                            \n                            \n                                    Public\n                                minaDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: number, minaDate: Date, max: number, maxDate: Date, averageSum: number, dataCount: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistics.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        minaDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        averageSum\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            average\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:26\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca średnią wartość temperatury/ciśniania/siły wiatru.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:18\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca maksymalną temperaturę/ciśnianie/siłę wiatru zanotowaną w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:22\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca datę zanotowania największej temperatury/ciśniania/siły wiatru w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:10\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca minimalną temperaturę/ciśnianie/siłę wiatru zanotowaną w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minaDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:14\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca datę zanotowania najmniejszej temperatury/ciśniania/siły wiatru w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CalculatedProps {\n\n    /**\n     * Zmienna przechowująca minimalną temperaturę/ciśnianie/siłę wiatru zanotowaną w danym przedziale czasowym.\n     */\n     public min: string;\n     /**\n      * Zmienna przechowująca datę zanotowania najmniejszej temperatury/ciśniania/siły wiatru w danym przedziale czasowym.\n      */\n     public minaDate: string;\n     /**\n      * Zmienna przechowująca maksymalną temperaturę/ciśnianie/siłę wiatru zanotowaną w danym przedziale czasowym.\n      */\n     public max: string;\n     /**\n      * Zmienna przechowująca datę zanotowania największej temperatury/ciśniania/siły wiatru w danym przedziale czasowym.\n      */\n     public maxDate: string;\n     /**\n      * Zmienna przechowująca średnią wartość temperatury/ciśniania/siły wiatru.\n      */\n    public average: string;\n\n\n    constructor(min: number, minaDate: Date, max: number, maxDate: Date, averageSum: number, dataCount: number\n    ) {\n        if (dataCount > 0) {\n            this.min = min.toString();\n            this.minaDate = minaDate.toString();\n            this.max = max.toString();\n            this.maxDate = maxDate.toString();\n            this.average = (averageSum / dataCount).toFixed(2).toString();\n        } else {\n            this.min = '-';\n            this.minaDate = '-';\n            this.max = '-';\n            this.maxDate = '-';\n            this.average = '-';\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForecastData.html":{"url":"classes/ForecastData.html","title":"class - ForecastData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForecastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-module.ts\n        \n\n            \n                Description\n            \n            \n                Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(list: [])\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-module.ts:24\n                            \n                        \n\n                \n                    \n                            Kostruktor klasy ForecastData().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                  \n                                                        \n                                                                    []\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n(czas pomiaru, temperatura max/min, znak określający pogodę) \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:31\n                            \n                        \n\n                \n                    \n                        macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n(czas pomiaru, temperatura max/min, znak określający pogodę) \n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WeatherData {\n    /**\n     * Kostruktor klasy WeatherData().\n     * @param {string} name nazwa miasta, którą podał użytkownik\n     * @param {number} visibility I don't know \n     * @param {number} main dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n     * @param {string} weather ikonka określająca pogodę w danym momencie\n     */\n    constructor(\n        public name: string,\n        public visibility: number,\n        public main: number,\n        public weather: string,\n    ) { }\n}\n\n/**\n * Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org.\n */\nexport class ForecastData {\n    /**\n     * Kostruktor klasy ForecastData().\n     * @param list macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n     * (czas pomiaru, temperatura max/min, znak określający pogodę) \n     */\n    constructor(\n        public list = [],\n    ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponentComponent.html":{"url":"components/MapComponentComponent.html","title":"component - MapComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map/map-component.component.ts\n\n\n    \n        Description\n    \n    \n        Komponent zakładki Mapy.\nWyświetlanie kierunków wiatru na mapie oraz danych o wietrze dla wybranej\nprzez użytkownika miejscowości.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-component\n            \n\n            \n                styleUrls\n                ./map-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./map-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                centralresults\n                            \n                            \n                                    Private\n                                citywinddegresults\n                            \n                            \n                                    Private\n                                citywindspeedresults\n                            \n                            \n                                    Private\n                                northresults\n                            \n                            \n                                    Private\n                                southresults\n                            \n                            \n                                    Private\n                                westresults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataBialystok\n                            \n                            \n                                getDataCityCheck\n                            \n                            \n                                getDataKrakow\n                            \n                            \n                                getDataPoznan\n                            \n                            \n                                getDataWarszawa\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: WeatherServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map/map-component.component.ts:43\n                            \n                        \n\n                \n                    \n                            Konstruktor klaasy głównej: MapComponentComponent\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WeatherServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataBialystok\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataBialystok(term)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:73\n                \n            \n\n\n            \n                \n                    Funkcja pobierająca z API kierunek wiatru w Białymstoku i zapisujaca go w tablicy \"northresults[]\"\". Odwołuje się do funkcji \"getWeatherForecastData()\",\nktóra pobiera dane z API openweathermap.org\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataCityCheck\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataCityCheck(term)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:122\n                \n            \n\n\n            \n                \n                    Funkcja pobierająca dane z API o wietrze w wybranej przez użytkownika miejscowości. Odwoluje się do funkcji \"getWeatherForecastData()\",\npobiera informacje o sile i kierunku wiatru. Otrzymane informacje są ddawane do tabeli z danymi \"winddata\".\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataKrakow\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataKrakow(term)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:85\n                \n            \n\n\n            \n                \n                    Funkcja pobierająca z API kierunek wiatru w Krakowie i zapisujaca go w tablicy \"southresults[]. Odwołuje się do funkcji \"getWeatherForecastData()\",\nktóra pobiera dane z API openweathermap.org\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataPoznan\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataPoznan(term)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:109\n                \n            \n\n\n            \n                \n                    Funkcja pobierająca z API kierunek wiatru w Poznaniu i zapisujaca go w tablicy \"westresults[]. Odwołuje się do funkcji \"getWeatherForecastData()\",\nktóra pobiera dane z API openweathermap.org\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataWarszawa\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataWarszawa(term)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:97\n                \n            \n\n\n            \n                \n                    Funkcja pobierająca z API kierunek wiatru w Warszawie i zapisujaca go w tablicy \"centralresults[]. Odwołuje się do funkcji \"getWeatherForecastData()\",\nktóra pobiera dane z API openweathermap.org\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:55\n                \n            \n\n\n            \n                \n                    Funkcja inicajlizująca wywłanie funkcji pobierających kierunek wiatru w Białymstoku, Krakowie, Warszawie, Poznaniu. \nPobrane informacje zostaną przedstawione na mapie w postaci strzałek prezentujących kierunek wiatru.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            centralresults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map/map-component.component.ts:31\n                            \n                        \n\n                \n                    \n                        Tablica przechowująca dane o kierunku wiatru w centralnej części kraju.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            citywinddegresults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map/map-component.component.ts:39\n                            \n                        \n\n                \n                    \n                        Tablica przechowująca dane pobrane z api o kierunkach wiatru w wybranych przez użytkownika miejscowościach.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            citywindspeedresults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map/map-component.component.ts:43\n                            \n                        \n\n                \n                    \n                        Tablica przechowująca dane pobrane z api o prędkości wiatru w wybranych przez użytkownika miejscowościach.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            northresults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map/map-component.component.ts:23\n                            \n                        \n\n                \n                    \n                        Tablica przechowująca dane o kierunku wiatru w północnej części kraju.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            southresults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map/map-component.component.ts:27\n                            \n                        \n\n                \n                    \n                        Tablica przechowująca dane o kierunku wiatru w południowej części kraju.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            westresults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map/map-component.component.ts:35\n                            \n                        \n\n                \n                    \n                        Tablica przechowująca dane o kierunku wiatru w zachodniej części kraju.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherServiceService } from '../../services/weather/weather-service.service';\nimport { HttpClient } from '@angular/common/http';\n\ndeclare var $: any;\n\n/**\n * Komponent zakładki Mapy.\n * \n * Wyświetlanie kierunków wiatru na mapie oraz danych o wietrze dla wybranej\n * przez użytkownika miejscowości.\n */\n@Component({\n  selector: 'app-map-component',\n  templateUrl: './map-component.component.html',\n  styleUrls: ['./map-component.component.css']\n})\n\nexport class MapComponentComponent implements OnInit {\n/**\n * Tablica przechowująca dane o kierunku wiatru w północnej części kraju.\n */\n  private northresults = [];\n  /**\n * Tablica przechowująca dane o kierunku wiatru w południowej części kraju.\n */\n  private southresults = [];\n  /**\n * Tablica przechowująca dane o kierunku wiatru w centralnej części kraju.\n */\n  private centralresults = [];\n  /**\n * Tablica przechowująca dane o kierunku wiatru w zachodniej części kraju.\n */\n  private westresults = [];\n  /**\n   * Tablica przechowująca dane pobrane z api o kierunkach wiatru w wybranych przez użytkownika miejscowościach.\n   */\n  private citywinddegresults = [];\n   /**\n   * Tablica przechowująca dane pobrane z api o prędkości wiatru w wybranych przez użytkownika miejscowościach.\n   */\n  private citywindspeedresults = [];\n/**\n * Konstruktor klaasy głównej: MapComponentComponent\n * @param http \n * @param service \n */\n  constructor(private http: HttpClient, private service: WeatherServiceService) { }\n\n  /**\n   * Funkcja inicajlizująca wywłanie funkcji pobierających kierunek wiatru w Białymstoku, Krakowie, Warszawie, Poznaniu. \n   * Pobrane informacje zostaną przedstawione na mapie w postaci strzałek prezentujących kierunek wiatru.\n   */\n  ngOnInit() {\n    //wywołanie funkcji, które pobiorą kierunek wiatru; na podstawie tych danych na mapie pojawią się odpowiednie strzałki reprezentujace kierunek wiatru\n    this.getDataBialystok(\"Białystok\");\n    this.getDataKrakow(\"Kraków\");\n    this.getDataWarszawa(\"Warszawa\");\n    this.getDataPoznan(\"Poznan\");\n\n\n    $(document).ready(function () {\n      $(\".map\").animate({ opacity: 1 }, 1500)\n    })\n  }\n/**\n * Funkcja pobierająca z API kierunek wiatru w Białymstoku i zapisujaca go w tablicy \"northresults[]\"\". Odwołuje się do funkcji \"getWeatherForecastData()\",\n * która pobiera dane z API openweathermap.org\n * @param term parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n */\n  //dodanie do tablicy pobranego kierunku wiatru z Białegostoku\n  getDataBialystok(term) {\n    return this.service.getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        //console.log(data[0].list[0].wind.deg\n        this.northresults.push(data[0].list[0].wind.deg);\n      })\n  }\n/**\n * Funkcja pobierająca z API kierunek wiatru w Krakowie i zapisujaca go w tablicy \"southresults[]. Odwołuje się do funkcji \"getWeatherForecastData()\",\n * która pobiera dane z API openweathermap.org\n * @param term parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n */\n  getDataKrakow(term) {\n    return this.service.getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        //console.log(data[0].list[0].wind.deg\n        this.southresults.push(data[0].list[0].wind.deg);\n      })\n  }\n/**\n * Funkcja pobierająca z API kierunek wiatru w Warszawie i zapisujaca go w tablicy \"centralresults[]. Odwołuje się do funkcji \"getWeatherForecastData()\",\n * która pobiera dane z API openweathermap.org\n * @param term parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n */\n  getDataWarszawa(term) {\n    return this.service.getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        //console.log(data[0].list[0].wind.deg\n        this.centralresults.push(data[0].list[0].wind.deg);\n      })\n  }\n/**\n * Funkcja pobierająca z API kierunek wiatru w Poznaniu i zapisujaca go w tablicy \"westresults[]. Odwołuje się do funkcji \"getWeatherForecastData()\",\n * która pobiera dane z API openweathermap.org\n * @param term parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n */\n  getDataPoznan(term) {\n    return this.service.getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        //console.log(data[0].list[0].wind.deg\n        this.westresults.push(data[0].list[0].wind.deg);\n      })\n  }\n/**\n * Funkcja pobierająca dane z API o wietrze w wybranej przez użytkownika miejscowości. Odwoluje się do funkcji \"getWeatherForecastData()\",\n * pobiera informacje o sile i kierunku wiatru. Otrzymane informacje są ddawane do tabeli z danymi \"winddata\".\n * @param term parametr określający miejscowość, z której mają zostać pobrane dane o wietrze.\n */\n  //dodanie do tablicy danych o sile i kierunku wiatru we wskazanym przez użytkownika mieście\n  getDataCityCheck(term) {\n    return this.service.getWeatherForecastData(term)\n      .subscribe((winddata: any) => {\n        this.citywindspeedresults.push(winddata[0].list[0].wind.speed);\n        this.citywinddegresults.push(winddata[0].list[0].wind.deg);\n      }),\n      console.log(this.citywindspeedresults);\n  }\n\n}\n\n\n\n  //************************************************************POPRZENIE WERSJE MAP*************************************************************************/\n\n// ---------------------------PIERWSZA WERSJA MAPY-------------------------------- //\n// export class MapComponentComponent implements AfterViewInit {\n\n//   private map;\n\n//   constructor() { }\n\n//   ngAfterViewInit(): void {\n//     this.initMap();\n//   }\n\n//   private initMap(): void {\n//     this.map = L.map('map', {\n//       center: [53.1324886, 23.1688403],\n//       zoom: 9\n//     });\n\n//     const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//       maxZoom: 19,\n//       attribution: '&copy; OpenStreetMap'\n//     });\n\n//     tiles.addTo(this.map);\n//   }\n// }\n\n\n\n\n// ---------------------------DRUGA WERSJA MAPY-------------------------------- //\n\n//   this.map = new ol.Map({\n  //     target: 'map',\n  //     layers: [\n  //       new ol.layer.Tile({\n  //         source: new ol.source.OSM()\n  //       })\n  //     ],\n  //     view: new ol.View({\n  //       center: ol.proj.fromLonLat([23.1688403, 53.1324886]),\n  //       zoom: 8,\n\n  //     })\n  //   });\n\n  //   this.map.on('click', function (args) {\n  //     console.log(args.coordinate);\n  //     var lonlat = ol.proj.transform(args.coordinate, 'EPSG:3857', 'EPSG:4326');\n  //     console.log(lonlat);\n\n  //     var lon = lonlat[0];\n  //     var lat = lonlat[1];\n  //     var inputlat = document.getElementById(\"inputLat\");\n  //     var inputlon = document.getElementById(\"inputLon\");\n  //     inputlat.setAttribute('value',lat);\n  //     inputlon.setAttribute('value',lon);\n  //     (`lat: ${lat} long: ${lon}`);\n  //   });\n  // }\n\n\n  //************************************************************POPRZENIE WERSJE MAP*************************************************************************/\n    \n\n    \n        \n  \n    \n      \n\n      \n\n        = 0 && result \n          \n        \n\n        = 90 && result \n          \n        \n\n        = 108 && result \n          \n        \n\n        = 270 && result \n          \n        \n\n      \n\n\n      \n        = 0 && result \n          \n        \n\n        = 90 && result \n          \n        \n\n        = 108 && result \n          \n        \n\n        = 270 && result \n          \n        \n      \n\n      \n        = 0 && result \n          \n        \n\n        = 90 && result \n          \n        \n\n        = 108 && result \n          \n        \n\n        = 270 && result \n          \n        \n      \n\n      \n        = 0 && result \n          \n        \n\n        = 90 && result \n          \n        \n\n        = 108 && result \n          \n        \n\n        = 270 && result \n          \n        \n      \n    \n  \n\n  \n    \n    \n      \n        \n          \n            Sprawdź wiatr w wybranym mieście!\n          \n          \n            Wprowadź miasto!\n          \n        \n        \n          \n        \n        Sprawdź dane!\n        \n        \n          \n            Kierunek wiatru:\n            \n          \n          \n            Siła wiatru:\n            {{windspeed}}\n          \n        \n        \n      \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n      \n    \n   -->\n\n\n\n\n  \n  \n\n\n  \n\n    \n    \n  \n   -->\n    \n\n    \n                \n                    ./map-component.component.css\n                \n                .content{\n    display: flex;\n}\n\n.content__left-side{\n    width: 50%;\n    height: 40%;\n}\n\n.content__right-side{\n    width: 50%;\n    height: 40%;\n}\n\n.map{\n    opacity: 0;\n    position: relative;\n    display: block;\n}\n\n.map img{\n    width: 65%;\n    height: auto;\n}\n\n.map__bialystok img{\n    position: absolute;\n    top: 22%;\n    left: 50%;\n    width: 12%;\n    height: auto;\n}\n\n.map__krakow img{\n    position: absolute;\n    top: 68%;\n    left: 35%;\n    width: 12%;\n    height: auto;\n}\n\n.map__warszawa img{\n    position: absolute;\n    top: 35%;\n    left: 38%;\n    width: 12%;\n    height: auto;\n}\n\n.map__poznan img{\n    position: absolute;\n    top: 32%;\n    left: 15%;\n    width: 12%;\n    height: auto;\n}\n\n.city-wind-check{\n    width: 60%;\n    margin-top: 55px;\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 0.6s;\n    animation-fill-mode: backwards;\n}\n\n#expansion-button{\n    width: 40%;\n    margin-left: 10px;\n}\n\n.city-wind-result--icon{\n    width: 12%;\n    height: auto;\n}\n\n.city-wind-result{\n    display: flex;\n}\n\n.city-wind-result--deg{\n    width: 50%;\n    height: auto;\n}\n\n.city-wind-result--speed{\n    width: 50%;\n    height: auto;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* .map-container {\n    position: absolute;\n    top: 10%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n.map-frame {\n    border: 2px solid black;\n    height: 100%;\n}\n.results {\n    position: absolute;\n    top: 5%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n#map {\n    height: 100%;\n} */\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          = 0 && result                           = 90 && result                           = 108 && result                           = 270 && result                                       = 0 && result                           = 90 && result                           = 108 && result                           = 270 && result                                       = 0 && result                           = 90 && result                           = 108 && result                           = 270 && result                                       = 0 && result                           = 90 && result                           = 108 && result                           = 270 && result                                                                             Sprawdź wiatr w wybranym mieście!                                Wprowadź miasto!                                                    Sprawdź dane!                                      Kierunek wiatru:                                            Siła wiatru:            {{windspeed}}                                                       -->                   -->'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeteoStatsData.html":{"url":"classes/MeteoStatsData.html","title":"class - MeteoStatsData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeteoStatsData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/meteo-stats-data.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca obiekt składający się z danych pobranych z API. Klasa składa się z następujących obiektów:\ndata, temperatura, temperatura minimalna, temperatura maksymalna, opad atmosferyczny, opad śniegu, głębokość śniegu, kierunek wiatru,\nprędkość wiatru, szczytowy podmuch, nasłonecznienie oraz ciśnienie. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                peakgust\n                            \n                            \n                                    Public\n                                precipitation\n                            \n                            \n                                    Public\n                                pressure\n                            \n                            \n                                    Public\n                                snowdepth\n                            \n                            \n                                    Public\n                                snowfall\n                            \n                            \n                                    Public\n                                sunshine\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                temperatureMax\n                            \n                            \n                                    Public\n                                temperatureMin\n                            \n                            \n                                    Public\n                                winddirection\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date: Data, temperature: number, temperatureMin: number, temperatureMax: number, precipitation: number, snowfall: number, snowdepth: number, winddirection: number, windspeed: number, peakgust: number, sunshine: number, pressure: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/meteo-stats-data.ts:8\n                            \n                        \n\n                \n                    \n                            Konstruktor obiektu klasy MeteoStatData\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna określająca datę pomiaru\n\n                                                        \n                                                \n                                                \n                                                        temperature\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca temperature pobraną z API\n\n                                                        \n                                                \n                                                \n                                                        temperatureMin\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca wartość temperatury minimalnej pobraną z API\n\n                                                        \n                                                \n                                                \n                                                        temperatureMax\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca wartość temperatury maksymalnej pobraną z API\n\n                                                        \n                                                \n                                                \n                                                        precipitation\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca opad atmosferyczny pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        snowfall\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca opad śniegu pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        snowdepth\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca głębokość śniegu pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        winddirection\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca kierunek wiatru pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        windspeed\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca prędkość wiatru pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        peakgust\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca szczytowy podmuch pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        sunshine\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca nasłonecznienie pobrane z API\n\n                                                        \n                                                \n                                                \n                                                        pressure\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca ciśnienie pobrane z API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:25\n                            \n                        \n\n                \n                    \n                        zmienna określająca datę pomiaru\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            peakgust\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:34\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca szczytowy podmuch pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            precipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:29\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca opad atmosferyczny pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:36\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca ciśnienie pobrane z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snowdepth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:31\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca głębokość śniegu pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snowfall\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:30\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca opad śniegu pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sunshine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:35\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca nasłonecznienie pobrane z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:26\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca temperature pobraną z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:28\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca wartość temperatury maksymalnej pobraną z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:27\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca wartość temperatury minimalnej pobraną z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            winddirection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:32\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca kierunek wiatru pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:33\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca prędkość wiatru pobrany z API\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Data } from '@angular/router';\n\n/**\n * Klasa reprezentująca obiekt składający się z danych pobranych z API. Klasa składa się z następujących obiektów:\n * data, temperatura, temperatura minimalna, temperatura maksymalna, opad atmosferyczny, opad śniegu, głębokość śniegu, kierunek wiatru,\n * prędkość wiatru, szczytowy podmuch, nasłonecznienie oraz ciśnienie. \n */\nexport class MeteoStatsData {\n    /**\n     * Konstruktor obiektu klasy MeteoStatData\n     * @param date zmienna określająca datę pomiaru\n     * @param temperature zmienna przechowująca temperature pobraną z API\n     * @param temperatureMin zmienna przechowująca wartość temperatury minimalnej pobraną z API\n     * @param temperatureMax zmienna przechowująca wartość temperatury maksymalnej pobraną z API\n     * @param precipitation zmienna przechowująca opad atmosferyczny pobrany z API\n     * @param snowfall zmienna przechowująca opad śniegu pobrany z API\n     * @param snowdepth zmienna przechowująca głębokość śniegu pobrany z API\n     * @param winddirection zmienna przechowująca kierunek wiatru pobrany z API\n     * @param windspeed zmienna przechowująca prędkość wiatru pobrany z API\n     * @param peakgust zmienna przechowująca szczytowy podmuch pobrany z API\n     * @param sunshine zmienna przechowująca nasłonecznienie pobrane z API\n     * @param pressure zmienna przechowująca ciśnienie pobrane z API\n     */\n    constructor(\n        public date: Data,\n        public temperature: number,\n        public temperatureMin: number,\n        public temperatureMax: number,\n        public precipitation: number, // opad atmosferyczny\n        public snowfall: number,\n        public snowdepth: number,\n        public winddirection: number,\n        public windspeed: number,\n        public peakgust: number, // szczytowy podmuch\n        public sunshine: number,\n        public pressure: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeteoStatsModel.html":{"url":"classes/MeteoStatsModel.html","title":"class - MeteoStatsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeteoStatsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/stats-api-model.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca model składający się z obiektu MeteoStatsData.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MeteoStatsData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/stats-api-model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeteoStatsData } from './meteo-stats-data';\n\n/**\n * Klasa reprezentująca model składający się z obiektu MeteoStatsData.\n */\nexport class MeteoStatsModel {\n    public data: MeteoStatsData[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeteoStatsService.html":{"url":"injectables/MeteoStatsService.html","title":"injectable - MeteoStatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeteoStatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/meteo-stat/meteo-stats.service.ts\n        \n\n            \n                Description\n            \n            \n                Klasa łącząca się z API meteostat oraz pobierająca dane z danej stacji w podanym przedziale czasowym o podanym typie statystyk:\n1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiBaseUrl\n                            \n                            \n                                apiKey\n                            \n                            \n                                apiURL\n                            \n                            \n                                statsType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatsData\n                            \n                            \n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/meteo-stat/meteo-stats.service.ts:32\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy MeteoStatsService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatsData(type, station, dateFrom, dateTo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:46\n                \n            \n\n\n            \n                \n                    Funkcja łącząca się z API, pobierająca dane o określonych parametrach.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna określająca typ statystyk.\n\n                                    \n                                \n                                \n                                    station\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca stację, z którą mamy się połączyć przez API.\n\n                                    \n                                \n                                \n                                    dateFrom\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca datę od której chcemy pobrać dane.\n\n                                    \n                                \n                                \n                                    dateTo\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca datę do której chcemy pobrać dane.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \ngetType(type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:57\n                \n            \n\n\n            \n                \n                    Funkcja pobierająca informację o typie statystyk wybranych przez użytkownika.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna określająca typ statystyk: 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.meteostat.net/v1/history/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:19\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca bazowy adres API, z którego pobierane będą dane historyczne \nwykorzystywane przy wyznaczaniu statystyk.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '&key=XWfTSLqc'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:23\n                            \n                        \n\n                \n                    \n                        zmienna zawierająca klucz API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:28\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca adres API umożliwiający pobranie konkretnie ustalonych wartości. \nStworzony adres odwołuje się do danych o określonym typie statystyk, konkretnej stacji, w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statsType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:32\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca typ statystyk: 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { pipe, Observable } from 'rxjs';\nimport { MeteoStatsModel } from '../../models/stats-api-model';\n\n/**\n * Klasa łącząca się z API meteostat oraz pobierająca dane z danej stacji w podanym przedziale czasowym o podanym typie statystyk:\n * 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MeteoStatsService {\n  /**\n   * zmienna przechowująca bazowy adres API, z którego pobierane będą dane historyczne \n   * wykorzystywane przy wyznaczaniu statystyk.\n   */\n  apiBaseUrl = 'https://api.meteostat.net/v1/history/';\n  /**\n   * zmienna zawierająca klucz API\n   */\n  apiKey = '&key=XWfTSLqc';\n  /**\n   * zmienna przechowująca adres API umożliwiający pobranie konkretnie ustalonych wartości. \n   * Stworzony adres odwołuje się do danych o określonym typie statystyk, konkretnej stacji, w danym przedziale czasowym.\n   */\n  apiURL: string;\n  /**\n   * zmienna przechowująca typ statystyk: 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n   */\n  statsType: string;\n  /**\n   * Konstruktor klasy MeteoStatsService\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Funkcja łącząca się z API, pobierająca dane o określonych parametrach.\n   * @param type zmienna określająca typ statystyk.\n   * @param station zmienna przechowująca stację, z którą mamy się połączyć przez API.\n   * @param dateFrom zmienna przechowująca datę od której chcemy pobrać dane.\n   * @param dateTo zmienna przechowująca datę do której chcemy pobrać dane.\n   */\n  getStatsData(type, station, dateFrom, dateTo): Observable {\n    this.getType(type);\n    this.apiURL = this.apiBaseUrl + this.statsType + '?station=' + station + '&start=' + dateFrom + '&end=' + dateTo + this.apiKey;\n    return this.http\n      .get(this.apiURL);\n  }\n\n  /**\n   * Funkcja pobierająca informację o typie statystyk wybranych przez użytkownika.\n   * @param type zmienna określająca typ statystyk: 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne.\n   */\n  getType(type) {\n    switch (type) {\n      case '1': this.statsType = 'hourly'; break;\n      case '2': this.statsType = 'daily'; break;\n      case '3': this.statsType = 'monthly'; break;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QualityComponentComponent.html":{"url":"components/QualityComponentComponent.html","title":"component - QualityComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QualityComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/quality/quality-component.component.ts\n\n\n    \n        Description\n    \n    \n        Quality component\nKomponent zakładki Jakość Powietrza odpowiedzialny za pobieranie danych z API, wyświetlanie\ndanych o jakości powietrza, z wybranego przez użytkownika punktu na mapie, w postaci tabeli. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quality-component\n            \n\n            \n                styleUrls\n                ./quality-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./quality-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Private\n                                results\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: QualityServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/quality/quality-component.component.ts:61\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy 'QualityComponentComponent'.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QualityServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quality/quality-component.component.ts:72\n                \n            \n\n\n            \n                \n                    Inicjowanie wyświetlenia mapy na stronie.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/quality/quality-component.component.ts:57\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca mapę wyświetloną na stronie.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quality/quality-component.component.ts:61\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca odpowiedź z API Airly.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\nimport { QualityServiceService } from '../../services/quality/quality-service.service';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { AirData } from '../../services/quality/quality-module';\n// import { QualityServiceService } from 'src/app/services/quality/quality-service.service';\n\n/**\n * @ignore\n */\ndeclare var ol: any;\n/**\n * @ignore\n */\ndeclare var $: any;\n/**\n * Współrzędna odpowiadająca szerokości geograficznej.\n */\nvar latitude: any;\n/**\n * Współrzędna odpowiadająca długości geograficznej.\n */\nvar longitude: any;\n/**\n * Obiekt wyświetlający wybrane informacje o jakości powietrza z API Airly.\n */\nvar popupContainer: any;\n/**\n * Przycisk zamykania popupa\n */\nvar popupCloser: any;\n/**\n * Obiekt interpretujący wyniki w postaci obrazu (chmurki).\n */\nvar cloudContainer: any;\n\n/**\n * Quality component\n * Komponent zakładki Jakość Powietrza odpowiedzialny za pobieranie danych z API, wyświetlanie\n * danych o jakości powietrza, z wybranego przez użytkownika punktu na mapie, w postaci tabeli. \n */\n@Component({\n  selector: 'app-quality-component',\n  templateUrl: './quality-component.component.html',\n  styleUrls: ['./quality-component.component.css']\n})\n\n/**\n * Klasa odpowiadająca za wyświetlenie mapy w zakładce\n */\nexport class QualityComponentComponent implements OnInit {\n\n  /**\n   * Zmienna przechowująca mapę wyświetloną na stronie.\n   */\n  private map;\n/**\n   * Zmienna przechowująca odpowiedź z API Airly.\n   */\n  private results: any;\n  /**\n   * Konstruktor klasy 'QualityComponentComponent'.\n   * @param http\n   * @param service\n   */\n  constructor(private http: HttpClient, private service: QualityServiceService) { }\n\n  /**\n   * Inicjowanie wyświetlenia mapy na stronie.\n   */\n  ngOnInit() {\n    popupContainer = document.getElementById('popup');\n    popupCloser = document.getElementById('popup-closer');\n    cloudContainer = document.getElementById('cloudPopup');\n\n    var overlay = new ol.Overlay({\n    element: popupContainer,\n    autoPan: true,\n    autoPanAnimation: {\n      duration: 250\n    }\n  });\n  var cloudOverlay = new ol.Overlay({\n    element: cloudContainer,\n    autoPan: true,\n    autoPanAnimation: {\n      duration: 250\n    }\n  });\n\n  popupCloser.onclick = function() {\n    overlay.setPosition(undefined);\n    cloudOverlay.setPosition(undefined);\n    popupCloser.blur();\n    return false;\n  };\n\n    this.map = new ol.Map({\n      target: 'map',\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM()\n        })\n      ],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([23.1688403, 53.1324886]),\n        zoom: 8,\n      }),\n      overlays: [overlay,cloudOverlay]\n    });\n\n    var serviceTmp = this.service;\n    var qualityComponent = this;\n\n    this.map.on('click', function (args) {\n      console.log(args.coordinate);\n      var lonlat = ol.proj.transform(args.coordinate, 'EPSG:3857', 'EPSG:4326');\n      console.log(lonlat);\n      longitude = lonlat[0];\n      latitude = lonlat[1];\n      (`lat: ${latitude} long: ${longitude}`);\n      serviceTmp\n        .getAirData(latitude, longitude)\n        .subscribe((records: any) => {\n          console.log(records);\n          qualityComponent.results = records;\n        });\n        overlay.setPosition(args.coordinate);\n        cloudOverlay.setPosition(args.coordinate);\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        \n          \n            \n              PM1 (µg/m3)\n              PM10 (µg/m3)\n              PM25 (µg/m3)\n              CAQI (µg/m3)\n              Poziom\n              Opis\n            \n          \n          \n            {{result.current.values[0].value}} \n            {{result.current.values[2].value}} \n            {{result.current.values[1].value}} \n            {{result.current.indexes[0].value}} \n            {{result.current.indexes[0].level}} \n            {{result.current.indexes[0].description}} \n          \n        \n        \n          Brak danych w tym miejscu :(\n        \n      \n    \n    \n      \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./quality-component.component.css\n                \n                .map-container {\n    position: absolute;\n    top: 10%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n.map-frame {\n    border: 2px solid black;\n    height: 100%;\n}\n\n.table{\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n\n#map {\n    height: 100%;\n}\n#marker {\n    width: 20px;\n    height: 20px;\n    border: 1px solid #088;\n    border-radius: 10px;\n    background-color: #0FF;\n    opacity: 0.5;\n  }\n\n  .ol-popup {\n    position: absolute;\n    background-color: white;\n    box-shadow: 0 1px 4px rgba(0,0,0,0.2);\n    padding: 2px;\n    border-radius: 10px;\n    border: 1px solid #cccccc;\n    bottom: 12px;\n    left: -50px;\n    min-width: 280px;\n  }\n  .ol-popup:after, .ol-popup:before {\n    top: 100%;\n    border: solid transparent;\n    content: \" \";\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  .ol-popup:after {\n    border-top-color: white;\n    border-width: 10px;\n    left: 48px;\n    margin-left: -10px;\n  }\n  .ol-popup:before {\n    border-top-color: #cccccc;\n    border-width: 11px;\n    left: 48px;\n    margin-left: -11px;\n  }\n  .ol-popup-closer {\n    text-decoration: none;\n    position: absolute;\n    top: 2px;\n    right: 8px;\n  }\n  .ol-popup-closer:after {\n    content: \"✖\";\n  }\n\n  #cloudPopup {\n    min-width: 130px;\n    min-height: 95px;\n    max-width: 130px;\n    max-height: 95px;\n    margin-left: -70px;\n    margin-top: -10px;\n  }\n\n  .cloudImage {\n    width: 100%;\n    height: 100%;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  PM1 (µg/m3)              PM10 (µg/m3)              PM25 (µg/m3)              CAQI (µg/m3)              Poziom              Opis                                            {{result.current.values[0].value}}             {{result.current.values[2].value}}             {{result.current.values[1].value}}             {{result.current.indexes[0].value}}             {{result.current.indexes[0].level}}             {{result.current.indexes[0].description}}                                     Brak danych w tym miejscu :(                                                                          '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QualityComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QualityServiceService.html":{"url":"injectables/QualityServiceService.html","title":"injectable - QualityServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QualityServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quality/quality-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Pobieranie danych z api airly.eu. \nAPI airly.eu pozwala na zadanie 100 zapytań dziennie,\no północy jest liczone kolejne 100 zapytań. Po przekroczeniu limitu pojawia się komunikat \"limit exceeded\",\nnie sa pobierane żadne opłaty.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quality/quality-service.service.ts:29\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy 'QualityServiceService'.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAirData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAirData(lat: string, lng: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quality/quality-service.service.ts:43\n                \n            \n\n\n            \n                \n                    Funkcja pobiera dane z api o jakości powietrza w wybranym miejscu opisanym poprzez szerokość i długość geograficzną.\nOdwołuje się do obiektu klasy AirData.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        szerokość geograficzna\n\n                                    \n                                \n                                \n                                    lng\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        długość geograficzna\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://airapi.airly.eu/v2/measurements/nearest?indexType=AIRLY_CAQI&maxDistanceKM=100'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-service.service.ts:29\n                            \n                        \n\n                \n                    \n                        Adres api, z którego pobieramy dane o jakości powietrza.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-service.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { AirData } from './quality-module';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n/**\n * Pobieranie danych z api airly.eu. \n * \n * API airly.eu pozwala na zadanie 100 zapytań dziennie,\n * o północy jest liczone kolejne 100 zapytań. Po przekroczeniu limitu pojawia się komunikat \"limit exceeded\",\n * nie sa pobierane żadne opłaty.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QualityServiceService {\n\n  /**\n   * @ignore\n   */\n  list: any;\n  /**\n   * Adres api, z którego pobieramy dane o jakości powietrza.\n   */\n  apiUrl = 'https://airapi.airly.eu/v2/measurements/nearest?indexType=AIRLY_CAQI&maxDistanceKM=100';  unsubscribe: any;\n\n  /**\n   * Konstruktor klasy 'QualityServiceService'.\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Funkcja pobiera dane z api o jakości powietrza w wybranym miejscu opisanym poprzez szerokość i długość geograficzną.\n   * Odwołuje się do obiektu klasy AirData.\n   * @param lat szerokość geograficzna\n   * @param lng długość geograficzna\n   */\n  public getAirData(lat: string, lng: string): Observable {\n    return this.http\n      .get(`${this.apiUrl}&lat=${lat}&lng=${lng}&apikey=SV8Wb734fM470C2HYs8atebFRNg5LzU9`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new AirData(item.current))),\n        catchError((error: HttpErrorResponse) => {\n          return Observable.throw(error.message || \"Server Message\");\n        })\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Station.html":{"url":"classes/Station.html","title":"class - Station","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Station\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/station.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca miejscowość, dla której mogą być policzone statystyki.\nObiekt składa się z id oraz nazwy miejscowości. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/station.ts:5\n                            \n                        \n\n                \n                    \n                            Konstruktor obiektu klasy Station\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                numer id\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                nazwa miejscowości\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/station.ts:11\n                            \n                        \n\n                \n                    \n                        numer id\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/station.ts:11\n                            \n                        \n\n                \n                    \n                        nazwa miejscowości\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Station {\n    /**\n     * Konstruktor obiektu klasy Station\n     * @param id numer id\n     * @param name nazwa miejscowości\n     */\n    constructor(public id: number, public name: string) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StationList.html":{"url":"classes/StationList.html","title":"class - StationList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StationList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/meteo-stat/station-list.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca listę miejscowości możliwych do wyboru przy wyznaczaniu statysyk. \nLista przechowuje id miejscowości i jej nazwę.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/meteo-stat/station-list.ts:11\n                            \n                        \n\n                \n                    \n                            Konstruktor kalsy StationList\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/station-list.ts:11\n                            \n                        \n\n                \n                    \n                        Lista przechowująca id oraz nazwę stacji pogodowej.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Station } from '../../models/station';\n\n/**\n * Klasa reprezentująca listę miejscowości możliwych do wyboru przy wyznaczaniu statysyk. \n * Lista przechowuje id miejscowości i jej nazwę.\n */\nexport class StationList {\n    /**\n     * Lista przechowująca id oraz nazwę stacji pogodowej.\n     */\n    stationList: Array;\n\n    /**\n     * Konstruktor kalsy StationList\n     */\n    constructor() {\n        this.stationList = new Array();\n\n        this.stationList.push(new Station(12100, 'Kolobrzeg                  '));\n        this.stationList.push(new Station(12105, 'Koszalin                   '));\n        this.stationList.push(new Station(12106, 'Koszalin Zegrze Pom.       '));\n        this.stationList.push(new Station(12115, 'Ustka                      '));\n        this.stationList.push(new Station(12120, 'Leba                       '));\n        this.stationList.push(new Station(12125, 'Lebork                     '));\n        this.stationList.push(new Station(12135, 'Hel                        '));\n        this.stationList.push(new Station(12145, 'Gdynia                     '));\n        this.stationList.push(new Station(12150, 'Gdansk-Rebiechowo          '));\n        this.stationList.push(new Station(12155, 'Gdansk-Swibno              '));\n        this.stationList.push(new Station(12160, 'Elblag                     '));\n        this.stationList.push(new Station(12185, 'Ketrzyn                    '));\n        this.stationList.push(new Station(12195, 'Suwalki                    '));\n        this.stationList.push(new Station(12200, 'Swinoujscie                '));\n        this.stationList.push(new Station(12205, 'Szczecin                   '));\n        this.stationList.push(new Station(12206, 'Goleniow                   '));\n        this.stationList.push(new Station(12210, 'Resko                      '));\n        this.stationList.push(new Station(12215, 'Szczecinek                 '));\n        this.stationList.push(new Station(12230, 'Pila                       '));\n        this.stationList.push(new Station(12235, 'Chojnice                   '));\n        this.stationList.push(new Station(12250, 'Torun                      '));\n        this.stationList.push(new Station(12270, 'Mlawa                      '));\n        this.stationList.push(new Station(12272, 'Olsztyn                    '));\n        this.stationList.push(new Station(12280, 'Mikolajki                  '));\n        this.stationList.push(new Station(12285, 'Ostroleka                  '));\n        this.stationList.push(new Station(12295, 'Bialystok                  '));\n        this.stationList.push(new Station(12300, 'Gorzow Wlkp                '));\n        this.stationList.push(new Station(12310, 'Slubice                    '));\n        this.stationList.push(new Station(12330, 'Poznan                     '));\n        this.stationList.push(new Station(12345, 'Kolo                       '));\n        this.stationList.push(new Station(12360, 'Plock                      '));\n        this.stationList.push(new Station(12365, 'Brwinow                    '));\n        this.stationList.push(new Station(12372, 'Warszawa Bielany           '));\n        this.stationList.push(new Station(12374, 'Legionowo                  '));\n        this.stationList.push(new Station(12375, 'Warszawa-Okecie            '));\n        this.stationList.push(new Station(12385, 'Siedlce                    '));\n        this.stationList.push(new Station(12399, 'Terespol                   '));\n        this.stationList.push(new Station(12400, 'Zielona Gora               '));\n        this.stationList.push(new Station(12415, 'Legnica Bartoszow          '));\n        this.stationList.push(new Station(12418, 'Leszno-Strzyzewice         '));\n        this.stationList.push(new Station(12424, 'Wroclaw Copernicus Airport '));\n        this.stationList.push(new Station(12425, 'Wroclaw I                  '));\n        this.stationList.push(new Station(12435, 'Kalisz                     '));\n        this.stationList.push(new Station(12455, 'Wielun                     '));\n        this.stationList.push(new Station(12465, 'Lodz                       '));\n        this.stationList.push(new Station(12469, 'Sulejow                    '));\n        this.stationList.push(new Station(12471, 'Belsk                      '));\n        this.stationList.push(new Station(12485, 'Radom                      '));\n        this.stationList.push(new Station(12488, 'Kozienice                  '));\n        this.stationList.push(new Station(12490, 'Deblin / Irena             '));\n        this.stationList.push(new Station(12491, 'Pulawy                     '));\n        this.stationList.push(new Station(12495, 'Lublin Radawiec            '));\n        this.stationList.push(new Station(12497, 'Wlodawa                    '));\n        this.stationList.push(new Station(12500, 'Jelenia Gora               '));\n        this.stationList.push(new Station(12510, 'Sniezka                    '));\n        this.stationList.push(new Station(12520, 'Klodzko                    '));\n        this.stationList.push(new Station(12530, 'Opole                      '));\n        this.stationList.push(new Station(12540, 'Raciborz                   '));\n        this.stationList.push(new Station(12550, 'Czestochowa                '));\n        this.stationList.push(new Station(12555, 'Pyrzowice                  '));\n        this.stationList.push(new Station(12560, 'Katowice                   '));\n        this.stationList.push(new Station(12566, 'Krakow                     '));\n        this.stationList.push(new Station(12570, 'Kielce                     '));\n        this.stationList.push(new Station(12575, 'Tarnow                     '));\n        this.stationList.push(new Station(12580, 'Rzeszow-Jasionka           '));\n        this.stationList.push(new Station(12585, 'Sandomierz                 '));\n        this.stationList.push(new Station(12595, 'Zamosc                     '));\n        this.stationList.push(new Station(12600, 'Bielsko-Biala              '));\n        this.stationList.push(new Station(12625, 'Zakopane                   '));\n        this.stationList.push(new Station(12650, 'Kasprowy Wierch            '));\n        this.stationList.push(new Station(12660, 'Nowy Sacz                  '));\n        this.stationList.push(new Station(12690, 'Lesko                      '));\n        this.stationList.push(new Station(12695, 'Przemysl                   '));\n        // this.stationList.sort();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatisticType.html":{"url":"classes/StatisticType.html","title":"class - StatisticType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatisticType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistic-type.ts\n        \n\n            \n                Description\n            \n            \n                Klasa określająca typ statystyk możliwych do wyboru przez użytkownika.\nDostępne są trzy typy: statystyki godzinowe, statystyki dzienne oraz statystyki miesięczne.\nTyp statystyk określa jakie dane zostaną pobrane z API, czyli czy pobrane pomiary będą w odtępach godzinowych, dniowych czy miesięcznych.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistic-type.ts:6\n                            \n                        \n\n                \n                    \n                            Konstruktor obiektu klasy StatisticType\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                indywidualy numer rodzaju statystyk\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna określająca rodzaj statystyk\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistic-type.ts:12\n                            \n                        \n\n                \n                    \n                        indywidualy numer rodzaju statystyk\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistic-type.ts:12\n                            \n                        \n\n                \n                    \n                        zmienna określająca rodzaj statystyk\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StatisticType {\n    /**\n     * Konstruktor obiektu klasy StatisticType\n     * @param id indywidualy numer rodzaju statystyk\n     * @param name zmienna określająca rodzaj statystyk\n     */\n    constructor(public id: number, public name: string) {\n\n    }\n}\n\n\nexport const StatisticTypeList: StatisticType[] =\n    [\n        {\n            id: 1,\n            name: 'Godzinowy'\n        },\n        {\n            id: 2,\n            name: 'Dzienny'\n        },\n        {\n            id: 3,\n            name: 'Miesięczny'\n        }\n    ];\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/calculated-stats.ts\n        \n\n            \n                Description\n            \n            \n                Klasa przechowująca policzone statystyki temperatury, ciśnienia oraz siły wiatru.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pressure\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windPower\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(temperature: CalculatedProps, pressure: CalculatedProps, windPower: CalculatedProps)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/calculated-stats.ts:6\n                            \n                        \n\n                \n                    \n                            Konstruktor obiektu klasy Statistics\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        temperature\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca informacje o temperaturze.\n\n                                                        \n                                                \n                                                \n                                                        pressure\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca informacje o ciśnienu.\n\n                                                        \n                                                \n                                                \n                                                        windPower\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmeinna przechowująca informacje o sile wiatru.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:16\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca informacje o ciśnienu.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:15\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca informacje o temperaturze.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windPower\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:17\n                            \n                        \n\n                \n                    \n                        zmeinna przechowująca informacje o sile wiatru.\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CalculatedProps } from './statistics';\n\n/**\n * Klasa przechowująca policzone statystyki temperatury, ciśnienia oraz siły wiatru.\n */\nexport class Statistics {\n\n  /**\n   * Konstruktor obiektu klasy Statistics\n   * @param temperature zmienna przechowująca informacje o temperaturze.\n   * @param pressure zmienna przechowująca informacje o ciśnienu.\n   * @param windPower zmeinna przechowująca informacje o sile wiatru.\n   */\n    constructor(\n        public temperature: CalculatedProps,\n        public pressure: CalculatedProps,\n        public windPower: CalculatedProps) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponentComponent.html":{"url":"components/WeatherComponentComponent.html","title":"component - WeatherComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/weather/weather-component.component.ts\n\n\n    \n        Description\n    \n    \n        Weather component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-component\n            \n\n            \n                styleUrls\n                ./weather-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./weather-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                resultsForecast\n                            \n                            \n                                    Public\n                                resultsForecastToChartData\n                            \n                            \n                                    Public\n                                resultsForecastToChartMaxTemp\n                            \n                            \n                                    Public\n                                resultsForecastToChartMinTemp\n                            \n                            \n                                    Public\n                                resultsForecastToChartTemp\n                            \n                            \n                                    Public\n                                resultsForecastToTable\n                            \n                            \n                                    Public\n                                resultsWeather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawChart\n                            \n                            \n                                getForecastService\n                            \n                            \n                                getWeatherService\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showContent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: WeatherServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/weather/weather-component.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WeatherServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawChart\n                        \n                        \n                    \n                \n            \n            \n                \ndrawChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:155\n                \n            \n\n\n            \n                \n                    Funkcja rysująca wykres prognozy pogody. Odwołujemy się do niej w funkcji 'getForecastService()'.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastService\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastService(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:108\n                \n            \n\n\n            \n                \n                    Funkcja inicująca pobieranie danych z prognozą pogody oraz przypisanie ich pod ospowiednie zmienne.\nPrzypisanie pod zmienną 'resultsForecast' danych do wyświetlenia\nw tabeli z prognozą pogody na najbliższe dni.\nDane pobierane są dzięki funkcji 'getWeatherForecastData()' .\nZ danych uzyskanych przez funkcję 'getWeatherForecastData()' wyciągamy i przypisujemy pod odpowiednie zmienne czas pomiaru,\ntemperaturę, temperaturę minimalną i temperaturę maksymalną. Zmienne wykorzystujemy do rysowania wykresu,\nfunkcja 'drawChart()'\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejsowość, dla której pobieramy dane.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherService\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherService(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:83\n                \n            \n\n\n            \n                \n                    Przypisanie pod zmienną 'resultWeather' danych, które będą wyświetlone w tabeli z aktualnym stanem pogody\nw miejscowości podanej przez użytkownika. Dane pobierane są dzięki funkcji 'getWeatherData()'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość, dla której wyświetlamy dane\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showContent\n                        \n                        \n                    \n                \n            \n            \n                \nshowContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:70\n                \n            \n\n\n            \n                \n                    Funkcja inicjue wyświetlanie się tabel z danymi oraz wykresu poprzez nacisnięcie przycisku \"Pokaż dane!\"\nOdwołuje się do tabel z pogodą w danym momencie '.content__table', z prognozą pogody '.content__chart' oraz wykresem '.chart-area'.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMsg\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:33\n                            \n                        \n\n                \n                    \n                        Informacja o błędzie przy wprowadzaniu przez użytkownika nazwy miasta.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:29\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca dane z prognozą pogody na najbliższe dni analizowanego miasta.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:37\n                            \n                        \n\n                \n                    \n                        Przechowuje dane o czasie pomiaru, wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartMaxTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:49\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury maksymalne wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartMinTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:45\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury minimalne wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:41\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:25\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca dane z aktualnym stanem pogody analizowanego miasta.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WeatherServiceService } from '../../services/weather/weather-service.service';\nimport { Chart } from 'chart.js';\nimport { WeatherData } from '../../services/weather/weather-module';\nimport { isNull } from 'util';\ndeclare var $: any;\n\n/**\n * Weather component\n */\n@Component({\n  selector: 'app-weather-component',\n  templateUrl: './weather-component.component.html',\n  styleUrls: ['./weather-component.component.css']\n})\n/**\n * Klasa odpowiadająca za informacje wyświetlane na stronie głownej aplikacji\n */\nexport class WeatherComponentComponent implements OnInit {\n\n /**\n  * Zmienna przechowująca dane z aktualnym stanem pogody analizowanego miasta.\n  */\n public resultsWeather = [];\n /**\n * Zmienna przechowująca dane z prognozą pogody na najbliższe dni analizowanego miasta.\n */\npublic resultsForecast: any;\n/**\n * Informacja o błędzie przy wprowadzaniu przez użytkownika nazwy miasta.\n */\npublic errorMsg;\n/**\n * Przechowuje dane o czasie pomiaru, wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartData = [];\n/**\n * Przechowuje temperatury wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartTemp = [];\n/**\n * Przechowuje temperatury minimalne wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartMinTemp = [];\n/**\n * Przechowuje temperatury maksymalne wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartMaxTemp = [];\npublic resultsForecastToTable = [];\n/**\n *\n * @param http\n * @param service\n */\n  constructor(private http: HttpClient, private service: WeatherServiceService) { }\n\n  ngOnInit() {\n    //podstawowe animacje dla dwóch głownych okien na pierwszej stronie aplikacji\n    $(document).ready(function () {\n      $(\".content\").animate({ opacity: 1, }, 1500);\n      $(\".nav\").fadeTo(\"slow\", 1);\n    })\n  }\n\n  /**\n   * Funkcja inicjue wyświetlanie się tabel z danymi oraz wykresu poprzez nacisnięcie przycisku \"Pokaż dane!\"\n   * Odwołuje się do tabel z pogodą w danym momencie '.content__table', z prognozą pogody '.content__chart' oraz wykresem '.chart-area'.\n   */\n  showContent() {\n    $(document).ready(function () {\n      $(\".content__table\").show();\n      $(\".content__chart\").show();\n      $(\".chart-area\").show();\n    })\n  }\n\n  /**\n   * Przypisanie pod zmienną 'resultWeather' danych, które będą wyświetlone w tabeli z aktualnym stanem pogody\n   * w miejscowości podanej przez użytkownika. Dane pobierane są dzięki funkcji 'getWeatherData()'.\n   * @param {string} term Parametr określający miejscowość, dla której wyświetlamy dane\n   */\n  getWeatherService(term: string) {\n    this.service\n      .getWeatherData(term)\n      .subscribe((records: any) => {\n        console.log(records);\n        this.resultsWeather.push(records);\n      },\n        error => this.errorMsg = \"Nie wprowadzono miejscowości lub wprowadzono złą nazwę!\",\n      )\n    this.errorMsg = null;\n  }\n\n  /**\n   * Funkcja inicująca pobieranie danych z prognozą pogody oraz przypisanie ich pod ospowiednie zmienne.\n   *\n   * Przypisanie pod zmienną 'resultsForecast' danych do wyświetlenia\n   * w tabeli z prognozą pogody na najbliższe dni.\n   * Dane pobierane są dzięki funkcji 'getWeatherForecastData()' .\n   *\n   * Z danych uzyskanych przez funkcję 'getWeatherForecastData()' wyciągamy i przypisujemy pod odpowiednie zmienne czas pomiaru,\n   * temperaturę, temperaturę minimalną i temperaturę maksymalną. Zmienne wykorzystujemy do rysowania wykresu,\n   * funkcja 'drawChart()'\n   * @param {string} term Parametr określający miejsowość, dla której pobieramy dane.\n   * @return\n   */\n  getForecastService(term: string) {\n    this.service\n      .getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        var maxTemp = data[0].list[0].main.temp_max;\n        var minTemp = data[0].list[0].main.temp_min;\n        var icon = data[0].list[0].weather[0].icon;\n        for (let i = 0; i  data[0].list[i+1].main.temp_min){\n              minTemp = data[0].list[i+1].main.temp_min;\n            }\n\n          }\n          else {\n            this.resultsForecastToTable.push({date: date.getDate() + \".0\" + (date.getMonth()+1), minTemp: minTemp, maxTemp: maxTemp, icon: icon});\n            maxTemp = data[0].list[i].main.temp_max;\n            minTemp = data[0].list[i].main.temp_min;\n          }\n        }\n\n\n        for (let i = 0; i \n    \n\n    \n        \n    \n        Sprawdź pogodę w swoim mieście\n\n    \n\n    \n        \n        Pokaż\n            dane!\n    \n\n    \n        {{errorMsg}}\n    \n\n\n\n    \n        \n\n            \n                \n                    Miasto\n                    Temperatura\n                    Temperatura Odczuwalna\n                    Temperatura Minimalna\n                    Temperatura Maksymalna\n                    Ciśnienie\n                    Wilgotność\n                    Pogoda\n                \n            \n\n            \n                {{result[0].name}}\n                {{result[0].main.temp}} C\n                {{result[0].main.feels_like}} C\n                {{result[0].main.temp_min}} C\n                {{result[0].main.temp_max}} C\n                {{result[0].main.pressure}} hPa\n                {{result[0].main.humidity}} %\n                \n                    \n                \n            \n\n        \n    \n\n    \n        \n\n            \n                \n                    Data\n                    Temperatura max/min\n                    Pogoda\n                \n            \n\n            \n                \n                    {{resultTable.date}}\n                \n                \n                    {{resultTable.maxTemp}} C / {{resultTable.minTemp}} C\n                \n                \n                    \n                \n            \n\n        \n    \n\n\n\n    {{chart}}\n\n\n    \n\n    \n                \n                    ./weather-component.component.css\n                \n                .navigation{\n    background-color: #ffffff;\n}\n\n.nav{\n    height: 40vh;\n    background-color: #ffffff;\n\n    background: url(https://www.setaswall.com/wp-content/uploads/2017/03/Sun-Sky-Summer-Wallpaper-2560x1600.jpg);\n    background-repeat: no-repeat;\n    background-position: center;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    opacity: 0;\n}\n\nh2{\n    color: #ffffff;\n    font-family: \"Lato\", sans-serif;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n}\n\n.nav__buttons__input{\n    border-radius: 100px;\n    padding: 25px 60px;\n    height: 15px;\n    text-align: center;\n    text-transform: uppercase;\n\n    animation-name: moveToBottom;\n    animation-duration: 1s;\n    animation-delay: 0.5s;\n    animation-fill-mode: backwards;\n}\n\n.nav__buttons__input:hover{\n    background: linear-gradient(#626d329f,#6e5f33af);\n    color: #ffffff;\n    transition-duration: 2s;\n}\n\n.nav__buttons__btn{\n    border-radius: 100px;\n    padding: 7px 10px;\n    margin-left: 5px;\n\n    animation-name: moveToLeft;\n    animation-duration: 1.5s;\n    animation-delay: 1.2s;\n    animation-fill-mode: backwards;\n}\n\n.nav__buttons__btn:hover{\n    background: linear-gradient(#626d329f,#6e5f33af);\n    color: #ffffff;\n    transition-duration: 0.5s;\n}\n\n.content{\n    opacity: 0;\n    margin-top: 15px;\n    display: flex;\n    justify-content: space-around;\n}\n\n.content__table{\n    display: none;\n    text-align: center;\n    width: 50%;\n    height:0px;\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 0.2;\n}\n\n.content__chart{\n    display: block;\n    text-align: center;\n    width: 40%;\n    background-color: #ffffff;\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 0.4s;\n    animation-fill-mode: backwards;\n}\n\n.table{\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n\n.nav__error{\n    font-size: 22px;\n    color: #ffffff;\n    text-shadow: 1px 1px 6px rgba(172,91,0,0.88);\n}\n\n.content__my-custom-scrollbar {\n    position: relative;\n    height: 300px;\n    overflow: auto;\n}\n\n.chart-area{\n    width: 50%;\n    height: auto;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10px;\n    display: none;\n    background-color: #ffffff;\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 1s;\n    animation-fill-mode: backwards;\n\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sprawdź pogodę w swoim mieście                        Pokaż            dane!                {{errorMsg}}                                                                Miasto                    Temperatura                    Temperatura Odczuwalna                    Temperatura Minimalna                    Temperatura Maksymalna                    Ciśnienie                    Wilgotność                    Pogoda                                                        {{result[0].name}}                {{result[0].main.temp}} C                {{result[0].main.feels_like}} C                {{result[0].main.temp_min}} C                {{result[0].main.temp_max}} C                {{result[0].main.pressure}} hPa                {{result[0].main.humidity}} %                                                                                                                                        Data                    Temperatura max/min                    Pogoda                                                                            {{resultTable.date}}                                                    {{resultTable.maxTemp}} C / {{resultTable.minTemp}} C                                                                                                {{chart}}'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherData.html":{"url":"classes/WeatherData.html","title":"class - WeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-module.ts\n        \n\n            \n                Description\n            \n            \n                Klasa opisująca dane pogodowe w danym momencie odczytane\nz api openweathermap.org.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                main\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                visibility\n                            \n                            \n                                    Public\n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, visibility: number, main: number, weather: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-module.ts:5\n                            \n                        \n\n                \n                    \n                            Kostruktor klasy WeatherData().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                nazwa miasta, którą podał użytkownik\n\n                                                        \n                                                \n                                                \n                                                        visibility\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                I don't know \n\n                                                        \n                                                \n                                                \n                                                        main\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n\n                                                        \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ikonka określająca pogodę w danym momencie\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            main\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:16\n                            \n                        \n\n                \n                    \n                        dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:14\n                            \n                        \n\n                \n                    \n                        nazwa miasta, którą podał użytkownik\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:15\n                            \n                        \n\n                \n                    \n                        I don't know \n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:17\n                            \n                        \n\n                \n                    \n                        ikonka określająca pogodę w danym momencie\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WeatherData {\n    /**\n     * Kostruktor klasy WeatherData().\n     * @param {string} name nazwa miasta, którą podał użytkownik\n     * @param {number} visibility I don't know \n     * @param {number} main dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n     * @param {string} weather ikonka określająca pogodę w danym momencie\n     */\n    constructor(\n        public name: string,\n        public visibility: number,\n        public main: number,\n        public weather: string,\n    ) { }\n}\n\n/**\n * Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org.\n */\nexport class ForecastData {\n    /**\n     * Kostruktor klasy ForecastData().\n     * @param list macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n     * (czas pomiaru, temperatura max/min, znak określający pogodę) \n     */\n    constructor(\n        public list = [],\n    ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherServiceService.html":{"url":"injectables/WeatherServiceService.html","title":"injectable - WeatherServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Klasa z funkcjami pobierającymi dane z api openweathermap.org. Wybrane API jest darmowe, daje możliwość pobrania danych o aktualnym\nstanie pogody oraz prognozę pięciodniową.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                            \n                                apiUrlForecast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                getWeatherForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-service.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherData(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather-service.service.ts:35\n                \n            \n\n\n            \n                \n                    Funkcja wyciąga aktualne dane pogodowe z api openweathermap.org dla wybranej przez użytkownika miejscowości.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość wybraną przez użytkownika.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherForecastData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherForecastData(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather-service.service.ts:56\n                \n            \n\n\n            \n                \n                    Funkcja pobiera z api openweathermap.org dane opisujące prognozę pogody na najbliższe pięć dni.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość wybraną przez użytkownika.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://api.openweathermap.org/data/2.5/weather?q=\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-service.service.ts:22\n                            \n                        \n\n                \n                    \n                        Adres api, z którgo pobierane są dane o aktualnym stanie pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrlForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://api.openweathermap.org/data/2.5/forecast?q=\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-service.service.ts:27\n                            \n                        \n\n                \n                    \n                        Adres api, z którgo pobierane są dane z prognozą pogody na najbliższe dni.\nZ api możemy uzyskać prognozę pogody na pięć dni w przód.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { WeatherData, ForecastData } from './weather-module';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n/**\n * Klasa z funkcjami pobierającymi dane z api openweathermap.org. Wybrane API jest darmowe, daje możliwość pobrania danych o aktualnym\n * stanie pogody oraz prognozę pięciodniową.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherServiceService {\n\n  /**\n   * Adres api, z którgo pobierane są dane o aktualnym stanie pogody.\n   */\n  apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\";\n    /**\n   * Adres api, z którgo pobierane są dane z prognozą pogody na najbliższe dni.\n   * Z api możemy uzyskać prognozę pogody na pięć dni w przód.\n   */\n  apiUrlForecast = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n\n  constructor(private http: HttpClient) { }\n    /**\n   * Funkcja wyciąga aktualne dane pogodowe z api openweathermap.org dla wybranej przez użytkownika miejscowości.\n   * @param {string} term Parametr określający miejscowość wybraną przez użytkownika.\n   * @retruns  ????????\n   */\n  public getWeatherData(term: string): Observable {\n\n    // return this.http\n    //   .get(this.apiUrl)         // do sprawdzenia wszystkich endpointów\n\n    return this.http\n      .get(`${this.apiUrl}${term}&appid=9a3485ea70ca20151b5d5d7b29054807&units=metric`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new WeatherData(item.name, item.visibility, item.main, item.weather))),\n        catchError((error: HttpErrorResponse) => {\n          return Observable.throw(error.message || \"Server Message\");\n        })\n      )\n  }\n\n   /**\n    * Funkcja pobiera z api openweathermap.org dane opisujące prognozę pogody na najbliższe pięć dni.\n    * @param {string} term Parametr określający miejscowość wybraną przez użytkownika.\n    */\n  public getWeatherForecastData(term: string): Observable {\n    return this.http\n      .get(`${this.apiUrlForecast}${term}&appid=b742a4225977a8a94a092feb673aad31&units=metric`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new ForecastData(item.list)))\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routableComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/air-quality-component/air-quality-component.component.ts\n            \n            component\n            AirQualityComponentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/map/map-component.component.ts\n            \n            component\n            MapComponentComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/components/map/map-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            component\n            QualityComponentComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            cloudContainer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            latitude\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            longitude\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            popupCloser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            popupContainer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/stats-component/stats-component.component.ts\n            \n            component\n            StatsComponentComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/components/stats-component/stats-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/weather/weather-component.component.ts\n            \n            component\n            WeatherComponentComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/components/weather/weather-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/calculated-stats.ts\n            \n            class\n            Statistics\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/meteo-stats-data.ts\n            \n            class\n            MeteoStatsData\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/models/station.ts\n            \n            class\n            Station\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/statistic-type.ts\n            \n            class\n            StatisticType\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/statistic-type.ts\n            \n            variable\n            StatisticTypeList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/statistics.ts\n            \n            class\n            CalculatedProps\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/models/stats-api-model.ts\n            \n            class\n            MeteoStatsModel\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/services/air-quality/air-quality-module.ts\n            \n            class\n            AirQualityData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/air-quality/air-quality.service.ts\n            \n            injectable\n            AirQualityService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/meteo-stat/meteo-stats.service.ts\n            \n            injectable\n            MeteoStatsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/meteo-stat/station-list.ts\n            \n            class\n            StationList\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/quality/quality-module.ts\n            \n            class\n            AirData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/quality/quality-service.service.ts\n            \n            injectable\n            QualityServiceService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-module.ts\n            \n            class\n            ForecastData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-module.ts\n            \n            class\n            WeatherData\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-service.service.ts\n            \n            injectable\n            WeatherServiceService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.11\n        \n            @angular/cdk : ~8.2.3\n        \n            @angular/common : ~8.2.11\n        \n            @angular/compiler : ~8.2.11\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ~8.2.11\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ~8.2.11\n        \n            @angular/platform-browser-dynamic : ~8.2.11\n        \n            @angular/router : ~8.2.11\n        \n            @ng-bootstrap/ng-bootstrap : ^6.0.2\n        \n            chart.js : ^2.9.3\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.5.0\n        \n            leaflet : ^1.6.0\n        \n            ol : ^6.3.1\n        \n            rxjs : ~6.4.0\n        \n            rxjs-compat : ^6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeteoApp\nThis project was generated with Angular CLI version 8.3.14.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponentComponent\n\nMapComponentComponent\n\nAppModule -->\n\nMapComponentComponent->AppModule\n\n\n\n\n\nQualityComponentComponent\n\nQualityComponentComponent\n\nAppModule -->\n\nQualityComponentComponent->AppModule\n\n\n\n\n\nStatsComponentComponent\n\nStatsComponentComponent\n\nAppModule -->\n\nStatsComponentComponent->AppModule\n\n\n\n\n\nWeatherComponentComponent\n\nWeatherComponentComponent\n\nAppModule -->\n\nWeatherComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../map-component.component.ts)\n                        \n                        \n                            $   (src/.../stats-component.component.ts)\n                        \n                        \n                            $   (src/.../weather-component.component.ts)\n                        \n                        \n                            cloudContainer   (src/.../quality-component.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            latitude   (src/.../quality-component.component.ts)\n                        \n                        \n                            longitude   (src/.../quality-component.component.ts)\n                        \n                        \n                            popupCloser   (src/.../quality-component.component.ts)\n                        \n                        \n                            popupContainer   (src/.../quality-component.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routableComponent   (src/.../app-routing.module.ts)\n                        \n                        \n                            StatisticTypeList   (src/.../statistic-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/map/map-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/stats-component/stats-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/weather/weather-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/quality/quality-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloudContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Obiekt interpretujący wyniki w postaci obrazu (chmurki).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Współrzędna odpowiadająca szerokości geograficznej.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Współrzędna odpowiadająca długości geograficznej.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupCloser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Przycisk zamykania popupa\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Obiekt wyświetlający wybrane informacje o jakości powietrza z API Airly.\n\n                    \n                \n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routableComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  WeatherComponentComponent, StatsComponentComponent\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/models/statistic-type.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StatisticTypeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StatisticType[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        {\n            id: 1,\n            name: 'Godzinowy'\n        },\n        {\n            id: 2,\n            name: 'Dzienny'\n        },\n        {\n            id: 3,\n            name: 'Miesięczny'\n        }\n    ]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
