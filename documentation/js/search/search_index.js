var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AirData.html",[0,0.19,1,1.825]],["body/classes/AirData.html",[0,0.244,1,3.367,2,0.906,3,0.337,4,0.287,5,0.287,6,3.57,7,2.342,8,0.949,9,4.041,10,4.041,11,4.041,12,1.68,13,2.34,14,3.744,15,2.784,16,0.389,17,0.703,18,1.137,19,5.983,20,0.703,21,4.041,22,0.557,23,4.041,24,1.349,25,1.239,26,0.622,27,0.032,28,0.444,29,0.423,30,0.622,31,1.74,32,5.539,33,5.539,34,5.539,35,3.57,36,1.037,37,1.354,38,3.211,39,5.539,40,5.539,41,4.624,42,4.041,43,0.337,44,0.829,45,0.02,46,0.025,47,0.02]],["title/components/AirQualityComponentComponent.html",[48,1.074,49,1.268]],["body/components/AirQualityComponentComponent.html",[0,0.164,3,0.227,4,0.193,5,0.193,12,1.124,15,2.371,16,0.262,17,0.539,20,0.377,22,0.543,26,0.419,27,0.032,28,0.498,29,0.324,30,0.419,36,0.728,38,2.253,41,3.244,43,0.227,45,0.013,46,0.019,47,0.026,48,1.855,49,1.993,50,2.253,51,1.754,52,1.754,53,1.754,54,1.754,55,4.367,56,2.335,57,3.372,58,1.577,59,2.821,60,3.291,61,1.754,62,3.692,63,3.01,64,3.01,65,2.505,66,3.291,67,2.505,68,2.821,69,1.706,70,3.59,71,4.946,72,2.721,73,3.188,74,3.887,75,2.821,76,2.721,77,1.706,78,1.754,79,2.721,80,0.728,81,0.928,82,1.754,83,1.754,84,2.721,85,1.304,86,1.194,87,2.721,88,2.721,89,2.721,90,2.721,91,3.887,92,3.887,93,3.01,94,4.946,95,3.887,96,2.821,97,2.505,98,3.154,99,3.887,100,3.887,101,1.034,102,3.887,103,3.887,104,3.887,105,3.244,106,1.44,107,3.887,108,3.887,109,4.129,110,3.887,111,3.887,112,3.244,113,3.887,114,3.887,115,3.244,116,3.887,117,3.887,118,3.887,119,3.887,120,1.863,121,3.244,122,3.887,123,3.887,124,3.887,125,3.887,126,3.887,127,3.887,128,3.887,129,3.887,130,2.043,131,3.887,132,3.887,133,2.821,134,3.887,135,3.887,136,3.887,137,3.887,138,3.887,139,3.887,140,3.887,141,3.887,142,3.887,143,3.887,144,3.887,145,3.887,146,3.887,147,3.887,148,3.887,149,3.887,150,2.043,151,3.887,152,1.754,153,1.975,154,2.721,155,1.43,156,2.505,157,2.253,158,1.754,159,3.188,160,1.754,161,3.188,162,1.194,163,1.754,164,1.194,165,1.194,166,1.096,167,1.096,168,1.304,169,1.008,170,1.304,171,1.754,172,1.754]],["title/classes/AirQualityData.html",[0,0.19,173,2.03]],["body/classes/AirQualityData.html",[0,0.272,2,1.013,3,0.377,4,0.321,5,0.321,7,2.619,20,0.753,22,0.496,26,0.696,27,0.032,28,0.496,29,0.377,30,0.696,43,0.377,45,0.022,46,0.027,47,0.022,56,2.011,80,0.846,82,3.5,83,3.5,93,2.854,150,3.174,173,3.5,174,3.28,175,2.156,176,5.821,177,1.305,178,5.821,179,4.519,180,2.913,181,4.225]],["title/injectables/AirQualityService.html",[73,2.03,182,1.268]],["body/injectables/AirQualityService.html",[0,0.239,3,0.33,4,0.281,5,0.281,16,0.382,17,0.694,20,0.549,22,0.603,26,0.61,27,0.033,28,0.435,29,0.418,30,0.61,37,1.342,43,0.33,45,0.02,46,0.025,47,0.02,56,1.468,64,2.082,69,2.197,73,3.227,77,1.738,80,1.114,81,1.351,82,3.717,83,3.717,85,1.899,86,1.738,165,1.738,173,2.554,177,0.888,182,2.017,183,2.296,184,3.307,185,4.814,186,2.082,187,2.764,188,3.962,189,2.632,190,3.962,191,3.538,192,1.596,193,1.468,194,5.007,195,5.007,196,3.962,197,1.899,198,3.227,199,2.876,200,2.876,201,1.596,202,2.554,203,2.296,204,2.554,205,3.962,206,2.876,207,3.962,208,3.962,209,2.876,210,2.876,211,1.351,212,3.962,213,3.962,214,3.962]],["title/components/AppComponent.html",[48,1.074,162,1.382]],["body/components/AppComponent.html",[0,0.232,3,0.32,4,0.273,5,0.273,15,2.733,16,0.37,17,0.681,22,0.422,27,0.032,28,0.539,29,0.32,43,0.32,45,0.019,46,0.024,47,0.019,48,1.945,49,1.547,50,2.846,51,2.476,52,2.476,53,2.476,54,2.476,56,1.819,61,2.476,62,3.998,63,3.319,64,2.019,65,3.165,67,3.165,80,0.719,81,1.31,109,4.76,155,2.019,156,3.165,157,2.846,158,2.476,159,3.676,160,2.476,161,3.676,162,2.502,163,2.476,164,1.686,165,1.686,166,1.547,167,1.547,168,1.841,169,1.423,170,1.841,171,2.476,172,2.476,177,0.861,192,1.547,193,1.423,203,2.846,215,3.206,216,4.909,217,4.909,218,5.411,219,4.909,220,4.517,221,4.098,222,3.841,223,3.841,224,4.098,225,4.098,226,2.353,227,4.909]],["title/modules/AppModule.html",[201,1.268,228,2.03]],["body/modules/AppModule.html",[0,0.209,3,0.289,4,0.246,5,0.246,27,0.033,43,0.289,45,0.017,46,0.023,47,0.017,49,2.36,56,1.699,57,2.231,63,1.819,80,1.185,81,1.18,155,1.819,162,2.762,164,2.571,166,2.36,167,2.36,169,2.17,187,1.659,197,1.659,201,1.394,228,4.171,229,2.006,230,2.231,231,4.295,232,3.735,233,3.829,234,2.512,235,2.889,236,2.889,237,2.889,238,2.889,239,3.396,240,3.329,241,2.889,242,2.512,243,3.46,244,3.829,245,4.587,246,3.829,247,2.512,248,3.829,249,3.46,250,3.46,251,4.587,252,3.46,253,2.889,254,5.145,255,2.889,256,4.758,257,2.889,258,2.889,259,2.231,260,2.889,261,4.587,262,3.46,263,4.587,264,4.587,265,2.889,266,2.889]],["title/modules/AppRoutingModule.html",[201,1.268,239,1.825]],["body/modules/AppRoutingModule.html",[0,0.239,3,0.33,4,0.281,5,0.281,27,0.033,43,0.418,45,0.02,46,0.025,47,0.02,48,2.028,49,2.017,56,2.137,57,2.554,64,2.082,80,1.155,81,1.351,164,2.197,165,1.738,166,2.017,167,2.211,169,2.034,180,2.554,229,2.296,234,2.876,239,2.902,244,3.307,248,4.179,255,3.307,256,4.965,257,3.307,258,3.307,259,2.554,260,3.307,266,3.307,267,2.876,268,2.876,269,3.538,270,5.007,271,2.902,272,6.075,273,5.007,274,2.554,275,3.962,276,3.962,277,3.962,278,3.962,279,2.876]],["title/classes/CalculatedProps.html",[0,0.19,280,2.03]],["body/classes/CalculatedProps.html",[0,0.168,2,0.625,3,0.233,4,0.198,5,0.198,8,0.522,16,0.269,17,0.548,18,1.273,20,0.386,22,0.602,24,1.052,25,0.967,26,0.429,27,0.033,28,0.306,29,0.458,30,0.429,31,1.867,43,0.233,44,1.126,45,0.014,46,0.02,47,0.014,97,3.224,101,1.56,175,2.25,177,1.333,226,1.337,280,3.224,281,2.328,282,0.682,283,2.788,284,2.788,285,2.328,286,3.836,287,3.836,288,1.123,289,4.596,290,2.664,291,1.797,292,2.328,293,2.328,294,2.328,295,4.365,296,2.788,297,2.788,298,2.788,299,2.871,300,2.788,301,2.788,302,2.788,303,2.788,304,2.788,305,2.788,306,2.788,307,2.788,308,4.596,309,4.709,310,5.641,311,4.408,312,5.641,313,3.955,314,4.579,315,5.281,316,5.281,317,3.955,318,2.202,319,5.485,320,2.788,321,5.001,322,5.001,323,3.341,324,4.811,325,4.811,326,2.788,327,5.001,328,3.955,329,2.788,330,2.788,331,3.955,332,1.797,333,3.955,334,2.788,335,3.955,336,2.788,337,3.955,338,2.788,339,3.955,340,2.788,341,3.955,342,2.788]],["title/classes/ChartService.html",[0,0.19,343,2.286]],["body/classes/ChartService.html",[0,0.154,2,0.572,3,0.213,4,0.181,5,0.181,8,0.818,12,1.685,13,1.934,15,1.778,16,0.246,18,1.092,20,0.606,22,0.48,24,0.987,25,1.301,26,0.571,27,0.033,28,0.407,29,0.498,30,0.571,31,1.767,35,3.094,36,0.996,37,1.301,43,0.213,44,0.985,45,0.013,46,0.018,47,0.013,69,1.627,77,1.627,80,0.694,86,1.627,101,1.416,150,3.064,157,2.15,177,1.193,211,1.637,226,2.862,271,2.782,282,0.907,318,2.085,343,3.484,344,3.094,345,4.006,346,2.128,347,5.322,348,3.709,349,3.709,350,3.096,351,3.709,352,3.709,353,3.709,354,3.709,355,3.709,356,2.55,357,3.709,358,2.55,359,2.782,360,4.8,361,4.8,362,1.949,363,2.301,364,2.782,365,4.8,366,2.956,367,2.782,368,4.006,369,1.934,370,2.335,371,3.484,372,3.085,373,3.094,374,3.43,375,3.094,376,4.8,377,3.484,378,3.094,379,4.8,380,3.484,381,3.43,382,3.709,383,2.55,384,3.096,385,1.34,386,2.55,387,1.643,388,1.478,389,2.55,390,2.55,391,3.709,392,3.709,393,3.649,394,5.322,395,3.709,396,3.709,397,3.709,398,2.55,399,2.55,400,3.709,401,3.709,402,4.371]],["title/classes/DataPoints.html",[0,0.19,388,1.825]],["body/classes/DataPoints.html",[0,0.267,2,0.736,3,0.274,4,0.233,5,0.233,8,0.829,12,1.28,16,0.316,17,0.614,18,1.23,20,0.455,22,0.589,24,1.333,25,1.311,26,0.505,27,0.033,28,0.36,29,0.447,30,0.505,31,1.03,36,0.614,43,0.369,44,1.1,45,0.016,46,0.022,47,0.016,80,0.614,101,0.873,106,2.275,120,1.573,175,2.221,177,1.202,211,1.119,271,1.902,282,1.225,290,3.344,318,1.64,363,1.573,364,1.902,366,2.566,369,1.322,370,1.44,377,3.213,378,2.853,381,3.229,385,1.725,387,2.115,388,3.344,403,4.064,404,2.382,405,2.327,406,3.695,407,3.695,408,3.695,409,4.188,410,4.674,411,4.816,412,3.281,413,3.281,414,5.072,415,4.816,416,4.181,417,4.181,418,4.181,419,5.009,420,2.739,421,3.213,422,2.382,423,2.382,424,2.115,425,2.739,426,2.739,427,3.695,428,2.739,429,2.382,430,2.739,431,2.739,432,2.739,433,2.739,434,2.739,435,2.739,436,1.902]],["title/classes/DataPointsList.html",[0,0.19,366,1.825]],["body/classes/DataPointsList.html",[0,0.275,2,0.768,3,0.286,4,0.243,5,0.243,8,0.853,12,1.578,16,0.33,17,0.631,18,0.935,20,0.475,22,0.5,24,1.362,25,1.389,26,0.528,27,0.033,28,0.376,29,0.38,30,0.528,31,1.431,36,0.853,43,0.38,44,1.12,45,0.017,46,0.023,47,0.017,80,0.641,101,1.212,106,2.208,120,2.184,175,1.688,177,0.768,192,1.38,193,1.269,211,1.554,271,1.986,282,1.251,290,2.641,318,2.021,363,2.184,364,2.641,366,3.163,369,1.835,370,1.503,377,3.961,378,3.517,381,3.842,385,1.8,387,2.208,388,3.455,403,3.716,404,2.486,405,1.8,406,2.859,407,2.859,408,2.859,409,3.307,410,3.803,411,3.803,414,4.273,415,3.803,416,2.859,417,2.859,418,2.859,420,2.859,421,3.961,422,3.307,423,3.307,424,2.937,425,3.803,426,3.803,427,4.273,428,3.803,429,3.307,430,3.803,431,2.859,432,2.859,433,2.859,434,2.859,435,2.859,436,1.986,437,4.556]],["title/classes/ForecastData.html",[0,0.19,438,1.825]],["body/classes/ForecastData.html",[0,0.27,2,0.749,3,0.279,4,0.237,5,0.237,7,1.936,8,0.839,12,1.562,16,0.322,17,0.621,18,1.216,20,0.701,22,0.492,25,1.236,26,0.515,27,0.033,28,0.555,29,0.374,30,0.515,36,0.946,37,1.095,43,0.374,44,1.156,45,0.016,46,0.022,47,0.016,96,3.252,98,2.93,101,1.499,106,2.087,120,2.7,133,2.425,170,2.147,175,2.001,177,1.211,192,1.346,193,1.238,282,1.095,323,2.597,362,1.756,364,2.93,438,3.131,439,3.258,440,3.74,441,3.258,442,3.631,443,3.631,444,3.74,445,3.74,446,3.341,447,3.341,448,4.22,449,4.22,450,2.93,451,2.93,452,3.669,453,3.669,454,3.434,455,3.669,456,4.22,457,3.258,458,3.921,459,3.341,460,2.355,461,2.425,462,2.425,463,2.425,464,2.788,465,3.74,466,2.788,467,2.788,468,3.74,469,2.788,470,3.252,471,2.425,472,2.153,473,2.153,474,2.425,475,2.788,476,1.756]],["title/classes/MeteoStatsData.html",[0,0.19,477,2.03]],["body/classes/MeteoStatsData.html",[0,0.12,2,0.446,3,0.166,4,0.141,5,0.141,8,0.576,16,0.192,17,0.427,18,1.308,20,0.427,22,0.63,24,0.819,25,0.752,26,0.306,27,0.032,28,0.218,29,0.478,30,0.306,31,2.001,35,3.124,36,1.199,37,1.555,43,0.166,44,1.161,45,0.01,46,0.015,47,0.01,80,0.372,97,2.426,98,2.182,130,2.227,150,2.656,168,2.779,175,2.388,180,1.282,282,1.036,288,1.24,290,2.809,291,3.124,295,3.974,314,3.825,318,2.347,362,2.409,369,1.24,405,1.617,454,2.809,472,1.984,473,1.984,476,1.979,477,1.984,478,4.84,479,1.66,480,1.784,481,2.569,482,3.077,483,2.569,484,3.077,485,3.077,486,5.574,487,4.846,488,5.475,489,4.583,490,4.583,491,4.583,492,4.846,493,4.846,494,4.583,495,4.846,496,4.846,497,4.045,498,4.846,499,4.846,500,4.846,501,4.474,502,4.846,503,4.846,504,4.846,505,4.846,506,1.989,507,1.989,508,1.784,509,3.077,510,5.359,511,3.764,512,3.764,513,5.994,514,1.989,515,1.989,516,1.989,517,1.989,518,1.989,519,1.989,520,1.989,521,1.989,522,1.989,523,1.989,524,1.989,525,1.989]],["title/classes/MeteoStatsModel.html",[0,0.19,526,2.03]],["body/classes/MeteoStatsModel.html",[0,0.271,2,1.009,3,0.375,4,0.319,5,0.319,8,0.842,16,0.433,17,0.751,18,1.192,22,0.494,27,0.032,29,0.375,36,1.014,37,1.324,43,0.375,45,0.022,46,0.027,47,0.022,80,0.842,130,2.846,150,3.169,168,2.156,221,3.755,282,1.324,405,2.846,477,3.976,481,4.52,508,3.139,526,3.49,527,4.52,528,3.755,529,4.52,530,4.499]],["title/injectables/MeteoStatsService.html",[182,1.268,531,2.286]],["body/injectables/MeteoStatsService.html",[0,0.126,3,0.174,4,0.148,5,0.148,8,0.726,12,1.604,13,2.136,16,0.201,17,0.442,20,0.289,22,0.565,24,0.849,25,0.78,26,0.597,27,0.033,28,0.426,29,0.463,30,0.597,31,1.897,36,1.038,37,1.445,43,0.174,44,1.013,45,0.01,46,0.016,47,0.01,69,1.4,77,1.4,78,1.344,80,0.813,81,0.711,85,0.999,86,0.915,97,2.8,101,1.156,106,1.182,112,3.626,130,2.787,177,1.107,182,1.286,183,1.208,186,1.096,187,2.082,189,2.038,191,2.499,192,1.286,193,1.182,197,0.999,198,1.344,199,1.513,202,1.344,203,1.208,204,1.344,226,2.896,282,0.78,288,1.286,299,2.316,318,2.12,323,1.85,324,3.626,325,3.626,344,3.417,359,2.518,368,4.122,369,1.286,370,2.255,371,3.585,372,2.979,373,3.183,374,3.313,375,3.183,450,2.518,451,1.85,463,2.316,476,2.283,526,1.344,529,1.74,531,3.153,532,4.425,533,1.74,534,4.344,535,3.191,536,4.939,537,3.191,538,3.626,539,4.344,540,4.887,541,3.877,542,3.877,543,2.814,544,3.877,545,3.191,546,3.191,547,3.191,548,3.191,549,2.863,550,4.682,551,4.682,552,2.085,553,3.191,554,3.191,555,3.585,556,2.664,557,3.191,558,3.191,559,2.8,560,3.191,561,4.344,562,3.191,563,2.085,564,3.191,565,3.191,566,2.057,567,3.191,568,2.085,569,3.191,570,3.585,571,2.664,572,2.316,573,3.191,574,3.191,575,2.316,576,2.664,577,3.191,578,3.191,579,3.191,580,3.191,581,3.191,582,3.191,583,3.191,584,3.191,585,3.191,586,3.191,587,2.085,588,3.191,589,3.191,590,2.085,591,3.191,592,3.191,593,3.191,594,3.191,595,3.191,596,2.664,597,3.191,598,3.191,599,2.085,600,2.085,601,2.085,602,2.085,603,4.344,604,2.085,605,1.74,606,2.085,607,1.74,608,2.085,609,3.877,610,2.085,611,3.877,612,2.085,613,2.085]],["title/components/QualityComponentComponent.html",[48,1.074,166,1.268]],["body/components/QualityComponentComponent.html",[0,0.115,1,1.102,3,0.159,4,0.211,5,0.135,6,1.225,13,0.766,14,1.225,15,0.911,16,0.183,17,0.412,18,0.751,20,0.263,22,0.454,24,0.79,25,0.726,26,0.293,27,0.033,28,0.402,29,0.248,30,0.293,31,1.299,36,0.685,37,0.894,43,0.159,44,0.61,45,0.009,46,0.015,47,0.02,48,1.622,49,0.766,50,1.722,51,1.225,52,1.225,53,1.225,54,1.225,56,1.958,58,1.102,59,2.157,60,2.655,61,1.225,62,3.315,63,2.703,64,0.999,65,1.915,66,2.655,67,1.915,68,2.157,69,1.304,70,3.002,75,3.002,77,0.834,78,1.225,80,0.931,81,0.648,85,0.911,86,0.834,101,0.973,106,1.532,152,1.915,153,3.837,155,0.999,156,1.915,157,2.397,158,1.225,159,3.775,160,1.225,161,2.666,162,0.834,163,1.225,164,0.834,165,2.373,166,1.916,167,0.766,168,0.911,169,0.704,170,0.911,171,1.225,172,1.225,181,3.002,186,0.999,187,1.982,189,1.922,197,0.911,201,0.766,206,2.655,211,1.622,240,1.38,309,2.48,311,2.48,318,1.532,332,2.892,367,1.102,369,1.197,380,2.157,424,1.225,480,1.722,614,3.257,615,2.892,616,2.971,617,1.901,618,2.971,619,2.971,620,3.452,621,1.901,622,2.971,623,2.971,624,1.901,625,1.587,626,2.971,627,2.48,628,1.38,629,1.901,630,2.48,631,2.48,632,4.293,633,2.48,634,2.157,635,1.587,636,2.48,637,2.655,638,1.587,639,3.002,640,1.587,641,1.587,642,2.655,643,1.587,644,1.587,645,1.587,646,2.157,647,1.587,648,1.587,649,1.587,650,1.587,651,2.655,652,2.971,653,2.971,654,1.901,655,1.901,656,2.971,657,2.971,658,2.157,659,2.971,660,2.48,661,2.971,662,1.901,663,1.901,664,2.971,665,1.901,666,1.901,667,1.901,668,1.587,669,1.901,670,1.901,671,1.901,672,1.901,673,1.901,674,1.901,675,1.901,676,1.901,677,1.587,678,1.901,679,1.901,680,1.901,681,1.901,682,1.901,683,2.971,684,1.587,685,1.901,686,1.901,687,1.901,688,1.901,689,1.901,690,1.901,691,1.901,692,1.901,693,1.901,694,1.901,695,1.901,696,1.587,697,1.901,698,1.901,699,1.587,700,1.587,701,1.901,702,1.901,703,1.901,704,1.901,705,2.971,706,2.971,707,2.971,708,2.971,709,2.971,710,5.143,711,2.971,712,2.971,713,2.971,714,2.971,715,2.971,716,2.48,717,1.901,718,3.452,719,4.135,720,3.971,721,1.901,722,4.149,723,2.48,724,2.971,725,3.746,726,2.971,727,1.901,728,4.513,729,2.971,730,4.135,731,1.901,732,4.413,733,3.746,734,1.587,735,1.587,736,1.901,737,1.901,738,1.587,739,2.971,740,1.901,741,1.901,742,2.971,743,2.48,744,1.901,745,2.48,746,3.452,747,2.48,748,3.452,749,1.901,750,1.587,751,1.901,752,3.658,753,2.971,754,2.971,755,1.901,756,1.901,757,1.901,758,2.971,759,2.971,760,1.901,761,2.48,762,1.901,763,1.901,764,2.48,765,2.971,766,2.48,767,1.587,768,1.901,769,1.901,770,1.901,771,1.901,772,2.48,773,2.971,774,1.901,775,1.901]],["title/injectables/QualityServiceService.html",[182,1.268,615,2.03]],["body/injectables/QualityServiceService.html",[0,0.189,1,1.819,3,0.262,4,0.223,5,0.223,6,3.554,8,0.804,12,1.522,13,2.121,14,3.394,15,2.523,16,0.302,17,0.595,18,1.005,20,0.435,22,0.578,24,1.143,25,1.05,26,0.661,27,0.033,28,0.472,29,0.439,30,0.661,36,1.066,37,1.392,43,0.262,44,1.005,45,0.016,46,0.021,47,0.016,56,1.163,69,1.885,77,1.377,80,1.111,81,1.07,85,1.504,86,1.885,101,1.143,120,1.504,165,1.377,177,1.307,182,1.73,183,1.819,185,3.585,186,1.65,187,2.523,189,2.573,191,3.156,192,1.264,193,1.163,197,1.504,198,2.023,200,3.118,201,1.264,202,2.023,203,1.819,204,2.023,209,2.278,210,2.278,211,1.07,359,2.49,369,1.73,543,3.554,570,3.118,571,3.585,615,3.394,628,2.278,630,2.62,696,3.585,716,3.585,776,2.278,777,3.585,778,4.295,779,4.896,780,4.896,781,4.295,782,5.265,783,3.139,784,3.585,785,4.295,786,4.295,787,3.585,788,5.265,789,5.265,790,4.295,791,5.265,792,4.295,793,3.585,794,3.585,795,2.62,796,2.62,797,2.62,798,2.62,799,3.139,800,3.139,801,2.62,802,2.62,803,2.278]],["title/classes/Station.html",[0,0.19,549,1.825]],["body/classes/Station.html",[0,0.246,2,0.915,3,0.34,4,0.29,5,0.29,8,0.955,16,0.393,17,0.707,18,1.231,20,0.566,22,0.611,24,1.357,25,1.247,26,0.629,27,0.032,28,0.682,29,0.464,30,0.629,36,0.764,38,2.366,43,0.34,44,1.047,45,0.02,46,0.025,47,0.02,93,3.328,115,3.407,130,2.145,174,2.963,175,2.16,177,1.307,226,1.956,282,0.998,288,1.644,405,2.145,436,2.366,450,2.366,461,4.039,480,2.366,483,3.407,508,2.957,549,3.379,804,3.407,805,2.963,806,3.407,807,3.407,808,3.758,809,4.081,810,4.645,811,5.101]],["title/classes/StationList.html",[0,0.19,812,2.286]],["body/classes/StationList.html",[0,0.149,2,0.553,3,0.206,4,0.175,5,0.175,8,0.462,16,0.238,17,0.502,20,0.594,22,0.398,24,0.963,27,0.033,29,0.206,43,0.206,45,0.012,46,0.018,47,0.012,80,0.462,93,2.483,120,1.735,211,0.841,282,0.885,288,1.458,318,1.341,344,2.764,370,1.082,381,2.764,405,1.902,538,3.021,549,2.098,556,2.058,575,2.627,576,3.021,808,3.045,812,3.945,813,3.579,814,2.058,815,3.021,816,3.021,817,3.619,818,4.724,819,3.021,820,3.619,821,3.943,822,3.619,823,3.619,824,3.619,825,2.466,826,2.466,827,6.642,828,2.466,829,2.466,830,2.466,831,2.466,832,3.619,833,2.466,834,2.466,835,2.466,836,2.466,837,2.466,838,2.466,839,2.466,840,2.466,841,2.466,842,2.466,843,2.466,844,2.466,845,2.466,846,2.466,847,3.619,848,2.466,849,2.466,850,2.466,851,2.466,852,2.466,853,2.466,854,2.466,855,2.466,856,2.466,857,2.466,858,2.466,859,2.466,860,2.466,861,2.466,862,2.466,863,2.466,864,2.466,865,2.466,866,2.466,867,2.466,868,2.466,869,2.466,870,2.466,871,2.466,872,2.466,873,2.466,874,2.466,875,2.466,876,2.466,877,2.466,878,2.466,879,2.466,880,2.466,881,2.466,882,2.466,883,2.466,884,2.466,885,2.466,886,2.466,887,2.466,888,2.466,889,2.466,890,2.466,891,2.466,892,2.466,893,2.466,894,2.466,895,2.466,896,2.466,897,3.619,898,2.466,899,2.466,900,2.466,901,2.466,902,2.466,903,2.466,904,2.466,905,2.466,906,2.466,907,2.466,908,2.466,909,3.619,910,2.466,911,2.466,912,2.466,913,2.466,914,2.466,915,2.466,916,2.466,917,3.619,918,2.466,919,2.466,920,2.466,921,2.466,922,2.466,923,2.466,924,2.466,925,2.466,926,2.466,927,2.466,928,2.466,929,2.466,930,2.466,931,2.466,932,2.466,933,2.466,934,2.466,935,2.466,936,2.466,937,2.466,938,2.466,939,2.466,940,2.466,941,2.466,942,2.466,943,2.466,944,2.466,945,2.466,946,2.466,947,2.466,948,2.466,949,2.466,950,2.466,951,2.466,952,2.466,953,2.466,954,2.466,955,2.466,956,2.466,957,2.466,958,2.466,959,2.466,960,2.466,961,2.466,962,2.466,963,2.466,964,2.466,965,2.466,966,2.466,967,2.466,968,2.466,969,2.466,970,2.466,971,2.466,972,2.466,973,2.466,974,2.466,975,2.466,976,2.466,977,2.466,978,2.466,979,2.466,980,2.466,981,2.466,982,2.466,983,2.466,984,2.466,985,2.466,986,2.466,987,2.466,988,2.466,989,2.466]],["title/classes/StatisticType.html",[0,0.19,990,2.03]],["body/classes/StatisticType.html",[0,0.218,2,0.811,3,0.302,4,0.257,5,0.257,8,0.884,12,1.045,16,0.348,17,0.654,18,1.186,20,0.501,22,0.577,24,1.256,25,1.154,26,0.557,27,0.032,28,0.686,29,0.438,30,0.557,31,1.651,35,3.043,36,0.677,37,0.884,43,0.394,44,0.969,45,0.018,46,0.023,47,0.018,93,3.22,101,0.962,174,2.624,175,2.064,177,1.25,226,2.519,271,2.095,282,0.884,285,3.018,288,1.456,363,1.733,370,1.586,371,2.624,372,2.095,373,2.33,374,2.33,375,2.33,436,2.095,451,2.095,476,2.929,508,2.736,540,5.113,555,3.427,559,2.33,566,2.33,810,4.388,815,3.018,816,3.018,990,3.727,991,4.045,992,2.624,993,3.615,994,3.615,995,3.615,996,3.615,997,3.615,998,3.615,999,3.94,1000,3.615,1001,3.615,1002,3.615,1003,3.615,1004,3.615,1005,3.615,1006,5.256,1007,5.256,1008,4.388,1009,4.721,1010,2.624,1011,3.018,1012,3.018,1013,3.018]],["title/classes/Statistics.html",[0,0.19,274,2.03]],["body/classes/Statistics.html",[0,0.215,2,0.801,3,0.298,4,0.253,5,0.253,8,0.877,13,2.489,16,0.344,17,0.649,18,1.268,20,0.649,22,0.609,24,1.246,25,1.145,26,0.55,27,0.032,28,0.392,29,0.463,30,0.55,31,1.856,43,0.298,44,1.072,45,0.018,46,0.023,47,0.018,80,0.668,226,2.244,274,3.712,280,4.098,282,1.145,288,1.886,291,3.018,292,3.908,294,3.908,295,4.18,318,2.328,367,3.582,497,4.933,501,4.807,508,2.714,806,3.908,1014,4.807,1015,2.98,1016,5.909,1017,3.57,1018,3.57,1019,5.225,1020,5.225,1021,5.225,1022,5.225,1023,3.57,1024,3.57,1025,3.57]],["title/classes/TempChart.html",[0,0.19,385,1.655]],["body/classes/TempChart.html",[0,0.221,2,0.821,3,0.305,4,0.26,5,0.26,8,0.891,12,1.619,16,0.353,17,0.66,18,1.191,20,0.507,22,0.581,24,1.266,25,1.164,26,0.564,27,0.032,28,0.402,29,0.441,30,0.564,31,1.869,36,1.048,37,0.895,43,0.305,44,0.977,45,0.018,46,0.024,47,0.018,105,4.414,106,2.074,175,2.074,177,1.256,193,2.15,288,1.475,299,3.839,362,2.78,363,2.535,369,2.256,373,3.409,375,3.409,378,3.409,385,2.943,423,2.657,429,3.839,436,2.122,454,3.065,476,2.78,480,2.122,555,2.657,999,4.967,1008,4.414,1026,4.674,1027,3.056,1028,3.661,1029,3.661,1030,5.95,1031,3.661,1032,3.661,1033,5.288,1034,5.288,1035,5.288,1036,5.288,1037,5.288,1038,4.759]],["title/components/WeatherComponentComponent.html",[48,1.074,169,1.166]],["body/components/WeatherComponentComponent.html",[0,0.071,3,0.098,4,0.083,5,0.083,8,0.489,12,1.585,13,1.244,16,0.113,17,0.277,18,1.101,20,0.162,22,0.533,26,0.402,27,0.033,28,0.504,29,0.37,30,0.402,31,0.969,36,1.068,38,2.461,43,0.098,44,0.633,45,0.006,46,0.01,47,0.006,48,1.287,49,0.471,50,1.157,51,0.754,52,0.754,53,0.754,54,0.754,56,0.74,58,0.678,59,1.449,60,1.896,61,0.754,62,2.737,63,2.232,64,0.615,65,1.287,66,1.896,67,1.287,68,1.449,69,0.876,70,2.241,75,2.241,77,1.521,78,2.234,80,0.707,81,0.399,85,0.561,86,0.513,98,1.789,101,1.346,106,1.573,130,1.821,150,1.623,152,0.754,153,1.896,155,0.615,156,1.287,157,1.157,158,0.754,159,2.856,160,0.754,161,1.99,162,0.513,163,0.754,164,0.513,165,0.513,166,0.471,167,0.471,168,0.561,169,1.144,170,2.035,171,0.754,172,0.754,177,0.952,181,0.849,186,0.615,187,1.48,189,1.373,192,1.244,193,1.144,197,0.561,201,0.471,211,0.399,220,0.977,224,1.667,225,1.667,282,0.286,286,1.667,287,1.667,288,1.711,290,0.678,291,1.683,293,0.977,318,1.144,323,1.157,332,2.234,350,1.667,359,2.336,362,1.049,363,1.48,367,0.678,369,1.955,370,0.876,380,2.241,384,3.15,387,2.234,393,0.977,409,0.849,421,1.449,422,1.449,441,3.625,442,2.433,443,2.598,450,1.789,451,1.157,453,1.449,454,2.742,455,1.449,457,1.99,458,2.241,460,0.615,462,3.082,470,1.449,471,1.449,472,1.287,473,1.287,474,1.449,559,2.737,566,1.99,572,2.241,575,1.449,596,1.667,620,1.667,627,0.977,631,0.977,634,0.849,658,1.449,660,3.364,677,3.15,684,1.667,699,0.977,700,0.977,718,1.667,720,1.667,722,1.667,723,0.977,725,2.893,728,1.667,732,2.577,734,1.667,735,0.977,738,2.577,743,3.364,745,1.667,746,1.667,747,3.699,748,3.545,750,2.18,761,2.18,764,1.667,766,2.577,767,3.364,772,0.977,777,1.667,787,1.667,793,1.667,805,1.449,807,1.667,808,1.99,819,3.15,821,0.977,1039,3.603,1040,1.997,1041,1.997,1042,3.087,1043,1.997,1044,1.997,1045,4.03,1046,1.667,1047,1.997,1048,1.997,1049,3.465,1050,3.465,1051,2.612,1052,2.612,1053,2.612,1054,2.612,1055,3.465,1056,2.612,1057,1.997,1058,3.087,1059,1.99,1060,1.997,1061,1.17,1062,1.17,1063,1.17,1064,1.17,1065,1.17,1066,3.465,1067,1.997,1068,1.17,1069,1.997,1070,3.832,1071,3.774,1072,4.246,1073,3.087,1074,3.774,1075,3.087,1076,3.774,1077,3.087,1078,2.577,1079,1.997,1080,1.997,1081,1.997,1082,1.997,1083,1.997,1084,1.997,1085,3.087,1086,2.577,1087,2.577,1088,1.997,1089,1.997,1090,1.17,1091,1.997,1092,2.577,1093,3.087,1094,1.997,1095,1.667,1096,1.997,1097,1.17,1098,1.17,1099,1.997,1100,3.087,1101,1.997,1102,1.997,1103,1.997,1104,3.087,1105,2.612,1106,2.612,1107,1.997,1108,2.612,1109,1.17,1110,1.997,1111,1.997,1112,1.997,1113,1.17,1114,3.087,1115,1.17,1116,1.997,1117,3.087,1118,1.17,1119,1.17,1120,1.997,1121,0.977,1122,1.17,1123,1.17,1124,1.17,1125,1.17,1126,1.17,1127,1.997,1128,1.17,1129,1.17,1130,1.17,1131,1.17,1132,1.17,1133,1.17,1134,1.997,1135,1.17,1136,1.17,1137,1.17,1138,1.17,1139,1.17,1140,1.17,1141,0.977,1142,1.17,1143,1.17,1144,1.997,1145,1.17,1146,1.997,1147,0.977,1148,1.17,1149,3.087,1150,1.17,1151,3.465,1152,1.17,1153,2.612,1154,1.17,1155,1.997,1156,1.17,1157,1.17,1158,1.17,1159,1.17,1160,1.17,1161,1.997,1162,1.997,1163,1.17,1164,1.17,1165,1.17,1166,1.17,1167,1.17,1168,1.17,1169,1.17,1170,1.17,1171,1.17,1172,1.17,1173,1.17,1174,1.17,1175,1.17,1176,1.17,1177,1.17,1178,3.774,1179,1.17,1180,1.17,1181,1.17,1182,0.977,1183,1.17,1184,1.997,1185,1.997,1186,1.997,1187,1.997,1188,3.087,1189,1.997,1190,1.997,1191,4.854,1192,1.997,1193,1.997,1194,1.997,1195,1.997,1196,1.997,1197,1.997,1198,1.997,1199,1.997,1200,1.997,1201,1.17,1202,4.246,1203,1.17,1204,1.17,1205,1.17,1206,1.17,1207,1.17,1208,1.17,1209,1.17,1210,1.17,1211,1.997,1212,2.612,1213,1.997,1214,3.087,1215,1.17,1216,1.17,1217,1.17,1218,1.17,1219,1.17,1220,1.17,1221,1.17,1222,1.17,1223,1.997,1224,1.997,1225,1.17,1226,1.17,1227,1.17,1228,1.997,1229,1.997,1230,1.17,1231,1.997,1232,5.426,1233,3.087,1234,1.997,1235,3.465,1236,1.997,1237,3.087,1238,3.087,1239,3.087,1240,1.17,1241,1.997,1242,1.997,1243,1.997,1244,1.17,1245,1.17,1246,1.17,1247,1.17,1248,1.17,1249,3.087,1250,1.17,1251,1.17,1252,1.17,1253,1.17,1254,1.667,1255,1.17,1256,3.087,1257,3.465,1258,4.246,1259,3.087,1260,1.17,1261,1.17,1262,1.17,1263,1.17,1264,1.17,1265,1.17,1266,1.17,1267,1.17,1268,1.17,1269,1.17,1270,1.17,1271,1.17,1272,1.17,1273,1.17]],["title/classes/WeatherData.html",[0,0.19,460,1.655]],["body/classes/WeatherData.html",[0,0.253,2,0.68,3,0.253,4,0.215,5,0.215,7,1.757,8,0.785,12,1.575,16,0.292,17,0.581,18,1.274,20,0.666,22,0.598,25,1.175,26,0.467,27,0.032,28,0.619,29,0.454,30,0.467,36,1.02,37,1.025,43,0.35,44,1.117,45,0.015,46,0.021,47,0.015,96,2.2,98,1.757,101,1.566,106,1.553,120,2.01,133,3.489,170,2.7,175,2.241,177,1.356,282,1.025,323,3.347,362,2.527,364,1.757,438,2.43,439,3.631,440,3.5,441,3.344,442,2.702,443,2.702,444,3.5,445,2.53,448,4.013,449,2.53,450,1.757,451,1.757,452,3.043,453,2.2,454,3.598,455,2.2,456,2.53,457,1.953,458,3.765,460,2.726,461,3.489,462,3.489,463,3.489,464,4.013,465,4.702,466,4.013,467,4.013,468,4.702,469,4.013,470,4.191,471,3.489,472,3.099,473,3.099,474,3.489,475,4.013,476,2.527,1274,2.53,1275,3.03,1276,3.03,1277,3.03,1278,3.03,1279,3.03,1280,3.03]],["title/injectables/WeatherServiceService.html",[182,1.268,1059,2.03]],["body/injectables/WeatherServiceService.html",[0,0.155,3,0.215,4,0.183,5,0.183,8,0.824,12,1.69,13,1.506,16,0.248,17,0.518,18,1.096,20,0.357,22,0.563,26,0.678,27,0.033,28,0.483,29,0.427,30,0.678,36,1.155,37,1.463,38,2.168,43,0.215,44,0.767,45,0.013,46,0.018,47,0.013,69,1.641,77,1.641,80,1.057,81,0.879,85,1.236,86,2.118,101,0.995,106,1.979,121,2.153,165,1.132,170,1.236,177,1.31,182,1.506,183,1.495,186,1.355,187,2.313,189,1.966,191,3.302,192,1.506,193,1.385,197,1.236,198,2.41,200,2.714,201,1.039,202,1.662,203,1.495,204,2.836,209,2.714,210,2.714,211,1.275,282,0.914,359,2.797,363,2.313,438,1.495,439,3.444,441,3.639,442,3.11,443,3.444,452,2.714,457,3.11,460,1.355,543,3.194,559,3.444,566,3.444,570,3.503,572,3.503,607,2.153,628,1.872,776,1.872,784,3.121,794,3.121,795,2.153,796,2.153,797,2.153,798,2.153,801,2.153,802,2.153,803,1.872,805,3.503,808,2.41,1046,4.028,1059,2.41,1070,4.46,1078,3.121,1086,4.028,1087,4.028,1092,3.121,1095,3.121,1141,3.121,1147,3.121,1274,4.028,1281,3.739,1282,3.739,1283,4.4,1284,3.739,1285,2.579,1286,3.739,1287,3.739,1288,3.739,1289,4.825,1290,2.579,1291,3.739,1292,3.739,1293,3.739,1294,2.579,1295,4.825,1296,3.739,1297,3.739,1298,3.739,1299,3.739,1300,3.739,1301,2.579,1302,2.579,1303,2.579,1304,2.579,1305,2.579,1306,2.579,1307,2.579,1308,2.579,1309,2.579,1310,2.579]],["title/coverage.html",[1311,3.593]],["body/coverage.html",[0,0.378,1,1.723,5,0.211,6,2.667,7,2.982,27,0.033,29,0.248,37,0.727,45,0.015,46,0.02,47,0.015,48,1.909,49,1.198,55,2.481,56,1.763,57,1.916,58,3.587,73,1.916,82,2.667,83,2.667,152,1.916,162,1.304,164,1.304,166,1.198,167,1.198,168,1.425,169,1.101,173,1.916,182,2.072,184,2.481,211,1.014,215,2.481,259,2.667,267,2.158,268,2.158,274,1.916,279,2.158,280,1.916,281,2.481,332,3.988,343,2.158,344,3.067,345,2.481,346,2.481,366,1.723,385,1.562,388,1.723,403,3.003,404,3.003,438,1.723,439,3.067,460,1.562,477,1.916,478,2.481,479,2.481,526,1.916,527,2.481,528,2.481,531,2.158,532,2.481,533,2.481,549,1.723,614,4.064,615,1.916,637,2.158,639,2.158,642,2.158,646,2.158,651,2.158,733,5.316,776,3.003,804,2.481,812,2.158,813,2.481,814,2.481,990,1.916,991,3.003,992,3.003,1010,2.158,1014,2.481,1015,2.481,1026,2.481,1027,2.481,1039,3.003,1059,1.916,1254,2.481,1311,2.481,1312,2.973,1313,2.973,1314,2.973,1315,6.228,1316,5.949,1317,4.137,1318,2.973,1319,3.453,1320,2.973,1321,4.137,1322,4.137,1323,5.408,1324,3.453,1325,2.973,1326,2.973,1327,2.973,1328,2.973,1329,4.137,1330,2.973,1331,2.973,1332,2.973,1333,5.144,1334,2.973,1335,2.973,1336,2.973,1337,2.973,1338,4.758,1339,2.973,1340,2.973,1341,2.973,1342,2.481,1343,3.453,1344,2.481,1345,3.453,1346,2.481,1347,2.481,1348,2.973]],["title/dependencies.html",[230,2.442,1349,2.626]],["body/dependencies.html",[27,0.033,45,0.022,46,0.026,47,0.022,81,1.491,180,2.818,199,3.864,230,2.818,232,3.174,246,4.443,247,3.864,253,3.65,265,3.65,625,3.65,632,3.65,1121,3.65,1350,4.372,1351,6.3,1352,4.372,1353,5.322,1354,4.372,1355,4.372,1356,4.372,1357,4.372,1358,3.65,1359,4.372,1360,4.372,1361,4.372,1362,4.372,1363,4.372,1364,4.372,1365,4.372,1366,4.372,1367,4.372,1368,4.372,1369,4.372,1370,4.372,1371,4.372,1372,4.372,1373,4.372,1374,4.372,1375,4.372,1376,4.372]],["title/index.html",[16,0.253,1377,2.626,1378,2.626]],["body/index.html",[4,0.296,27,0.026,28,0.458,45,0.021,46,0.026,47,0.021,48,1.917,63,2.194,211,1.423,242,3.03,605,4.905,803,3.755,1358,5.208,1379,4.174,1380,5.173,1381,4.174,1382,5.621,1383,5.621,1384,4.174,1385,4.174,1386,4.174,1387,6.04,1388,4.174,1389,4.174,1390,4.174,1391,4.174,1392,4.174,1393,4.174,1394,4.174,1395,4.174,1396,4.174,1397,4.174,1398,5.621,1399,5.621,1400,4.174,1401,6.04,1402,4.174,1403,4.174,1404,4.174,1405,4.174,1406,4.174,1407,4.174,1408,3.484,1409,5.173,1410,5.173,1411,5.876,1412,4.174,1413,5.173,1414,5.173,1415,4.174,1416,4.174,1417,4.174,1418,4.174,1419,5.621,1420,4.174,1421,4.174,1422,4.174,1423,4.174]],["title/modules.html",[229,2.495]],["body/modules.html",[27,0.029,45,0.025,46,0.029,47,0.025,228,3.238,229,2.912,239,2.912,247,3.646,1424,5.023,1425,5.023,1426,5.778,1427,5.023,1428,5.023]],["title/overview.html",[1429,3.593]],["body/overview.html",[2,0.968,27,0.032,45,0.021,46,0.026,47,0.021,49,2.299,50,2.502,155,2.269,162,2.757,164,2.504,166,2.299,167,2.299,169,2.114,183,2.502,201,1.739,228,4.24,229,2.502,230,2.782,231,3.603,232,3.133,233,3.603,234,3.133,235,3.603,236,3.603,237,3.603,238,3.603,239,3.307,240,3.833,241,3.603,242,3.133,269,2.782,372,2.502,1182,3.603,1429,3.603,1430,4.316,1431,4.316,1432,4.316]],["title/routes.html",[269,2.775]],["body/routes.html",[27,0.029,45,0.025,46,0.029,47,0.025,269,3.312]],["title/miscellaneous/variables.html",[1433,2.192,1434,3.163]],["body/miscellaneous/variables.html",[13,1.426,14,2.281,15,1.696,16,0.341,27,0.033,28,0.571,29,0.53,36,0.663,37,0.865,45,0.017,46,0.023,47,0.017,58,3.661,93,2.734,101,0.942,167,1.426,169,1.311,192,2.313,193,2.127,206,2.569,259,2.281,267,2.569,268,3.379,279,3.379,367,2.051,370,1.553,372,2.051,374,2.281,424,2.281,480,2.699,614,2.569,633,3.886,634,3.379,635,2.954,636,3.886,637,3.379,638,2.954,639,3.379,640,2.954,641,2.954,642,3.379,643,2.954,644,2.954,645,2.954,646,3.379,647,2.954,648,2.954,649,2.954,650,2.954,651,3.379,658,3.379,668,2.954,990,2.281,991,2.569,992,3.379,1010,3.379,1011,2.954,1012,2.954,1013,2.954,1039,2.569,1319,2.954,1324,2.954,1342,2.954,1343,4.614,1344,2.954,1345,2.954,1346,3.886,1347,3.886,1408,3.886,1433,2.954,1434,2.954,1435,3.539,1436,3.539,1437,3.539,1438,5.742,1439,4.655,1440,3.539,1441,3.539,1442,3.539,1443,3.539,1444,3.539,1445,3.539,1446,4.655]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":332,"title":{},"body":{"classes/CalculatedProps.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["0.2",{"_index":1260,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.4s",{"_index":1263,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.5",{"_index":751,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0.5s",{"_index":1236,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.9.1",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["037ffc",{"_index":1174,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["088",{"_index":744,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0ff",{"_index":749,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0px",{"_index":774,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["1",{"_index":370,"title":{},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"injectables/MeteoStatsService.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["1.2s",{"_index":1250,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["1.5s",{"_index":1249,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["1.6.0",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["1.8.3",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":721,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["100",{"_index":733,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{}}}],["100px",{"_index":1228,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["10px",{"_index":746,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["11/13",{"_index":1328,"title":{},"body":{"coverage.html":{}}}],["110px",{"_index":757,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["11px",{"_index":766,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["12px",{"_index":755,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["14/14",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1432,"title":{},"body":{"overview.html":{}}}],["1500",{"_index":1136,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["15px",{"_index":1231,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["1px",{"_index":743,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["1s",{"_index":1234,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["2",{"_index":372,"title":{},"body":{"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":154,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["200",{"_index":583,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["20px",{"_index":742,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["22px",{"_index":1265,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["250",{"_index":661,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["2560x1600.jpg",{"_index":1210,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["25px",{"_index":1230,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["29/37",{"_index":1326,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":729,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["2s",{"_index":1244,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["3",{"_index":374,"title":{},"body":{"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["3.5.0",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":1272,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["30px",{"_index":726,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["320px",{"_index":739,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["35px",{"_index":773,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["3px",{"_index":1258,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["4",{"_index":1431,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1262,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["40vh",{"_index":1204,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["43/43",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["48px",{"_index":765,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["5",{"_index":1182,"title":{},"body":{"components/WeatherComponentComponent.html":{},"overview.html":{}}}],["5/5",{"_index":1329,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1254,"title":{},"body":{"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["50px",{"_index":756,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["52",{"_index":110,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["53.1324886",{"_index":679,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["5px",{"_index":1247,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["6",{"_index":1430,"title":{},"body":{"overview.html":{}}}],["6.0.2",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["6.3.1",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":772,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["66",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1266,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["7/7",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1246,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["8",{"_index":680,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["8.2.11",{"_index":1351,"title":{},"body":{"dependencies.html":{}}}],["8.2.14",{"_index":1356,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":1353,"title":{},"body":{"dependencies.html":{}}}],["8.3.14",{"_index":1385,"title":{},"body":{"index.html":{}}}],["8/8",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":1327,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":769,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["90px",{"_index":740,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["absolute",{"_index":719,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["actual_component",{"_index":172,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["adnie",{"_index":129,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["adres",{"_index":570,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["air",{"_index":64,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["airdata",{"_index":1,"title":{"classes/AirData.html":{}},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["airdata(item.current",{"_index":800,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["airly",{"_index":206,"title":{},"body":{"injectables/AirQualityService.html":{},"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["airly.eu",{"_index":778,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["airport",{"_index":919,"title":{},"body":{"classes/StationList.html":{}}}],["airqualitycomponentcomponent",{"_index":49,"title":{"components/AirQualityComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["airqualitydata",{"_index":173,"title":{"classes/AirQualityData.html":{}},"body":{"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["airqualitydata(item.id",{"_index":212,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["airqualityservice",{"_index":73,"title":{"injectables/AirQualityService.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["aktualne",{"_index":1287,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["aktualnego",{"_index":1043,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["aktualnie",{"_index":39,"title":{},"body":{"classes/AirData.html":{}}}],["aktualnym",{"_index":1092,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["align",{"_index":1214,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["analizowanego",{"_index":1114,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["angular",{"_index":1382,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1350,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1352,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1354,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":197,"title":{},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["angular/compiler",{"_index":1355,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/i18n/i18n_ast",{"_index":629,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":180,"title":{},"body":{"classes/AirQualityData.html":{},"modules/AppRoutingModule.html":{},"classes/MeteoStatsData.html":{},"dependencies.html":{}}}],["animacje",{"_index":1129,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["animation",{"_index":1232,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["api",{"_index":37,"title":{},"body":{"classes/AirData.html":{},"injectables/AirQualityService.html":{},"classes/ChartService.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/rest/aqindex/getindex/52",{"_index":195,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["apibaseurl",{"_index":541,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["apikey",{"_index":542,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["apiurl",{"_index":543,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["apiurlforecast",{"_index":1283,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["aplikacja",{"_index":94,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["aplikacji",{"_index":1127,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["app",{"_index":63,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"index.html":{}}}],["app.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":228,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":239,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":1108,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["area\").show",{"_index":1140,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["args",{"_index":687,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["around",{"_index":1253,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["array",{"_index":381,"title":{},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/StationList.html":{}}}],["artifacts",{"_index":1402,"title":{},"body":{"index.html":{}}}],["atmosferyczny",{"_index":487,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["auto",{"_index":738,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["automatically",{"_index":1392,"title":{},"body":{"index.html":{}}}],["autopan",{"_index":657,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["autopananimation",{"_index":659,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["available",{"_index":1428,"title":{},"body":{"modules.html":{}}}],["average",{"_index":308,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["averagesum",{"_index":315,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["background",{"_index":747,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["backgroundcolor:'#e8b67c",{"_index":1175,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["backwards",{"_index":1239,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["bartoszow",{"_index":912,"title":{},"body":{"classes/StationList.html":{}}}],["bazowy",{"_index":569,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["bedzie",{"_index":33,"title":{},"body":{"classes/AirData.html":{}}}],["belsk",{"_index":930,"title":{},"body":{"classes/StationList.html":{}}}],["biala",{"_index":976,"title":{},"body":{"classes/StationList.html":{}}}],["bialystok",{"_index":882,"title":{},"body":{"classes/StationList.html":{}}}],["bielany",{"_index":898,"title":{},"body":{"classes/StationList.html":{}}}],["bielsko",{"_index":975,"title":{},"body":{"classes/StationList.html":{}}}],["black",{"_index":731,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["block",{"_index":1261,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["bootstrap",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":728,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["bordercolor",{"_index":1173,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["bottom",{"_index":724,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["box",{"_index":1256,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["brak",{"_index":714,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["break",{"_index":611,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["browse",{"_index":1426,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["brwinow",{"_index":895,"title":{},"body":{"classes/StationList.html":{}}}],["build",{"_index":1401,"title":{},"body":{"index.html":{}}}],["będ",{"_index":451,"title":{},"body":{"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["będzie",{"_index":134,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["błędzie",{"_index":1111,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["c",{"_index":1191,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ca",{"_index":118,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["calculatedprops",{"_index":280,"title":{"classes/CalculatedProps.html":{}},"body":{"classes/CalculatedProps.html":{},"classes/Statistics.html":{},"coverage.html":{}}}],["calculatepressuredata",{"_index":354,"title":{},"body":{"classes/ChartService.html":{}}}],["calculatepressuredata(type",{"_index":357,"title":{},"body":{"classes/ChartService.html":{}}}],["calculatetemperaturedata",{"_index":355,"title":{},"body":{"classes/ChartService.html":{}}}],["calculatetemperaturedata(type",{"_index":382,"title":{},"body":{"classes/ChartService.html":{}}}],["canvasjs",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["caqi",{"_index":708,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["case",{"_index":609,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["catcherror",{"_index":796,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["catcherror((error",{"_index":801,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["cccccc",{"_index":754,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["center",{"_index":677,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["change",{"_index":1394,"title":{},"body":{"index.html":{}}}],["chart",{"_index":387,"title":{},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"components/WeatherComponentComponent.html":{}}}],["chart('chart__forecast",{"_index":1166,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["chart.js",{"_index":1121,"title":{},"body":{"components/WeatherComponentComponent.html":{},"dependencies.html":{}}}],["chart.ts",{"_index":1027,"title":{},"body":{"classes/TempChart.html":{},"coverage.html":{}}}],["chart.ts:10",{"_index":1038,"title":{},"body":{"classes/TempChart.html":{}}}],["chart.ts:4",{"_index":1032,"title":{},"body":{"classes/TempChart.html":{}}}],["chartservice",{"_index":343,"title":{"classes/ChartService.html":{}},"body":{"classes/ChartService.html":{},"coverage.html":{}}}],["chce",{"_index":138,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["chcemy",{"_index":112,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/MeteoStatsService.html":{}}}],["check",{"_index":1422,"title":{},"body":{"index.html":{}}}],["chmurki",{"_index":650,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["chojnice",{"_index":870,"title":{},"body":{"classes/StationList.html":{}}}],["city.value.touppercase",{"_index":1183,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ciśnienia",{"_index":292,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/Statistics.html":{}}}],["ciśnienie",{"_index":362,"title":{},"body":{"classes/ChartService.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["ciśnienu",{"_index":1020,"title":{},"body":{"classes/Statistics.html":{}}}],["class",{"_index":0,"title":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"classes/WeatherData.html":{}},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"classes/WeatherData.html":{},"overview.html":{}}}],["cli",{"_index":1383,"title":{},"body":{"index.html":{}}}],["closer",{"_index":653,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["closer:after",{"_index":770,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudcontainer",{"_index":651,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloudimage",{"_index":775,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudoverlay",{"_index":662,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudoverlay.setposition(args.coordinate",{"_index":704,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudoverlay.setposition(undefined",{"_index":666,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cloudpopup",{"_index":771,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cluster_appmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":104,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["code",{"_index":1396,"title":{},"body":{"index.html":{}}}],["color",{"_index":748,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["column",{"_index":1217,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["compat",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":48,"title":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":161,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.css",{"_index":66,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.html",{"_index":68,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts",{"_index":58,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component.component.ts:105",{"_index":1068,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:11",{"_index":74,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["component.component.ts:15",{"_index":76,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["component.component.ts:151",{"_index":1061,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:18",{"_index":79,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["component.component.ts:27",{"_index":1119,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:31",{"_index":1113,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:35",{"_index":1109,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:39",{"_index":1115,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:43",{"_index":1118,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:47",{"_index":1060,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:51",{"_index":621,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component.component.ts:55",{"_index":616,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component.component.ts:56",{"_index":1097,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:66",{"_index":617,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component.component.ts:68",{"_index":1098,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:80",{"_index":1090,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component/air",{"_index":57,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["component/stats",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":160,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["components",{"_index":50,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"overview.html":{}}}],["components/air",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/quality/quality",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/stats",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/weather/weather",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["console.log(args.coordinate",{"_index":688,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["console.log(city",{"_index":1164,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["console.log(lonlat",{"_index":693,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["console.log(records",{"_index":700,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["console.log(results",{"_index":89,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["const",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/StatisticType.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(current",{"_index":21,"title":{},"body":{"classes/AirData.html":{}}}],["constructor(date",{"_index":506,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["constructor(http",{"_index":186,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(id",{"_index":174,"title":{},"body":{"classes/AirQualityData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{}}}],["constructor(list",{"_index":446,"title":{},"body":{"classes/ForecastData.html":{}}}],["constructor(min",{"_index":313,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["constructor(name",{"_index":1275,"title":{},"body":{"classes/WeatherData.html":{}}}],["constructor(private",{"_index":85,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(public",{"_index":436,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{}}}],["constructor(service",{"_index":72,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["constructor(tempcharts",{"_index":430,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["constructor(temperature",{"_index":1017,"title":{},"body":{"classes/Statistics.html":{}}}],["constructor(value",{"_index":1031,"title":{},"body":{"classes/TempChart.html":{}}}],["constructor(x",{"_index":412,"title":{},"body":{"classes/DataPoints.html":{}}}],["container",{"_index":717,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["content",{"_index":761,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["content\").animate",{"_index":1135,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content/uploads/2017/03/sun",{"_index":1206,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__chart",{"_index":1106,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__chart\").show",{"_index":1139,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__my",{"_index":1268,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__table",{"_index":1105,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__table\").show",{"_index":1138,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["context",{"_index":1346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["copernicus",{"_index":918,"title":{},"body":{"classes/StationList.html":{}}}],["coverage",{"_index":1311,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":19,"title":{},"body":{"classes/AirData.html":{}}}],["custom",{"_index":1269,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["czas",{"_index":453,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["czasie",{"_index":1116,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["czasowym",{"_index":325,"title":{},"body":{"classes/CalculatedProps.html":{},"injectables/MeteoStatsService.html":{}}}],["czestochowa",{"_index":956,"title":{},"body":{"classes/StationList.html":{}}}],["czy",{"_index":999,"title":{},"body":{"classes/StatisticType.html":{},"classes/TempChart.html":{}}}],["czyli",{"_index":285,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/StatisticType.html":{}}}],["cząca",{"_index":534,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["daily",{"_index":612,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["dane",{"_index":12,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["danej",{"_index":537,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["danych",{"_index":369,"title":{},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{}}}],["danym",{"_index":323,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["danymi",{"_index":1101,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["darmowe",{"_index":579,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["dat",{"_index":97,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{}}}],["data",{"_index":150,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"classes/ChartService.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/WeatherComponentComponent.html":{}}}],["data.ts",{"_index":479,"title":{},"body":{"classes/MeteoStatsData.html":{},"coverage.html":{}}}],["data.ts:25",{"_index":514,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:26",{"_index":521,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:27",{"_index":523,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:28",{"_index":522,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:29",{"_index":516,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:30",{"_index":519,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:31",{"_index":518,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:32",{"_index":524,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:33",{"_index":525,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:34",{"_index":515,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:35",{"_index":520,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:36",{"_index":517,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:8",{"_index":507,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data[0].list[0].main.temp_max",{"_index":1150,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[0].main.temp_min",{"_index":1152,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[0].weather[0].icon",{"_index":1154,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[i+1].main.temp_min",{"_index":1155,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[i].main.temp_max",{"_index":1159,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data[0].list[i].main.temp_min",{"_index":1160,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["data].map((item",{"_index":210,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["datacount",{"_index":316,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["datacount).tofixed(2).tostring",{"_index":342,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["datapoints",{"_index":388,"title":{"classes/DataPoints.html":{}},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"coverage.html":{}}}],["datapoints(i",{"_index":433,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["datapointslist",{"_index":366,"title":{"classes/DataPointsList.html":{}},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"coverage.html":{}}}],["datapointslist(templist).datapoints",{"_index":401,"title":{},"body":{"classes/ChartService.html":{}}}],["datasets",{"_index":1170,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["date",{"_index":314,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{}}}],["date.getdate",{"_index":1157,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["date.getmonth()+1",{"_index":1158,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["datefrom",{"_index":550,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["dateto",{"_index":551,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["daty",{"_index":303,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["deblin",{"_index":936,"title":{},"body":{"classes/StationList.html":{}}}],["declarations",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":631,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["decoration",{"_index":768,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["default",{"_index":192,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["delay",{"_index":1235,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dependencies",{"_index":230,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["dev",{"_index":1389,"title":{},"body":{"index.html":{}}}],["development",{"_index":1386,"title":{},"body":{"index.html":{}}}],["direction",{"_index":1216,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["directive",{"_index":158,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["directives",{"_index":171,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1400,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1405,"title":{},"body":{"index.html":{}}}],["display",{"_index":1178,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dist",{"_index":1404,"title":{},"body":{"index.html":{}}}],["dla",{"_index":38,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/Station.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["dnane",{"_index":360,"title":{},"body":{"classes/ChartService.html":{}}}],["dni",{"_index":443,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["dniowych",{"_index":1003,"title":{},"body":{"classes/StatisticType.html":{}}}],["document).ready(function",{"_index":1134,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["document.getelementbyid('cityinput",{"_index":1163,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["document.getelementbyid('cloudpopup",{"_index":654,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["document.getelementbyid('popup",{"_index":652,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["documentation",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":53,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["don't",{"_index":466,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["dostępne",{"_index":993,"title":{},"body":{"classes/StatisticType.html":{}}}],["drawchart",{"_index":1055,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dt_txt",{"_index":1169,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["du",{"_index":119,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["duration",{"_index":660,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["dwóch",{"_index":1130,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dynamic",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["dzienne",{"_index":373,"title":{},"body":{"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{}}}],["dzienny",{"_index":1012,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["dzięki",{"_index":1077,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["długo",{"_index":789,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["długości",{"_index":638,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1416,"title":{},"body":{"index.html":{}}}],["elblag",{"_index":852,"title":{},"body":{"classes/StationList.html":{}}}],["element",{"_index":157,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"classes/ChartService.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["element.date",{"_index":397,"title":{},"body":{"classes/ChartService.html":{}}}],["element.month",{"_index":400,"title":{},"body":{"classes/ChartService.html":{}}}],["element.temperature",{"_index":392,"title":{},"body":{"classes/ChartService.html":{}}}],["element.temperature_mean",{"_index":398,"title":{},"body":{"classes/ChartService.html":{}}}],["element.time",{"_index":396,"title":{},"body":{"classes/ChartService.html":{}}}],["elementami",{"_index":426,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["encapsulation",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":605,"title":{},"body":{"injectables/MeteoStatsService.html":{},"index.html":{}}}],["endpointów",{"_index":1303,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["environment",{"_index":1343,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epsg:3857",{"_index":691,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["epsg:4326",{"_index":692,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["error",{"_index":1143,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["errormsg",{"_index":1049,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["events",{"_index":763,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["execute",{"_index":1413,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["exports",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":668,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1219,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ffffff",{"_index":1202,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["files",{"_index":1395,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1237,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["flag",{"_index":1407,"title":{},"body":{"index.html":{}}}],["flex",{"_index":1212,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["font",{"_index":734,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["forecastdata",{"_index":438,"title":{"classes/ForecastData.html":{}},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["forecastdata(item.list",{"_index":1310,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["formsmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["frame",{"_index":727,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["full",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":664,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["funkcj",{"_index":1080,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["funkcja",{"_index":359,"title":{},"body":{"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["funkcjami",{"_index":1281,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["funkcji",{"_index":1066,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["further",{"_index":1418,"title":{},"body":{"index.html":{}}}],["g/m3",{"_index":710,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["gdansk",{"_index":847,"title":{},"body":{"classes/StationList.html":{}}}],["gdynia",{"_index":845,"title":{},"body":{"classes/StationList.html":{}}}],["gdzie",{"_index":125,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["generate",{"_index":1398,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1381,"title":{},"body":{"index.html":{}}}],["geograficzn",{"_index":790,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["geograficzna",{"_index":791,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["geograficznej",{"_index":636,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["get(`${this.apiurlforecast}${term}&appid=b742a4225977a8a94a092feb673aad31&units=metric",{"_index":1309,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["get(`${this.apiurl}${term}&appid=9a3485ea70ca20151b5d5d7b29054807&units=metric",{"_index":1304,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["get(`${this.apiurl}&lat=${lat}&lng=${lng}&apikey=sv8wb734fm470c2hys8atebfrng5lzu9",{"_index":799,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["get(this.api",{"_index":205,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["get(this.apiurl",{"_index":607,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/WeatherServiceService.html":{}}}],["getairdata",{"_index":185,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{}}}],["getairdata(lat",{"_index":781,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["getairdata(latitude",{"_index":698,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["getforecastservice",{"_index":1056,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getforecastservice(term",{"_index":1067,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getstatsdata",{"_index":545,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getstatsdata(type",{"_index":548,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getting",{"_index":1377,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":546,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["gettype(type",{"_index":562,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getweatherdata",{"_index":1095,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherdata(term",{"_index":1141,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherforecastdata",{"_index":1078,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherforecastdata(term",{"_index":1147,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherservice",{"_index":1057,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getweatherservice(term",{"_index":1089,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["go",{"_index":1421,"title":{},"body":{"index.html":{}}}],["godzine",{"_index":585,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["godzinowe",{"_index":371,"title":{},"body":{"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["godzinowy",{"_index":1011,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["godzinowych",{"_index":1002,"title":{},"body":{"classes/StatisticType.html":{}}}],["goleniow",{"_index":862,"title":{},"body":{"classes/StationList.html":{}}}],["gora",{"_index":909,"title":{},"body":{"classes/StationList.html":{}}}],["gorzow",{"_index":884,"title":{},"body":{"classes/StationList.html":{}}}],["gradient(#626d329f,#6e5f33af",{"_index":1242,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["graph",{"_index":1427,"title":{},"body":{"modules.html":{}}}],["głownej",{"_index":1126,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["głownych",{"_index":1131,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["główna",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["głęboko",{"_index":489,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["h2",{"_index":1218,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["hammerjs",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["height",{"_index":732,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["height:0px",{"_index":1255,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["hel",{"_index":843,"title":{},"body":{"classes/StationList.html":{}}}],["help",{"_index":1419,"title":{},"body":{"index.html":{}}}],["historyczne",{"_index":573,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["hourly",{"_index":610,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["hpa",{"_index":1196,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["html",{"_index":156,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["http",{"_index":189,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["http://api.gios.gov.pl/pjp",{"_index":194,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["http://localhost:4200",{"_index":1391,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":187,"title":{},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["httpclientmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":794,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["https://airapi.airly.eu/v2/measurements/nearest?indextype=airly_caqi&maxdistancekm=100",{"_index":792,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["https://api.meteostat.net/v1/history",{"_index":567,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["https://api.openweathermap.org/data/2.5/forecast?q",{"_index":1297,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["https://api.openweathermap.org/data/2.5/weather?q",{"_index":1293,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["ich",{"_index":350,"title":{},"body":{"classes/ChartService.html":{},"components/WeatherComponentComponent.html":{}}}],["icon",{"_index":1153,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["id",{"_index":93,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":630,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["ikonka",{"_index":475,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["implements",{"_index":59,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["import",{"_index":80,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["imports",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["indywidualy",{"_index":1006,"title":{},"body":{"classes/StatisticType.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["informacj",{"_index":564,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["informacja",{"_index":1110,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["informacje",{"_index":367,"title":{},"body":{"classes/ChartService.html":{},"components/QualityComponentComponent.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["inicjowanie",{"_index":618,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["inicjue",{"_index":1099,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["inicująca",{"_index":1069,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["injectable",{"_index":182,"title":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["injectables",{"_index":183,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"overview.html":{}}}],["interpretujący",{"_index":647,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["irena",{"_index":937,"title":{},"body":{"classes/StationList.html":{}}}],["isnull",{"_index":1122,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["item.main",{"_index":1307,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["item.stindexlevel",{"_index":213,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["item.stsourcedatadate",{"_index":214,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["item.visibility",{"_index":1306,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["item.weather",{"_index":1308,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["items",{"_index":1215,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["jakie",{"_index":997,"title":{},"body":{"classes/StatisticType.html":{}}}],["jako",{"_index":109,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{}}}],["jakości",{"_index":14,"title":{},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"miscellaneous/variables.html":{}}}],["jasionka",{"_index":969,"title":{},"body":{"classes/StationList.html":{}}}],["jedynie",{"_index":581,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["jej",{"_index":820,"title":{},"body":{"classes/StationList.html":{}}}],["jelenia",{"_index":946,"title":{},"body":{"classes/StationList.html":{}}}],["jest",{"_index":578,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["jeśli",{"_index":111,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["jquery",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":1213,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["kalisz",{"_index":922,"title":{},"body":{"classes/StationList.html":{}}}],["kalsy",{"_index":823,"title":{},"body":{"classes/StationList.html":{}}}],["karma",{"_index":1415,"title":{},"body":{"index.html":{}}}],["kasprowy",{"_index":980,"title":{},"body":{"classes/StationList.html":{}}}],["katowice",{"_index":960,"title":{},"body":{"classes/StationList.html":{}}}],["kay",{"_index":207,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["ketrzyn",{"_index":854,"title":{},"body":{"classes/StationList.html":{}}}],["key=xwftslqc",{"_index":586,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["kiedy",{"_index":304,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["kielce",{"_index":964,"title":{},"body":{"classes/StationList.html":{}}}],["kierunek",{"_index":490,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["klasa",{"_index":282,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["klasy",{"_index":25,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"classes/WeatherData.html":{}}}],["klikniętego",{"_index":40,"title":{},"body":{"classes/AirData.html":{}}}],["klodzko",{"_index":950,"title":{},"body":{"classes/StationList.html":{}}}],["klucz",{"_index":589,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["know",{"_index":467,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["kolo",{"_index":891,"title":{},"body":{"classes/StationList.html":{}}}],["kolobrzeg",{"_index":830,"title":{},"body":{"classes/StationList.html":{}}}],["kolumnowych",{"_index":353,"title":{},"body":{"classes/ChartService.html":{}}}],["komponent",{"_index":1040,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["konkretnej",{"_index":598,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["konkretnie",{"_index":593,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["konstruktor",{"_index":24,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{}}}],["korzysta",{"_index":114,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["kostruktor",{"_index":448,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["koszalin",{"_index":832,"title":{},"body":{"classes/StationList.html":{}}}],["kozienice",{"_index":934,"title":{},"body":{"classes/StationList.html":{}}}],["krakow",{"_index":962,"title":{},"body":{"classes/StationList.html":{}}}],["któe",{"_index":376,"title":{},"body":{"classes/ChartService.html":{}}}],["któr",{"_index":463,"title":{},"body":{"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"classes/WeatherData.html":{}}}],["która",{"_index":32,"title":{},"body":{"classes/AirData.html":{}}}],["które",{"_index":421,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"components/WeatherComponentComponent.html":{}}}],["którego",{"_index":571,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{}}}],["której",{"_index":450,"title":{},"body":{"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["którgo",{"_index":1295,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["który",{"_index":1034,"title":{},"body":{"classes/TempChart.html":{}}}],["l",{"_index":624,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["label",{"_index":409,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"components/WeatherComponentComponent.html":{}}}],["labels",{"_index":1168,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["lat",{"_index":696,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["latitude",{"_index":637,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lato",{"_index":1220,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["layers",{"_index":672,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["layout",{"_index":737,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["leaflet",{"_index":625,"title":{},"body":{"components/QualityComponentComponent.html":{},"dependencies.html":{}}}],["leba",{"_index":839,"title":{},"body":{"classes/StationList.html":{}}}],["lebork",{"_index":841,"title":{},"body":{"classes/StationList.html":{}}}],["left",{"_index":722,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["legend",{"_index":155,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"overview.html":{}}}],["legionowo",{"_index":900,"title":{},"body":{"classes/StationList.html":{}}}],["legnica",{"_index":911,"title":{},"body":{"classes/StationList.html":{}}}],["lesko",{"_index":986,"title":{},"body":{"classes/StationList.html":{}}}],["leszno",{"_index":914,"title":{},"body":{"classes/StationList.html":{}}}],["letter",{"_index":1225,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["limit",{"_index":582,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["line",{"_index":1167,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["linear",{"_index":1241,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["list",{"_index":120,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"classes/WeatherData.html":{}}}],["list.ts",{"_index":814,"title":{},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["list.ts:11",{"_index":822,"title":{},"body":{"classes/StationList.html":{}}}],["lista",{"_index":818,"title":{},"body":{"classes/StationList.html":{}}}],["listy",{"_index":425,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["lng",{"_index":782,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["lodz",{"_index":926,"title":{},"body":{"classes/StationList.html":{}}}],["long",{"_index":697,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["longitude",{"_index":639,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lonlat",{"_index":689,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["lonlat[0",{"_index":694,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["lonlat[1",{"_index":695,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["lub",{"_index":293,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["lublin",{"_index":941,"title":{},"body":{"classes/StationList.html":{}}}],["ma",{"_index":105,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/TempChart.html":{}}}],["macierz",{"_index":449,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["main",{"_index":468,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["main.temp_max",{"_index":1171,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["main.temp_min",{"_index":1172,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["mainpage",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["maj",{"_index":377,"title":{},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["maksymaln",{"_index":287,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["maksymalna",{"_index":473,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["maksymalnej",{"_index":512,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["maksymalnych",{"_index":298,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["mamy",{"_index":557,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["map",{"_index":165,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["map((data",{"_index":209,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["mapa",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["mapcomponentcomponent",{"_index":164,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapy",{"_index":619,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["margin",{"_index":725,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["marker",{"_index":741,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matexpansionmodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":309,"title":{},"body":{"classes/CalculatedProps.html":{},"components/QualityComponentComponent.html":{}}}],["max.tostring",{"_index":338,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["max/min",{"_index":455,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["maxdate",{"_index":310,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["maxdate.tostring",{"_index":340,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["maxtemp",{"_index":1149,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["message",{"_index":628,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["metadata",{"_index":61,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["meteo",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"classes/MeteoStatsModel.html":{}}}],["meteoapp",{"_index":1379,"title":{},"body":{"index.html":{}}}],["meteostat",{"_index":535,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["meteostat.net",{"_index":577,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["meteostatdata",{"_index":509,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["meteostatsdata",{"_index":477,"title":{"classes/MeteoStatsData.html":{}},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["meteostatsmodel",{"_index":526,"title":{"classes/MeteoStatsModel.html":{}},"body":{"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["meteostatsservice",{"_index":531,"title":{"injectables/MeteoStatsService.html":{}},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["methods",{"_index":69,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miasta",{"_index":462,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["miasto",{"_index":1187,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["miejsc",{"_index":122,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["miejsca",{"_index":41,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{}}}],["miejscowo",{"_index":805,"title":{},"body":{"classes/Station.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miejscowości",{"_index":808,"title":{},"body":{"classes/Station.html":{},"classes/StationList.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miejscu",{"_index":716,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["miejsowo",{"_index":1088,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["miesięczne",{"_index":375,"title":{},"body":{"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{}}}],["miesięczny",{"_index":1013,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["miesięcznych",{"_index":1004,"title":{},"body":{"classes/StatisticType.html":{}}}],["mieście",{"_index":1186,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["mikolajki",{"_index":878,"title":{},"body":{"classes/StationList.html":{}}}],["min",{"_index":311,"title":{},"body":{"classes/CalculatedProps.html":{},"components/QualityComponentComponent.html":{}}}],["min.tostring",{"_index":334,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minadate",{"_index":312,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minadate.tostring",{"_index":336,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minimaln",{"_index":286,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["minimalna",{"_index":472,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["minimalnej",{"_index":511,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["minimalnych",{"_index":297,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["mintemp",{"_index":1151,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["miscellaneous",{"_index":1433,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mlawa",{"_index":874,"title":{},"body":{"classes/StationList.html":{}}}],["mode",{"_index":1238,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["model",{"_index":529,"title":{},"body":{"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{}}}],["model.ts",{"_index":528,"title":{},"body":{"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["model.ts:7",{"_index":530,"title":{},"body":{"classes/MeteoStatsModel.html":{}}}],["models/data",{"_index":389,"title":{},"body":{"classes/ChartService.html":{}}}],["models/station",{"_index":825,"title":{},"body":{"classes/StationList.html":{}}}],["models/stats",{"_index":599,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["models/temp",{"_index":386,"title":{},"body":{"classes/ChartService.html":{}}}],["module",{"_index":201,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"overview.html":{}}}],["module.ts",{"_index":7,"title":{},"body":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{},"coverage.html":{}}}],["module.ts:11",{"_index":42,"title":{},"body":{"classes/AirData.html":{}}}],["module.ts:14",{"_index":1278,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:15",{"_index":1279,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:16",{"_index":1277,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:17",{"_index":1280,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:24",{"_index":447,"title":{},"body":{"classes/ForecastData.html":{}}}],["module.ts:3",{"_index":179,"title":{},"body":{"classes/AirQualityData.html":{}}}],["module.ts:31",{"_index":459,"title":{},"body":{"classes/ForecastData.html":{}}}],["module.ts:4",{"_index":23,"title":{},"body":{"classes/AirData.html":{}}}],["module.ts:5",{"_index":1276,"title":{},"body":{"classes/WeatherData.html":{}}}],["modules",{"_index":229,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mog",{"_index":115,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/Station.html":{}}}],["momencie",{"_index":470,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["monthly",{"_index":613,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["more",{"_index":1420,"title":{},"body":{"index.html":{}}}],["movetobottom",{"_index":1233,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["movetoleft",{"_index":1248,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["możemy",{"_index":1298,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["możliwych",{"_index":815,"title":{},"body":{"classes/StationList.html":{},"classes/StatisticType.html":{}}}],["mychart",{"_index":1165,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["móg",{"_index":135,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["na",{"_index":106,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["nacisnięcie",{"_index":1102,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["najbliższe",{"_index":442,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["najbliższych",{"_index":1181,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["najmniejszej",{"_index":331,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["największej",{"_index":328,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["następujących",{"_index":484,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["nasłonecznienie",{"_index":494,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["nav",{"_index":1203,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav\").fadeto(\"slow",{"_index":1137,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__btn",{"_index":1245,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__btn:hover",{"_index":1251,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__input",{"_index":1227,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__input:hover",{"_index":1240,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__error",{"_index":1264,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["navigate",{"_index":1390,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1201,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nazw",{"_index":821,"title":{},"body":{"classes/StationList.html":{},"components/WeatherComponentComponent.html":{}}}],["nazwa",{"_index":461,"title":{},"body":{"classes/ForecastData.html":{},"classes/Station.html":{},"classes/WeatherData.html":{}}}],["nazwy",{"_index":807,"title":{},"body":{"classes/Station.html":{},"components/WeatherComponentComponent.html":{}}}],["new",{"_index":211,"title":{},"body":{"injectables/AirQualityService.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":1358,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngmodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":70,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["nie",{"_index":1145,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["niegu",{"_index":488,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["niej",{"_index":1065,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["none",{"_index":764,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["nowy",{"_index":983,"title":{},"body":{"classes/StationList.html":{}}}],["null",{"_index":393,"title":{},"body":{"classes/ChartService.html":{},"components/WeatherComponentComponent.html":{}}}],["number",{"_index":175,"title":{},"body":{"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{},"classes/WeatherData.html":{}}}],["numer",{"_index":810,"title":{},"body":{"classes/Station.html":{},"classes/StatisticType.html":{}}}],["o",{"_index":13,"title":{},"body":{"classes/AirData.html":{},"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["obiekt",{"_index":480,"title":{},"body":{"classes/MeteoStatsData.html":{},"components/QualityComponentComponent.html":{},"classes/Station.html":{},"classes/TempChart.html":{},"miscellaneous/variables.html":{}}}],["obiektu",{"_index":508,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{}}}],["obiektów",{"_index":485,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["obieku",{"_index":10,"title":{},"body":{"classes/AirData.html":{}}}],["object",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obok",{"_index":126,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["obrazu",{"_index":649,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":191,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["observable.throw(error.message",{"_index":802,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["od",{"_index":560,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["odczuwalna",{"_index":471,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["odczytane",{"_index":444,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["odpowiadająca",{"_index":634,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["odpowied",{"_index":623,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["odpowiedni",{"_index":143,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["odpowiednie",{"_index":1073,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["odpowiedniego",{"_index":99,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["odtępach",{"_index":1001,"title":{},"body":{"classes/StatisticType.html":{}}}],["odwołuje",{"_index":596,"title":{},"body":{"injectables/MeteoStatsService.html":{},"components/WeatherComponentComponent.html":{}}}],["odwołujemy",{"_index":1064,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["okecie",{"_index":902,"title":{},"body":{"classes/StationList.html":{}}}],["okien",{"_index":1132,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["określa",{"_index":996,"title":{},"body":{"classes/StatisticType.html":{}}}],["określająca",{"_index":476,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{},"classes/WeatherData.html":{}}}],["określający",{"_index":457,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["określonych",{"_index":553,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["określonym",{"_index":597,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["ol",{"_index":632,"title":{},"body":{"components/QualityComponentComponent.html":{},"dependencies.html":{}}}],["ol.layer.tile",{"_index":673,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.map",{"_index":670,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.overlay",{"_index":656,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.proj.fromlonlat([23.1688403",{"_index":678,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.proj.transform(args.coordinate",{"_index":690,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.source.osm",{"_index":674,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.view",{"_index":676,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["olsztyn",{"_index":876,"title":{},"body":{"classes/StationList.html":{}}}],["ona",{"_index":127,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["oninit",{"_index":60,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["opacity",{"_index":750,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["opad",{"_index":486,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["openweathermap.org",{"_index":1274,"title":{},"body":{"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["openwethermap.org",{"_index":1291,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["opeweathermap.org",{"_index":445,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["opisanym",{"_index":786,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["opisująca",{"_index":440,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["opisujące",{"_index":1292,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["opole",{"_index":952,"title":{},"body":{"classes/StationList.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["options",{"_index":1176,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["oraz",{"_index":288,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{}}}],["osatecznie",{"_index":283,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["osi",{"_index":415,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["ostroleka",{"_index":880,"title":{},"body":{"classes/StationList.html":{}}}],["out",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":1273,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["overlay",{"_index":655,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overlay,cloudoverlay",{"_index":682,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overlay.setposition(args.coordinate",{"_index":703,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overlay.setposition(undefined",{"_index":665,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overlays",{"_index":681,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["overview",{"_index":1429,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1349,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1229,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["param",{"_index":44,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["parametr",{"_index":1087,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["parametrach",{"_index":554,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["parametrami",{"_index":469,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["parametru",{"_index":1033,"title":{},"body":{"classes/TempChart.html":{}}}],["path",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["peakgust",{"_index":495,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["period",{"_index":1030,"title":{},"body":{"classes/TempChart.html":{}}}],["pi",{"_index":1046,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["pierwszej",{"_index":1133,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pila",{"_index":868,"title":{},"body":{"classes/StationList.html":{}}}],["pionowej",{"_index":417,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["pipe",{"_index":198,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["plock",{"_index":893,"title":{},"body":{"classes/StationList.html":{}}}],["pm1",{"_index":705,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pm10",{"_index":706,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pm25",{"_index":707,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["po",{"_index":91,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pobiera",{"_index":784,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["pobierająca",{"_index":536,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["pobierającymi",{"_index":1282,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["pobieramy",{"_index":793,"title":{},"body":{"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["pobierane",{"_index":572,"title":{},"body":{"injectables/MeteoStatsService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["pobieranie",{"_index":777,"title":{},"body":{"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["pobierz",{"_index":146,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pobra",{"_index":561,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["pobran",{"_index":510,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pobrane",{"_index":35,"title":{},"body":{"classes/AirData.html":{},"classes/ChartService.html":{},"classes/MeteoStatsData.html":{},"classes/StatisticType.html":{}}}],["pobranie",{"_index":592,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["pobrany",{"_index":513,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pobranych",{"_index":482,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pobrne",{"_index":348,"title":{},"body":{"classes/ChartService.html":{}}}],["pod",{"_index":1072,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["poda",{"_index":464,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["podane",{"_index":300,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["podanej",{"_index":1094,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["podanym",{"_index":539,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["podmuch",{"_index":493,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["podpis",{"_index":418,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["podstawowe",{"_index":1128,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pogod",{"_index":458,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["pogoda",{"_index":1188,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pogodowe",{"_index":452,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pogodowej",{"_index":824,"title":{},"body":{"classes/StationList.html":{}}}],["pogody",{"_index":441,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pointer",{"_index":762,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["points",{"_index":390,"title":{},"body":{"classes/ChartService.html":{}}}],["points.ts",{"_index":404,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"coverage.html":{}}}],["points.ts:10",{"_index":437,"title":{},"body":{"classes/DataPointsList.html":{}}}],["points.ts:26",{"_index":413,"title":{},"body":{"classes/DataPoints.html":{}}}],["points.ts:33",{"_index":419,"title":{},"body":{"classes/DataPoints.html":{}}}],["poka",{"_index":1104,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["policzone",{"_index":806,"title":{},"body":{"classes/Station.html":{},"classes/Statistics.html":{}}}],["polsce",{"_index":102,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pom",{"_index":835,"title":{},"body":{"classes/StationList.html":{}}}],["pomiar",{"_index":140,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiarowego",{"_index":100,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiarowych",{"_index":123,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiaru",{"_index":98,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["pomiary",{"_index":1000,"title":{},"body":{"classes/StatisticType.html":{}}}],["poprzez",{"_index":787,"title":{},"body":{"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["popup",{"_index":752,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popup:after",{"_index":758,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popup:before",{"_index":759,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popupa",{"_index":645,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["popupcloser",{"_index":646,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["popupcloser.blur",{"_index":667,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popupcloser.onclick",{"_index":663,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popupcontainer",{"_index":642,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":718,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["postaci",{"_index":424,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["postci",{"_index":351,"title":{},"body":{"classes/ChartService.html":{}}}],["powietrza",{"_index":15,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"classes/ChartService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"miscellaneous/variables.html":{}}}],["poziomej",{"_index":416,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["poznan",{"_index":889,"title":{},"body":{"classes/StationList.html":{}}}],["połączy",{"_index":558,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["precipitation",{"_index":496,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pressure",{"_index":497,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["prezentowane",{"_index":407,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["prezentowanych",{"_index":1036,"title":{},"body":{"classes/TempChart.html":{}}}],["prezentujące",{"_index":361,"title":{},"body":{"classes/ChartService.html":{}}}],["private",{"_index":181,"title":{},"body":{"classes/AirQualityData.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["prod",{"_index":1406,"title":{},"body":{"index.html":{}}}],["production",{"_index":1408,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prognoz",{"_index":1070,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["prognozowana",{"_index":1179,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["prognozy",{"_index":1045,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["project",{"_index":1380,"title":{},"body":{"index.html":{}}}],["properties",{"_index":17,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["protractor",{"_index":1417,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":202,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["providers",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["przechowuje",{"_index":819,"title":{},"body":{"classes/StationList.html":{},"components/WeatherComponentComponent.html":{}}}],["przechowująca",{"_index":318,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/StationList.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{}}}],["przechowującego",{"_index":11,"title":{},"body":{"classes/AirData.html":{}}}],["przechowujący",{"_index":1028,"title":{},"body":{"classes/TempChart.html":{}}}],["przechowywa",{"_index":34,"title":{},"body":{"classes/AirData.html":{}}}],["przechowywane",{"_index":364,"title":{},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["przeciągu",{"_index":1180,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przedstawione",{"_index":428,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["przedziale",{"_index":324,"title":{},"body":{"classes/CalculatedProps.html":{},"injectables/MeteoStatsService.html":{}}}],["przemysl",{"_index":988,"title":{},"body":{"classes/StationList.html":{}}}],["przez",{"_index":559,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["przy",{"_index":575,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{},"components/WeatherComponentComponent.html":{}}}],["przycisk",{"_index":643,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["przycisku",{"_index":1103,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przygotowane",{"_index":379,"title":{},"body":{"classes/ChartService.html":{}}}],["przygotowująca",{"_index":347,"title":{},"body":{"classes/ChartService.html":{}}}],["przypadku",{"_index":296,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["przypisanie",{"_index":1071,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przypisujemy",{"_index":1082,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przód",{"_index":1300,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["prędko",{"_index":491,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["public",{"_index":18,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pulawy",{"_index":939,"title":{},"body":{"classes/StationList.html":{}}}],["punktu",{"_index":414,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["punkty",{"_index":406,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["pyrzowice",{"_index":958,"title":{},"body":{"classes/StationList.html":{}}}],["póki",{"_index":103,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["quality",{"_index":56,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["quality.service",{"_index":84,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["quality.service.ts",{"_index":184,"title":{},"body":{"injectables/AirQualityService.html":{},"coverage.html":{}}}],["quality.service.ts:10",{"_index":188,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality.service.ts:14",{"_index":196,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality.service.ts:16",{"_index":190,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality/air",{"_index":83,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["qualitycomponent",{"_index":685,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["qualitycomponent.results",{"_index":701,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["qualitycomponentcomponent",{"_index":166,"title":{"components/QualityComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["qualityserviceservice",{"_index":615,"title":{"injectables/QualityServiceService.html":{}},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["raciborz",{"_index":954,"title":{},"body":{"classes/StationList.html":{}}}],["radawiec",{"_index":942,"title":{},"body":{"classes/StationList.html":{}}}],["radius",{"_index":745,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["radom",{"_index":932,"title":{},"body":{"classes/StationList.html":{}}}],["reactiveformsmodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":1423,"title":{},"body":{"index.html":{}}}],["rebiechowo",{"_index":848,"title":{},"body":{"classes/StationList.html":{}}}],["records",{"_index":702,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["redirectto",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redni",{"_index":289,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["relative",{"_index":1271,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["reload",{"_index":1393,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":1211,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["reprezentująca",{"_index":405,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{}}}],["require",{"_index":1347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resko",{"_index":864,"title":{},"body":{"classes/StationList.html":{}}}],["responsive",{"_index":1177,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.current.indexes[0].value",{"_index":713,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[0].value",{"_index":709,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[1].value",{"_index":712,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[2].value",{"_index":711,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.id",{"_index":147,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result.stindexlevel.indexlevelname",{"_index":149,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result.stsourcedatadate",{"_index":151,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result[0].main.feels_like",{"_index":1192,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.humidity",{"_index":1197,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.pressure",{"_index":1195,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp",{"_index":1190,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp_max",{"_index":1194,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp_min",{"_index":1193,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].name",{"_index":1189,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resultsforecast",{"_index":1050,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartdata",{"_index":1051,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttocharttemp",{"_index":1052,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttotable",{"_index":1053,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsweather",{"_index":1054,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resulttable.date",{"_index":1198,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resulttable.maxtemp",{"_index":1199,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resulttable.mintemp",{"_index":1200,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultweather",{"_index":1091,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["retruns",{"_index":1301,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["return",{"_index":86,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["returns",{"_index":77,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["rgba(172,91,0,0.88",{"_index":1267,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rgba(74,100,107,0.8",{"_index":1259,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["right",{"_index":723,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["roczne",{"_index":1037,"title":{},"body":{"classes/TempChart.html":{}}}],["rodzaj",{"_index":1008,"title":{},"body":{"classes/StatisticType.html":{},"classes/TempChart.html":{}}}],["rodzaju",{"_index":1007,"title":{},"body":{"classes/StatisticType.html":{}}}],["root",{"_index":203,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["root'},{'name",{"_index":163,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["routablecomponent",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":269,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1387,"title":{},"body":{"index.html":{}}}],["running",{"_index":1409,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":199,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/throw",{"_index":798,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/add/operator/catch",{"_index":797,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/observable",{"_index":795,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/operators",{"_index":200,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rysowania",{"_index":1084,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rysująca",{"_index":1062,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rzeszow",{"_index":968,"title":{},"body":{"classes/StationList.html":{}}}],["równie",{"_index":302,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["s",{"_index":363,"title":{},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["sacz",{"_index":984,"title":{},"body":{"classes/StationList.html":{}}}],["sandomierz",{"_index":971,"title":{},"body":{"classes/StationList.html":{}}}],["sans",{"_index":1221,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["scaffolding",{"_index":1397,"title":{},"body":{"index.html":{}}}],["scrollbar",{"_index":1270,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["selector",{"_index":62,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["serif",{"_index":1222,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["serve",{"_index":1388,"title":{},"body":{"index.html":{}}}],["server",{"_index":803,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"index.html":{}}}],["service",{"_index":75,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["service.service",{"_index":627,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["service.service.ts",{"_index":776,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["service.service.ts:21",{"_index":1294,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:25",{"_index":780,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["service.service.ts:26",{"_index":1284,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:34",{"_index":1285,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:38",{"_index":783,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["service.service.ts:55",{"_index":1290,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.ts",{"_index":346,"title":{},"body":{"classes/ChartService.html":{},"coverage.html":{}}}],["service.ts:19",{"_index":383,"title":{},"body":{"classes/ChartService.html":{}}}],["service.ts:47",{"_index":358,"title":{},"body":{"classes/ChartService.html":{}}}],["service.ts:6",{"_index":356,"title":{},"body":{"classes/ChartService.html":{}}}],["services/quality/quality",{"_index":626,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["services/weather/weather",{"_index":1120,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["servicetmp",{"_index":683,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["shadow",{"_index":1257,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["showairdata",{"_index":71,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["showcontent",{"_index":1058,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["si",{"_index":130,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"components/WeatherComponentComponent.html":{}}}],["siedlce",{"_index":904,"title":{},"body":{"classes/StationList.html":{}}}],["sile",{"_index":1022,"title":{},"body":{"classes/Statistics.html":{}}}],["size",{"_index":735,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["siły",{"_index":294,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/Statistics.html":{}}}],["skrajne",{"_index":307,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["sky",{"_index":1207,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["skąd",{"_index":137,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["składa",{"_index":483,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Station.html":{}}}],["składający",{"_index":481,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{}}}],["slubice",{"_index":887,"title":{},"body":{"classes/StationList.html":{}}}],["small",{"_index":736,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["sniezka",{"_index":948,"title":{},"body":{"classes/StationList.html":{}}}],["snowdepth",{"_index":498,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["snowfall",{"_index":499,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["solid",{"_index":730,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"index.html":{}}}],["space",{"_index":1252,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["spacing",{"_index":1226,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["spec\\.ts",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sprawd",{"_index":1184,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["sprawdzenia",{"_index":1302,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["src/.../app",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../quality",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statistic",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stats",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/air",{"_index":55,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/map/map",{"_index":1319,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/quality/quality",{"_index":614,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/stats",{"_index":1324,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/weather/weather",{"_index":1039,"title":{},"body":{"components/WeatherComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/calculated",{"_index":1014,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["src/app/models/data",{"_index":403,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"coverage.html":{}}}],["src/app/models/meteo",{"_index":478,"title":{},"body":{"classes/MeteoStatsData.html":{},"coverage.html":{}}}],["src/app/models/station.ts",{"_index":804,"title":{},"body":{"classes/Station.html":{},"coverage.html":{}}}],["src/app/models/station.ts:11",{"_index":811,"title":{},"body":{"classes/Station.html":{}}}],["src/app/models/station.ts:5",{"_index":809,"title":{},"body":{"classes/Station.html":{}}}],["src/app/models/statistic",{"_index":991,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/statistics.ts",{"_index":281,"title":{},"body":{"classes/CalculatedProps.html":{},"coverage.html":{}}}],["src/app/models/statistics.ts:10",{"_index":329,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:14",{"_index":330,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:18",{"_index":320,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:22",{"_index":326,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:26",{"_index":317,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/stats",{"_index":527,"title":{},"body":{"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["src/app/models/temp",{"_index":1026,"title":{},"body":{"classes/TempChart.html":{},"coverage.html":{}}}],["src/app/services/air",{"_index":82,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["src/app/services/meteo",{"_index":344,"title":{},"body":{"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"classes/StationList.html":{},"coverage.html":{}}}],["src/app/services/quality/quality",{"_index":6,"title":{},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["src/app/services/weather/weather",{"_index":439,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1344,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1345,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacj",{"_index":556,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{}}}],["stacji",{"_index":538,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{}}}],["stan",{"_index":96,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["stanem",{"_index":1093,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["stanie",{"_index":1296,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["stanu",{"_index":1044,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["stany",{"_index":148,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["start",{"_index":604,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["started",{"_index":1378,"title":{"index.html":{}},"body":{}}],["stat/chart",{"_index":345,"title":{},"body":{"classes/ChartService.html":{},"coverage.html":{}}}],["stat/meteo",{"_index":532,"title":{},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["stat/station",{"_index":813,"title":{},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["statements",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["station",{"_index":549,"title":{"classes/Station.html":{}},"body":{"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"coverage.html":{}}}],["station(12100",{"_index":829,"title":{},"body":{"classes/StationList.html":{}}}],["station(12105",{"_index":831,"title":{},"body":{"classes/StationList.html":{}}}],["station(12106",{"_index":833,"title":{},"body":{"classes/StationList.html":{}}}],["station(12115",{"_index":836,"title":{},"body":{"classes/StationList.html":{}}}],["station(12120",{"_index":838,"title":{},"body":{"classes/StationList.html":{}}}],["station(12125",{"_index":840,"title":{},"body":{"classes/StationList.html":{}}}],["station(12135",{"_index":842,"title":{},"body":{"classes/StationList.html":{}}}],["station(12145",{"_index":844,"title":{},"body":{"classes/StationList.html":{}}}],["station(12150",{"_index":846,"title":{},"body":{"classes/StationList.html":{}}}],["station(12155",{"_index":849,"title":{},"body":{"classes/StationList.html":{}}}],["station(12160",{"_index":851,"title":{},"body":{"classes/StationList.html":{}}}],["station(12185",{"_index":853,"title":{},"body":{"classes/StationList.html":{}}}],["station(12195",{"_index":855,"title":{},"body":{"classes/StationList.html":{}}}],["station(12200",{"_index":857,"title":{},"body":{"classes/StationList.html":{}}}],["station(12205",{"_index":859,"title":{},"body":{"classes/StationList.html":{}}}],["station(12206",{"_index":861,"title":{},"body":{"classes/StationList.html":{}}}],["station(12210",{"_index":863,"title":{},"body":{"classes/StationList.html":{}}}],["station(12215",{"_index":865,"title":{},"body":{"classes/StationList.html":{}}}],["station(12230",{"_index":867,"title":{},"body":{"classes/StationList.html":{}}}],["station(12235",{"_index":869,"title":{},"body":{"classes/StationList.html":{}}}],["station(12250",{"_index":871,"title":{},"body":{"classes/StationList.html":{}}}],["station(12270",{"_index":873,"title":{},"body":{"classes/StationList.html":{}}}],["station(12272",{"_index":875,"title":{},"body":{"classes/StationList.html":{}}}],["station(12280",{"_index":877,"title":{},"body":{"classes/StationList.html":{}}}],["station(12285",{"_index":879,"title":{},"body":{"classes/StationList.html":{}}}],["station(12295",{"_index":881,"title":{},"body":{"classes/StationList.html":{}}}],["station(12300",{"_index":883,"title":{},"body":{"classes/StationList.html":{}}}],["station(12310",{"_index":886,"title":{},"body":{"classes/StationList.html":{}}}],["station(12330",{"_index":888,"title":{},"body":{"classes/StationList.html":{}}}],["station(12345",{"_index":890,"title":{},"body":{"classes/StationList.html":{}}}],["station(12360",{"_index":892,"title":{},"body":{"classes/StationList.html":{}}}],["station(12365",{"_index":894,"title":{},"body":{"classes/StationList.html":{}}}],["station(12372",{"_index":896,"title":{},"body":{"classes/StationList.html":{}}}],["station(12374",{"_index":899,"title":{},"body":{"classes/StationList.html":{}}}],["station(12375",{"_index":901,"title":{},"body":{"classes/StationList.html":{}}}],["station(12385",{"_index":903,"title":{},"body":{"classes/StationList.html":{}}}],["station(12399",{"_index":905,"title":{},"body":{"classes/StationList.html":{}}}],["station(12400",{"_index":907,"title":{},"body":{"classes/StationList.html":{}}}],["station(12415",{"_index":910,"title":{},"body":{"classes/StationList.html":{}}}],["station(12418",{"_index":913,"title":{},"body":{"classes/StationList.html":{}}}],["station(12424",{"_index":916,"title":{},"body":{"classes/StationList.html":{}}}],["station(12425",{"_index":920,"title":{},"body":{"classes/StationList.html":{}}}],["station(12435",{"_index":921,"title":{},"body":{"classes/StationList.html":{}}}],["station(12455",{"_index":923,"title":{},"body":{"classes/StationList.html":{}}}],["station(12465",{"_index":925,"title":{},"body":{"classes/StationList.html":{}}}],["station(12469",{"_index":927,"title":{},"body":{"classes/StationList.html":{}}}],["station(12471",{"_index":929,"title":{},"body":{"classes/StationList.html":{}}}],["station(12485",{"_index":931,"title":{},"body":{"classes/StationList.html":{}}}],["station(12488",{"_index":933,"title":{},"body":{"classes/StationList.html":{}}}],["station(12490",{"_index":935,"title":{},"body":{"classes/StationList.html":{}}}],["station(12491",{"_index":938,"title":{},"body":{"classes/StationList.html":{}}}],["station(12495",{"_index":940,"title":{},"body":{"classes/StationList.html":{}}}],["station(12497",{"_index":943,"title":{},"body":{"classes/StationList.html":{}}}],["station(12500",{"_index":945,"title":{},"body":{"classes/StationList.html":{}}}],["station(12510",{"_index":947,"title":{},"body":{"classes/StationList.html":{}}}],["station(12520",{"_index":949,"title":{},"body":{"classes/StationList.html":{}}}],["station(12530",{"_index":951,"title":{},"body":{"classes/StationList.html":{}}}],["station(12540",{"_index":953,"title":{},"body":{"classes/StationList.html":{}}}],["station(12550",{"_index":955,"title":{},"body":{"classes/StationList.html":{}}}],["station(12555",{"_index":957,"title":{},"body":{"classes/StationList.html":{}}}],["station(12560",{"_index":959,"title":{},"body":{"classes/StationList.html":{}}}],["station(12566",{"_index":961,"title":{},"body":{"classes/StationList.html":{}}}],["station(12570",{"_index":963,"title":{},"body":{"classes/StationList.html":{}}}],["station(12575",{"_index":965,"title":{},"body":{"classes/StationList.html":{}}}],["station(12580",{"_index":967,"title":{},"body":{"classes/StationList.html":{}}}],["station(12585",{"_index":970,"title":{},"body":{"classes/StationList.html":{}}}],["station(12595",{"_index":972,"title":{},"body":{"classes/StationList.html":{}}}],["station(12600",{"_index":974,"title":{},"body":{"classes/StationList.html":{}}}],["station(12625",{"_index":977,"title":{},"body":{"classes/StationList.html":{}}}],["station(12650",{"_index":979,"title":{},"body":{"classes/StationList.html":{}}}],["station(12660",{"_index":982,"title":{},"body":{"classes/StationList.html":{}}}],["station(12690",{"_index":985,"title":{},"body":{"classes/StationList.html":{}}}],["station(12695",{"_index":987,"title":{},"body":{"classes/StationList.html":{}}}],["stationlist",{"_index":812,"title":{"classes/StationList.html":{}},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["statistics",{"_index":274,"title":{"classes/Statistics.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Statistics.html":{},"coverage.html":{}}}],["statistictype",{"_index":990,"title":{"classes/StatisticType.html":{}},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statistictypelist",{"_index":1010,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stats",{"_index":168,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["stats.service.ts",{"_index":533,"title":{},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["stats.service.ts:20",{"_index":568,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:24",{"_index":587,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:29",{"_index":590,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:33",{"_index":547,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:47",{"_index":552,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:57",{"_index":563,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.ts",{"_index":1015,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["stats.ts:15",{"_index":1024,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:16",{"_index":1023,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:17",{"_index":1025,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:6",{"_index":1018,"title":{},"body":{"classes/Statistics.html":{}}}],["statscomponentcomponent",{"_index":167,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["statstype",{"_index":544,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["statystyk",{"_index":540,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["statystyki",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{}}}],["statysyk",{"_index":817,"title":{},"body":{"classes/StationList.html":{}}}],["stindexlevel",{"_index":176,"title":{},"body":{"classes/AirQualityData.html":{}}}],["stored",{"_index":1403,"title":{},"body":{"index.html":{}}}],["string",{"_index":177,"title":{},"body":{"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["strona",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["stronie",{"_index":620,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["strzyzewice",{"_index":915,"title":{},"body":{"classes/StationList.html":{}}}],["stsourcedatadate",{"_index":178,"title":{},"body":{"classes/AirQualityData.html":{}}}],["stworzony",{"_index":595,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["styles",{"_index":52,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["styleurls",{"_index":65,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((data",{"_index":1148,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["subscribe((records",{"_index":699,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((results",{"_index":88,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["sulejow",{"_index":928,"title":{},"body":{"classes/StationList.html":{}}}],["summer",{"_index":1208,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["sunshine",{"_index":500,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["support",{"_index":1424,"title":{},"body":{"modules.html":{}}}],["suwalki",{"_index":856,"title":{},"body":{"classes/StationList.html":{}}}],["sv8wb734fm470c2hys8atebfrng5lzu9",{"_index":208,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["svg",{"_index":1425,"title":{},"body":{"modules.html":{}}}],["swibno",{"_index":850,"title":{},"body":{"classes/StationList.html":{}}}],["swinoujscie",{"_index":858,"title":{},"body":{"classes/StationList.html":{}}}],["switch",{"_index":608,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["swoim",{"_index":1185,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["szczecin",{"_index":860,"title":{},"body":{"classes/StationList.html":{}}}],["szczecinek",{"_index":866,"title":{},"body":{"classes/StationList.html":{}}}],["szczytowy",{"_index":492,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["szeroko",{"_index":788,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["szerokości",{"_index":635,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["sztywno",{"_index":107,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["t",{"_index":117,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tabel",{"_index":1100,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["tabela",{"_index":132,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tabeli",{"_index":1076,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["table",{"_index":152,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["tak",{"_index":128,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["target",{"_index":671,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["tarnow",{"_index":966,"title":{},"body":{"classes/StationList.html":{}}}],["te",{"_index":306,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["tego",{"_index":113,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["temp",{"_index":420,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["tempchart",{"_index":385,"title":{"classes/TempChart.html":{}},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/TempChart.html":{},"coverage.html":{}}}],["tempchart(element.pressure",{"_index":402,"title":{},"body":{"classes/ChartService.html":{}}}],["tempchart(element.temperature",{"_index":395,"title":{},"body":{"classes/ChartService.html":{}}}],["tempchart(element.temperature_mean",{"_index":399,"title":{},"body":{"classes/ChartService.html":{}}}],["tempcharts",{"_index":427,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["tempdata",{"_index":431,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["tempdata.period",{"_index":435,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["tempdata.value",{"_index":434,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["temperatur",{"_index":384,"title":{},"body":{"classes/ChartService.html":{},"components/WeatherComponentComponent.html":{}}}],["temperatura",{"_index":454,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["temperature",{"_index":501,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["temperaturemax",{"_index":502,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["temperaturemin",{"_index":503,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["temperatury",{"_index":291,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{}}}],["temperatury/ciśniania/siły",{"_index":319,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["temperaturze",{"_index":1019,"title":{},"body":{"classes/Statistics.html":{}}}],["temperaturę/ciśnianie/si",{"_index":321,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["template",{"_index":51,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["templateurl",{"_index":67,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["templist",{"_index":391,"title":{},"body":{"classes/ChartService.html":{}}}],["templist.push(new",{"_index":394,"title":{},"body":{"classes/ChartService.html":{}}}],["terespol",{"_index":906,"title":{},"body":{"classes/StationList.html":{}}}],["term",{"_index":1086,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["test",{"_index":1412,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1411,"title":{},"body":{"index.html":{}}}],["text",{"_index":767,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["this.apibaseurl",{"_index":602,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.apikey",{"_index":606,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.apiurl",{"_index":601,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.average",{"_index":341,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.datapoints.push(new",{"_index":432,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["this.errormsg",{"_index":1144,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.gettype(type",{"_index":600,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.http",{"_index":204,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["this.map",{"_index":669,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["this.map.on('click",{"_index":686,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["this.max",{"_index":337,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.maxdate",{"_index":339,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.min",{"_index":333,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.minadate",{"_index":335,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.results",{"_index":90,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["this.resultsforecasttochartdata",{"_index":1161,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.resultsforecasttocharttemp",{"_index":1162,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.resultsforecasttotable.push({date",{"_index":1156,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.resultsweather.push(records",{"_index":1142,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.service",{"_index":684,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["this.service.getairdata",{"_index":87,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["this.stationlist",{"_index":826,"title":{},"body":{"classes/StationList.html":{}}}],["this.stationlist.push(new",{"_index":827,"title":{},"body":{"classes/StationList.html":{}}}],["this.stationlist.sort",{"_index":989,"title":{},"body":{"classes/StationList.html":{}}}],["this.statstype",{"_index":603,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["title",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["top",{"_index":720,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["torun",{"_index":872,"title":{},"body":{"classes/StationList.html":{}}}],["transform",{"_index":1223,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["transition",{"_index":1243,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["transparent",{"_index":760,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["tree",{"_index":54,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["true",{"_index":658,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["trzy",{"_index":994,"title":{},"body":{"classes/StatisticType.html":{}}}],["tslib",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["tutaj",{"_index":124,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tworzenie",{"_index":9,"title":{},"body":{"classes/AirData.html":{}}}],["tym",{"_index":715,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["typ",{"_index":555,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{}}}],["type",{"_index":29,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":992,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.ts:12",{"_index":1009,"title":{},"body":{"classes/StatisticType.html":{}}}],["type.ts:6",{"_index":1005,"title":{},"body":{"classes/StatisticType.html":{}}}],["typie",{"_index":368,"title":{},"body":{"classes/ChartService.html":{},"injectables/MeteoStatsService.html":{}}}],["typy",{"_index":995,"title":{},"body":{"classes/StatisticType.html":{}}}],["umożliwiający",{"_index":591,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["unit",{"_index":1410,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":779,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["uppercase",{"_index":1224,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["url(https://www.setaswall.com/wp",{"_index":1205,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["use",{"_index":1399,"title":{},"body":{"index.html":{}}}],["ustalonych",{"_index":594,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["ustka",{"_index":837,"title":{},"body":{"classes/StationList.html":{}}}],["util",{"_index":1123,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["uzyska",{"_index":1299,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["uzyskanych",{"_index":1079,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["użytkownik",{"_index":133,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["użytkownika",{"_index":566,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["użytkownila",{"_index":1048,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["value",{"_index":193,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":159,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["variable",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1434,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1384,"title":{},"body":{"index.html":{}}}],["via",{"_index":1414,"title":{},"body":{"index.html":{}}}],["view",{"_index":675,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["viewencapsulation",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.none",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":465,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["void",{"_index":78,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["w",{"_index":101,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["wallpaper",{"_index":1209,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["warszawa",{"_index":897,"title":{},"body":{"classes/StationList.html":{}}}],["warto",{"_index":290,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{}}}],["wartości",{"_index":299,"title":{},"body":{"classes/CalculatedProps.html":{},"injectables/MeteoStatsService.html":{},"classes/TempChart.html":{}}}],["wczyta",{"_index":116,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["weather",{"_index":170,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["weathercomponentcomponent",{"_index":169,"title":{"components/WeatherComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["weatherdata",{"_index":460,"title":{"classes/WeatherData.html":{}},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["weatherdata(item.name",{"_index":1305,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["weatherserviceservice",{"_index":1059,"title":{"injectables/WeatherServiceService.html":{}},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["white",{"_index":753,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wiatru",{"_index":295,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["width",{"_index":153,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["wielun",{"_index":924,"title":{},"body":{"classes/StationList.html":{}}}],["wierch",{"_index":981,"title":{},"body":{"classes/StationList.html":{}}}],["wilgotno",{"_index":474,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["winddirection",{"_index":504,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["windpower",{"_index":1016,"title":{},"body":{"classes/Statistics.html":{}}}],["windspeed",{"_index":505,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["wlkp",{"_index":885,"title":{},"body":{"classes/StationList.html":{}}}],["wlodawa",{"_index":944,"title":{},"body":{"classes/StationList.html":{}}}],["wpisze",{"_index":141,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wprowadzaniu",{"_index":1112,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wprowadzeniu",{"_index":92,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wprowadzono",{"_index":1146,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wroclaw",{"_index":917,"title":{},"body":{"classes/StationList.html":{}}}],["współrzędna",{"_index":633,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["wszystkich",{"_index":121,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["wtedy",{"_index":142,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wybierz",{"_index":828,"title":{},"body":{"classes/StationList.html":{}}}],["wyboru",{"_index":816,"title":{},"body":{"classes/StationList.html":{},"classes/StatisticType.html":{}}}],["wybra",{"_index":136,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wybran",{"_index":1289,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wybrane",{"_index":641,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["wybranego",{"_index":1047,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wybranej",{"_index":1288,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wybranych",{"_index":565,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["wybranym",{"_index":785,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["wyciąga",{"_index":1286,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wyciągamy",{"_index":1081,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyciągnięte",{"_index":1117,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykorzystujemy",{"_index":1083,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykorzystywane",{"_index":574,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["wykres",{"_index":1063,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykresach",{"_index":423,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/TempChart.html":{}}}],["wykresem",{"_index":1107,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykresie",{"_index":429,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/TempChart.html":{}}}],["wykresu",{"_index":1085,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykresów",{"_index":352,"title":{},"body":{"classes/ChartService.html":{}}}],["wykrsach",{"_index":408,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["wynik",{"_index":144,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wyniki",{"_index":648,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["wyskoczy",{"_index":145,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["występuje",{"_index":580,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["wyznaczająca",{"_index":284,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["wyznaczaniu",{"_index":576,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{}}}],["wyświetenia",{"_index":349,"title":{},"body":{"classes/ChartService.html":{}}}],["wyświetlający",{"_index":640,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["wyświetlamy",{"_index":1096,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlane",{"_index":1125,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlanie",{"_index":1042,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlanych",{"_index":1029,"title":{},"body":{"classes/TempChart.html":{}}}],["wyświetlenia",{"_index":380,"title":{},"body":{"classes/ChartService.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["wyświetli",{"_index":131,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wyświetlon",{"_index":622,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wyświetlone",{"_index":422,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"components/WeatherComponentComponent.html":{}}}],["wyświetlony",{"_index":1035,"title":{},"body":{"classes/TempChart.html":{}}}],["x",{"_index":410,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["y",{"_index":411,"title":{},"body":{"classes/DataPoints.html":{},"classes/DataPointsList.html":{}}}],["z",{"_index":36,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["za",{"_index":1124,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["zadeklarowane",{"_index":108,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["zakopane",{"_index":978,"title":{},"body":{"classes/StationList.html":{}}}],["zakładki",{"_index":1041,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["zamosc",{"_index":973,"title":{},"body":{"classes/StationList.html":{}}}],["zamykania",{"_index":644,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["zanotowan",{"_index":322,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zanotowania",{"_index":327,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zanotowano",{"_index":305,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zawierająca",{"_index":588,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["zegrze",{"_index":834,"title":{},"body":{"classes/StationList.html":{}}}],["zgłosze",{"_index":584,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["zielona",{"_index":908,"title":{},"body":{"classes/StationList.html":{}}}],["zmeinna",{"_index":1021,"title":{},"body":{"classes/Statistics.html":{}}}],["zmienn",{"_index":1075,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["zmienna",{"_index":31,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/TempChart.html":{},"components/WeatherComponentComponent.html":{}}}],["zmienne",{"_index":1074,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["zmiennej",{"_index":365,"title":{},"body":{"classes/ChartService.html":{}}}],["znak",{"_index":456,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["znale",{"_index":139,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["zone.js",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/QualityComponentComponent.html":{},"overview.html":{}}}],["zosta",{"_index":378,"title":{},"body":{"classes/ChartService.html":{},"classes/DataPoints.html":{},"classes/DataPointsList.html":{},"classes/TempChart.html":{}}}],["zostaj",{"_index":301,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zostan",{"_index":998,"title":{},"body":{"classes/StatisticType.html":{}}}],["zwraca",{"_index":95,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AirData.html":{"url":"classes/AirData.html","title":"class - AirData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quality/quality-module.ts\n        \n\n            \n                Description\n            \n            \n                Tworzenie obieku przechowującego dane o jakości powietrza.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(current: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quality/quality-module.ts:4\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy 'AirData' \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Zmienna, która bedzie przechowywać dane o jakości powietrza \npobrane z api dla aktualnie klikniętego miejsca.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-module.ts:11\n                            \n                        \n\n                \n                    \n                        Zmienna, która bedzie przechowywać dane o jakości powietrza \npobrane z api dla aktualnie klikniętego miejsca.\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AirData {\n    /**\n     * Konstruktor klasy 'AirData' \n     * @param current Zmienna, która bedzie przechowywać dane o jakości powietrza \n     * pobrane z api dla aktualnie klikniętego miejsca.\n     */\n    constructor(\n        public current: any\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AirQualityComponentComponent.html":{"url":"components/AirQualityComponentComponent.html","title":"component - AirQualityComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AirQualityComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/air-quality-component/air-quality-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-air-quality-component\n            \n\n            \n                styleUrls\n                ./air-quality-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./air-quality-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                results\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AirQualityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/air-quality-component/air-quality-component.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AirQualityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAirData\n                        \n                        \n                    \n                \n            \n            \n                \nshowAirData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AirQualityService } from 'src/app/services/air-quality/air-quality.service';\n\n@Component({\n  selector: 'app-air-quality-component',\n  templateUrl: './air-quality-component.component.html',\n  styleUrls: ['./air-quality-component.component.css']\n})\nexport class AirQualityComponentComponent implements OnInit {\n\n  results: any;\n\n  constructor(private service: AirQualityService) { }\n\n  ngOnInit() {\n  }\n\n  showAirData() {\n    return this.service.getAirData()\n      .subscribe((results: any) => {\n        console.log(results);\n        this.results = results;\n      })\n  }\n}\n\n    \n\n    \n            Po wprowadzeniu id aplikacja zwraca stan powietrza i datę pomiaru dla odpowiedniego miejsca pomiarowego w polsce\n    Póki co aplikacja ma na sztywno zadeklarowane id pomiaru jako 52\n    Jeśli chcemy z tego korzystać to mogę wczytać tę całą dużą listę wszystkich miejsc pomiarowych tutaj gdzieś obok. Ona tak ładnie się wyświetli jako tabela i użytkownik będzie mógł wybrać skąd chce znaleźć pomiar. Wpisze wtedy odpowiedni ID i wynik wyskoczy\n\n\n    \n    Pobierz dane!\n\n\n\n\n    \n        \n            ID\n            {{result.id}}\n        \n\n        \n            Stany powietrza\n            {{result.stIndexLevel.indexLevelName}}\n        \n\n        \n            Data pomiaru\n            {{result.stSourceDataDate}}\n        \n    \n\n    \n\n    \n                \n                    ./air-quality-component.component.css\n                \n                .table{\n    width: 20%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Po wprowadzeniu id aplikacja zwraca stan powietrza i datę pomiaru dla odpowiedniego miejsca pomiarowego w polsce    Póki co aplikacja ma na sztywno zadeklarowane id pomiaru jako 52    Jeśli chcemy z tego korzystać to mogę wczytać tę całą dużą listę wszystkich miejsc pomiarowych tutaj gdzieś obok. Ona tak ładnie się wyświetli jako tabela i użytkownik będzie mógł wybrać skąd chce znaleźć pomiar. Wpisze wtedy odpowiedni ID i wynik wyskoczy        Pobierz dane!                        ID            {{result.id}}                            Stany powietrza            {{result.stIndexLevel.indexLevelName}}                            Data pomiaru            {{result.stSourceDataDate}}            '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AirQualityComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AirQualityData.html":{"url":"classes/AirQualityData.html","title":"class - AirQualityData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirQualityData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/air-quality/air-quality-module.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, stIndexLevel: string, stSourceDataDate: Data)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/air-quality/air-quality-module.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stIndexLevel\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stSourceDataDate\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Data } from '@angular/router';\n\nexport class AirQualityData {\n    constructor(\n        private id: number,\n        private stIndexLevel: string,\n        private stSourceDataDate: Data\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AirQualityService.html":{"url":"injectables/AirQualityService.html","title":"injectable - AirQualityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AirQualityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/air-quality/air-quality.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/air-quality/air-quality.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAirData\n                        \n                        \n                    \n                \n            \n            \n                \ngetAirData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/air-quality/air-quality.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://api.gios.gov.pl/pjp-api/rest/aqindex/getIndex/52'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/air-quality/air-quality.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { pipe, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AirQualityData } from './air-quality-module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AirQualityService {\n\n  constructor(private http: HttpClient) { }\n\n  api = 'http://api.gios.gov.pl/pjp-api/rest/aqindex/getIndex/52';\n\n  getAirData(): Observable {\n    return this.http\n      .get(this.api)        // airly kay:  SV8Wb734fM470C2HYs8atebFRNg5LzU9\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new AirQualityData(item.id, item.stIndexLevel, item.stSourceDataDate)))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'meteo-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'meteo-app';\n}\n\n    \n\n    \n        \n    Strona główna\n    Statystyki\n    Mapa\n    Jakość powietrza -->\n    Jakość powietrza\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Strona główna    Statystyki    Mapa    Jakość powietrza -->    Jakość powietrza'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAirQualityComponentComponent\n\nAirQualityComponentComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAirQualityComponentComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponentComponent\n\nMapComponentComponent\n\nAppModule -->\n\nMapComponentComponent->AppModule\n\n\n\n\n\nQualityComponentComponent\n\nQualityComponentComponent\n\nAppModule -->\n\nQualityComponentComponent->AppModule\n\n\n\n\n\nStatsComponentComponent\n\nStatsComponentComponent\n\nAppModule -->\n\nStatsComponentComponent->AppModule\n\n\n\n\n\nWeatherComponentComponent\n\nWeatherComponentComponent\n\nAppModule -->\n\nWeatherComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AirQualityComponentComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            MapComponentComponent\n                        \n                        \n                            QualityComponentComponent\n                        \n                        \n                            StatsComponentComponent\n                        \n                        \n                            WeatherComponentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { WeatherComponentComponent } from './components/weather/weather-component.component';\nimport { MapComponentComponent } from './components/map/map-component.component';\nimport { StatsComponentComponent } from './components/stats-component/stats-component.component';\nimport { QualityComponentComponent } from './components/quality/quality-component.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatExpansionModule, MatInputModule } from '@angular/material';\nimport { AirQualityComponentComponent } from './components/air-quality-component/air-quality-component.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponentComponent,\n    MapComponentComponent,\n    StatsComponentComponent,\n    QualityComponentComponent,\n    AirQualityComponentComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatInputModule\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StatsComponentComponent } from './components/stats-component/stats-component.component';\nimport { WeatherComponentComponent } from './components/weather/weather-component.component';\nimport { MapComponentComponent } from './components/map/map-component.component';\nimport { QualityComponentComponent } from './components/quality/quality-component.component';\n// import { AirQualityComponentComponent } from './components/air-quality-component/air-quality-component.component';\n\n\nconst routes: Routes = [\n  { path: 'mainpage', component: WeatherComponentComponent },\n  { path: 'statistics', component: StatsComponentComponent },\n  { path: 'map', component: MapComponentComponent },\n  { path: 'quality', component: QualityComponentComponent },\n  // { path: 'air-quality', component: AirQualityComponentComponent },\n  { path: '', redirectTo: '/mainpage', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routableComponent = [\n  WeatherComponentComponent, StatsComponentComponent\n];\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CalculatedProps.html":{"url":"classes/CalculatedProps.html","title":"class - CalculatedProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CalculatedProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistics.ts\n        \n\n            \n                Description\n            \n            \n                Klasa osatecznie wyznaczająca statystyki, czyli minimalną, maksymalną oraz średnią wartość temperatury, ciśnienia lub siły wiatru.\nW przypadku minimalnych i maksymalnych wartości, podane zostają również daty, kiedy zanotowano te skrajne wartości.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                average\n                            \n                            \n                                    Public\n                                max\n                            \n                            \n                                    Public\n                                maxDate\n                            \n                            \n                                    Public\n                                min\n                            \n                            \n                                    Public\n                                minaDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: number, minaDate: Date, max: number, maxDate: Date, averageSum: number, dataCount: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistics.ts:26\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy CalculatedProps\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        minaDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        averageSum\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            average\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:26\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca średnią wartość temperatury/ciśniania/siły wiatru.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:18\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca maksymalną temperaturę/ciśnianie/siłę wiatru zanotowaną w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:22\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca datę zanotowania największej temperatury/ciśniania/siły wiatru w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:10\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca minimalną temperaturę/ciśnianie/siłę wiatru zanotowaną w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minaDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:14\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca datę zanotowania najmniejszej temperatury/ciśniania/siły wiatru w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CalculatedProps {\n\n    /**\n     * Zmienna przechowująca minimalną temperaturę/ciśnianie/siłę wiatru zanotowaną w danym przedziale czasowym.\n     */\n     public min: string;\n     /**\n      * Zmienna przechowująca datę zanotowania najmniejszej temperatury/ciśniania/siły wiatru w danym przedziale czasowym.\n      */\n     public minaDate: string;\n     /**\n      * Zmienna przechowująca maksymalną temperaturę/ciśnianie/siłę wiatru zanotowaną w danym przedziale czasowym.\n      */\n     public max: string;\n     /**\n      * Zmienna przechowująca datę zanotowania największej temperatury/ciśniania/siły wiatru w danym przedziale czasowym.\n      */\n     public maxDate: string;\n     /**\n      * Zmienna przechowująca średnią wartość temperatury/ciśniania/siły wiatru.\n      */\n    public average: string;\n\n    /**\n     * Konstruktor klasy CalculatedProps\n     * @param min\n     * @param minaDate \n     * @param max \n     * @param maxDate \n     * @param averageSum \n     * @param dataCount \n     */\n    constructor(min: number, minaDate: Date, max: number, maxDate: Date, averageSum: number, dataCount: number\n    ) {\n        if (dataCount > 0) {\n            this.min = min.toString();\n            this.minaDate = minaDate.toString();\n            this.max = max.toString();\n            this.maxDate = maxDate.toString();\n            this.average = (averageSum / dataCount).toFixed(2).toString();\n        } else {\n            this.min = '-';\n            this.minaDate = '-';\n            this.max = '-';\n            this.maxDate = '-';\n            this.average = '-';\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChartService.html":{"url":"classes/ChartService.html","title":"class - ChartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/meteo-stat/chart-service.ts\n        \n\n            \n                Description\n            \n            \n                Klasa przygotowująca dane pobrne z API do wyświetenia ich w postci wykresów kolumnowych.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                CalculatePressureData\n                            \n                            \n                                    Public\n                                CalculateTemperatureData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/meteo-stat/chart-service.ts:6\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy ChartService().\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            CalculatePressureData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    CalculatePressureData(type: string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/chart-service.ts:47\n                \n            \n\n\n            \n                \n                    Funkcja przygotowująca dnane prezentujące ciśnienie pobrane z API. \nDane są przechowywane w zmiennej klasy DataPointsList.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca informacje o typie danych, 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca dane, któe mają zostać przygotowane do wyświetlenia.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            CalculateTemperatureData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    CalculateTemperatureData(type: string, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/chart-service.ts:19\n                \n            \n\n\n            \n                \n                    Funkcja przygotowująca dnane prezentujące temperaturę powietrza pobrane z API. \nDane są przechowywane w zmiennej klasy DataPointsList.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca informacje o typie danych, 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca dane, któe mają zostać przygotowane do wyświetlenia.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TempChart } from '../../models/temp-chart';\nimport { DataPoints, DataPointsList } from '../../models/data-points';\n/**\n * Klasa przygotowująca dane pobrne z API do wyświetenia ich w postci wykresów kolumnowych.\n */\nexport class ChartService {\n    /**\n     * Konstruktor klasy ChartService().\n     */\n    constructor() {\n\n    }\n    /**\n     * Funkcja przygotowująca dnane prezentujące temperaturę powietrza pobrane z API. \n     * Dane są przechowywane w zmiennej klasy DataPointsList.\n     * @param type zmienna przechowująca informacje o typie danych, 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n     * @param data zmienna przechowująca dane, któe mają zostać przygotowane do wyświetlenia.\n     */\n    public CalculateTemperatureData(type: string, data): Array {\n        /**\n         * \n         */\n        const tempList = new Array();\n        for (const element of data) {\n            if (type === '1') {\n                if (element.temperature !== null) {\n                    tempList.push(new TempChart(element.temperature, element.time));\n                }\n            } else if (type === '2') {\n                if (element.temperature !== null) {\n                    tempList.push(new TempChart(element.temperature, element.date));\n                }\n            } else if (type === '3') {\n                if (element.temperature_mean !== null) {\n                    tempList.push(new TempChart(element.temperature_mean, element.month));\n                }\n            }\n        }\n        return new DataPointsList(tempList).dataPoints;\n    }\n    /**\n     * Funkcja przygotowująca dnane prezentujące ciśnienie pobrane z API. \n     * Dane są przechowywane w zmiennej klasy DataPointsList.\n     * @param type zmienna przechowująca informacje o typie danych, 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n     * @param data zmienna przechowująca dane, któe mają zostać przygotowane do wyświetlenia.\n     */\n    public CalculatePressureData(type: string, data): Array {\n        const tempList = new Array();\n        for (const element of data) {\n            if (type === '1') {\n                tempList.push(new TempChart(element.pressure, element.time));\n            } else if (type === '2') {\n                tempList.push(new TempChart(element.pressure, element.date));\n            } else if (type === '3') {\n                tempList.push(new TempChart(element.pressure, element.month));\n            }\n        }\n        return new DataPointsList(tempList).dataPoints;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataPoints.html":{"url":"classes/DataPoints.html","title":"class - DataPoints","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataPoints\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/data-points.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca punkty prezentowane na wykrsach.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                label\n                            \n                            \n                                    Public\n                                x\n                            \n                            \n                                    Public\n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(x: number, y: number, label: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/data-points.ts:26\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy DataPoints\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                wartość punktu na osi poziomej\n\n                                                        \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                wartość punktu na osi pionowej\n\n                                                        \n                                                \n                                                \n                                                        label\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                podpis punktu\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/data-points.ts:33\n                            \n                        \n\n                \n                    \n                        podpis punktu\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            x\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/data-points.ts:33\n                            \n                        \n\n                \n                    \n                        wartość punktu na osi poziomej\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            y\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/data-points.ts:33\n                            \n                        \n\n                \n                    \n                        wartość punktu na osi pionowej\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TempChart } from './temp-chart';\n/**\n * Klasa przechowująca listę danych, które mają zostać wyświetlone na wykresach. \n * Dane są przechowywane w postaci listy z elementami klasy DataPoints.\n */\nexport class DataPointsList {\n    /**\n     * \n     */\n    dataPoints: Array = new Array();\n    /**\n     * Konstruktor klasy DataPointsList\n     * @param tempCharts zmienna przechowująca dane, które mają zostać przedstawione na wykresie.\n     */\n    constructor(tempCharts: Array) {\n        let i = 1;\n        for (const tempData of tempCharts) {\n            this.dataPoints.push(new DataPoints(i, tempData.value, tempData.period));\n            i++;\n        }\n    }\n}\n/**\n * Klasa reprezentująca punkty prezentowane na wykrsach.\n */\nexport class DataPoints {\n    /**\n     * Konstruktor klasy DataPoints\n     * @param x wartość punktu na osi poziomej\n     * @param y wartość punktu na osi pionowej\n     * @param label podpis punktu\n     */\n    constructor(public x: number, public y: number, public label: string) {\n\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DataPointsList.html":{"url":"classes/DataPointsList.html","title":"class - DataPointsList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DataPointsList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/data-points.ts\n        \n\n            \n                Description\n            \n            \n                Klasa przechowująca listę danych, które mają zostać wyświetlone na wykresach. \nDane są przechowywane w postaci listy z elementami klasy DataPoints.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataPoints\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tempCharts: Array)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/data-points.ts:10\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy DataPointsList\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tempCharts\n                                                  \n                                                        \n                                                                        Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca dane, które mają zostać przedstawione na wykresie.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/data-points.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TempChart } from './temp-chart';\n/**\n * Klasa przechowująca listę danych, które mają zostać wyświetlone na wykresach. \n * Dane są przechowywane w postaci listy z elementami klasy DataPoints.\n */\nexport class DataPointsList {\n    /**\n     * \n     */\n    dataPoints: Array = new Array();\n    /**\n     * Konstruktor klasy DataPointsList\n     * @param tempCharts zmienna przechowująca dane, które mają zostać przedstawione na wykresie.\n     */\n    constructor(tempCharts: Array) {\n        let i = 1;\n        for (const tempData of tempCharts) {\n            this.dataPoints.push(new DataPoints(i, tempData.value, tempData.period));\n            i++;\n        }\n    }\n}\n/**\n * Klasa reprezentująca punkty prezentowane na wykrsach.\n */\nexport class DataPoints {\n    /**\n     * Konstruktor klasy DataPoints\n     * @param x wartość punktu na osi poziomej\n     * @param y wartość punktu na osi pionowej\n     * @param label podpis punktu\n     */\n    constructor(public x: number, public y: number, public label: string) {\n\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForecastData.html":{"url":"classes/ForecastData.html","title":"class - ForecastData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForecastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-module.ts\n        \n\n            \n                Description\n            \n            \n                Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(list: [])\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-module.ts:24\n                            \n                        \n\n                \n                    \n                            Kostruktor klasy ForecastData().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                  \n                                                        \n                                                                    []\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n(czas pomiaru, temperatura max/min, znak określający pogodę) \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:31\n                            \n                        \n\n                \n                    \n                        macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n(czas pomiaru, temperatura max/min, znak określający pogodę) \n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WeatherData {\n    /**\n     * Kostruktor klasy WeatherData().\n     * @param {string} name nazwa miasta, którą podał użytkownik\n     * @param {number} visibility I don't know \n     * @param {number} main dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n     * @param {string} weather ikonka określająca pogodę w danym momencie\n     */\n    constructor(\n        public name: string,\n        public visibility: number,\n        public main: number,\n        public weather: string,\n    ) { }\n}\n\n/**\n * Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org.\n */\nexport class ForecastData {\n    /**\n     * Kostruktor klasy ForecastData().\n     * @param list macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n     * (czas pomiaru, temperatura max/min, znak określający pogodę) \n     */\n    constructor(\n        public list = [],\n    ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeteoStatsData.html":{"url":"classes/MeteoStatsData.html","title":"class - MeteoStatsData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeteoStatsData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/meteo-stats-data.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca obiekt składający się z danych pobranych z API. Klasa składa się z następujących obiektów:\ndata, temperatura, temperatura minimalna, temperatura maksymalna, opad atmosferyczny, opad śniegu, głębokość śniegu, kierunek wiatru,\nprędkość wiatru, szczytowy podmuch, nasłonecznienie oraz ciśnienie. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                peakgust\n                            \n                            \n                                    Public\n                                precipitation\n                            \n                            \n                                    Public\n                                pressure\n                            \n                            \n                                    Public\n                                snowdepth\n                            \n                            \n                                    Public\n                                snowfall\n                            \n                            \n                                    Public\n                                sunshine\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                temperatureMax\n                            \n                            \n                                    Public\n                                temperatureMin\n                            \n                            \n                                    Public\n                                winddirection\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date: Data, temperature: number, temperatureMin: number, temperatureMax: number, precipitation: number, snowfall: number, snowdepth: number, winddirection: number, windspeed: number, peakgust: number, sunshine: number, pressure: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/meteo-stats-data.ts:8\n                            \n                        \n\n                \n                    \n                            Konstruktor obiektu klasy MeteoStatData\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna określająca datę pomiaru\n\n                                                        \n                                                \n                                                \n                                                        temperature\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca temperature pobraną z API\n\n                                                        \n                                                \n                                                \n                                                        temperatureMin\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca wartość temperatury minimalnej pobraną z API\n\n                                                        \n                                                \n                                                \n                                                        temperatureMax\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca wartość temperatury maksymalnej pobraną z API\n\n                                                        \n                                                \n                                                \n                                                        precipitation\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca opad atmosferyczny pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        snowfall\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca opad śniegu pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        snowdepth\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca głębokość śniegu pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        winddirection\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca kierunek wiatru pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        windspeed\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca prędkość wiatru pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        peakgust\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca szczytowy podmuch pobrany z API\n\n                                                        \n                                                \n                                                \n                                                        sunshine\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca nasłonecznienie pobrane z API\n\n                                                        \n                                                \n                                                \n                                                        pressure\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca ciśnienie pobrane z API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:25\n                            \n                        \n\n                \n                    \n                        zmienna określająca datę pomiaru\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            peakgust\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:34\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca szczytowy podmuch pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            precipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:29\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca opad atmosferyczny pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:36\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca ciśnienie pobrane z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snowdepth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:31\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca głębokość śniegu pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snowfall\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:30\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca opad śniegu pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sunshine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:35\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca nasłonecznienie pobrane z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:26\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca temperature pobraną z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:28\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca wartość temperatury maksymalnej pobraną z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:27\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca wartość temperatury minimalnej pobraną z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            winddirection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:32\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca kierunek wiatru pobrany z API\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:33\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca prędkość wiatru pobrany z API\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Data } from '@angular/router';\n\n/**\n * Klasa reprezentująca obiekt składający się z danych pobranych z API. Klasa składa się z następujących obiektów:\n * data, temperatura, temperatura minimalna, temperatura maksymalna, opad atmosferyczny, opad śniegu, głębokość śniegu, kierunek wiatru,\n * prędkość wiatru, szczytowy podmuch, nasłonecznienie oraz ciśnienie. \n */\nexport class MeteoStatsData {\n     /**\n     * Konstruktor obiektu klasy MeteoStatData\n     * @param date zmienna określająca datę pomiaru\n     * @param temperature zmienna przechowująca temperature pobraną z API\n     * @param temperatureMin zmienna przechowująca wartość temperatury minimalnej pobraną z API\n     * @param temperatureMax zmienna przechowująca wartość temperatury maksymalnej pobraną z API\n     * @param precipitation zmienna przechowująca opad atmosferyczny pobrany z API\n     * @param snowfall zmienna przechowująca opad śniegu pobrany z API\n     * @param snowdepth zmienna przechowująca głębokość śniegu pobrany z API\n     * @param winddirection zmienna przechowująca kierunek wiatru pobrany z API\n     * @param windspeed zmienna przechowująca prędkość wiatru pobrany z API\n     * @param peakgust zmienna przechowująca szczytowy podmuch pobrany z API\n     * @param sunshine zmienna przechowująca nasłonecznienie pobrane z API\n     * @param pressure zmienna przechowująca ciśnienie pobrane z API\n     */\n    constructor(\n        public date: Data,\n        public temperature: number,\n        public temperatureMin: number,\n        public temperatureMax: number,\n        public precipitation: number, // opad atmosferyczny\n        public snowfall: number,\n        public snowdepth: number,\n        public winddirection: number,\n        public windspeed: number,\n        public peakgust: number, // szczytowy podmuch\n        public sunshine: number,\n        public pressure: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeteoStatsModel.html":{"url":"classes/MeteoStatsModel.html","title":"class - MeteoStatsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeteoStatsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/stats-api-model.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca model składający się z obiektu MeteoStatsData.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MeteoStatsData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/stats-api-model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeteoStatsData } from './meteo-stats-data';\n\n/**\n * Klasa reprezentująca model składający się z obiektu MeteoStatsData.\n */\nexport class MeteoStatsModel {\n    public data: MeteoStatsData[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeteoStatsService.html":{"url":"injectables/MeteoStatsService.html","title":"injectable - MeteoStatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeteoStatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/meteo-stat/meteo-stats.service.ts\n        \n\n            \n                Description\n            \n            \n                Klasa łącząca się z API meteostat oraz pobierająca dane z danej stacji w podanym przedziale czasowym o podanym typie statystyk:\n1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiBaseUrl\n                            \n                            \n                                apiKey\n                            \n                            \n                                apiURL\n                            \n                            \n                                statsType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatsData\n                            \n                            \n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/meteo-stat/meteo-stats.service.ts:33\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy MeteoStatsService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatsData(type, station, dateFrom, dateTo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:47\n                \n            \n\n\n            \n                \n                    Funkcja łącząca się z API, pobierająca dane o określonych parametrach.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna określająca typ statystyk.\n\n                                    \n                                \n                                \n                                    station\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca stację, z którą mamy się połączyć przez API.\n\n                                    \n                                \n                                \n                                    dateFrom\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca datę od której chcemy pobrać dane.\n\n                                    \n                                \n                                \n                                    dateTo\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna przechowująca datę do której chcemy pobrać dane.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \ngetType(type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:57\n                \n            \n\n\n            \n                \n                    Funkcja pobierająca informację o typie statystyk wybranych przez użytkownika.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zmienna określająca typ statystyk: 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.meteostat.net/v1/history/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:20\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca bazowy adres API, z którego pobierane będą dane historyczne \nwykorzystywane przy wyznaczaniu statystyk.\nAPI meteostat.net jest darmowe, występuje jedynie limit 200 zgłoszeń na godzine.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '&key=XWfTSLqc'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:24\n                            \n                        \n\n                \n                    \n                        zmienna zawierająca klucz API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:29\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca adres API umożliwiający pobranie konkretnie ustalonych wartości. \nStworzony adres odwołuje się do danych o określonym typie statystyk, konkretnej stacji, w danym przedziale czasowym.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statsType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:33\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca typ statystyk: 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { pipe, Observable } from 'rxjs';\nimport { MeteoStatsModel } from '../../models/stats-api-model';\n\n/**\n * Klasa łącząca się z API meteostat oraz pobierająca dane z danej stacji w podanym przedziale czasowym o podanym typie statystyk:\n * 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MeteoStatsService {\n  /**\n   * zmienna przechowująca bazowy adres API, z którego pobierane będą dane historyczne \n   * wykorzystywane przy wyznaczaniu statystyk.\n   * API meteostat.net jest darmowe, występuje jedynie limit 200 zgłoszeń na godzine.\n   */\n  apiBaseUrl = 'https://api.meteostat.net/v1/history/';\n  /**\n   * zmienna zawierająca klucz API\n   */\n  apiKey = '&key=XWfTSLqc';\n  /**\n   * zmienna przechowująca adres API umożliwiający pobranie konkretnie ustalonych wartości. \n   * Stworzony adres odwołuje się do danych o określonym typie statystyk, konkretnej stacji, w danym przedziale czasowym.\n   */\n  apiURL: string;\n    /**\n   * zmienna przechowująca typ statystyk: 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n   */\n  statsType: string;\n  /**\n   * Konstruktor klasy MeteoStatsService\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Funkcja łącząca się z API, pobierająca dane o określonych parametrach.\n   * @param type zmienna określająca typ statystyk.\n   * @param station zmienna przechowująca stację, z którą mamy się połączyć przez API.\n   * @param dateFrom zmienna przechowująca datę od której chcemy pobrać dane.\n   * @param dateTo zmienna przechowująca datę do której chcemy pobrać dane.\n   */\n  getStatsData(type, station, dateFrom, dateTo): Observable {\n    this.getType(type);\n    this.apiURL = this.apiBaseUrl + this.statsType + '?station=' + station + '&start=' + dateFrom + '&end=' + dateTo + this.apiKey;\n    return this.http\n      .get(this.apiURL);\n  }\n  /**\n   * Funkcja pobierająca informację o typie statystyk wybranych przez użytkownika.\n   * @param type zmienna określająca typ statystyk: 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne.\n   */\n  getType(type) {\n    switch (type) {\n      case '1': this.statsType = 'hourly'; break;\n      case '2': this.statsType = 'daily'; break;\n      case '3': this.statsType = 'monthly'; break;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QualityComponentComponent.html":{"url":"components/QualityComponentComponent.html","title":"component - QualityComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QualityComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/quality/quality-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quality-component\n            \n\n            \n                styleUrls\n                ./quality-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./quality-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                            \n                                    Public\n                                results\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: QualityServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/quality/quality-component.component.ts:55\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy 'QualityComponentComponent'.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QualityServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quality/quality-component.component.ts:66\n                \n            \n\n\n            \n                \n                    Inicjowanie wyświetlenia mapy na stronie.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/quality/quality-component.component.ts:51\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca mapę wyświetloną na stronie.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/quality/quality-component.component.ts:55\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca odpowiedź z API Airly.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\nimport { QualityServiceService } from '../../services/quality/quality-service.service';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { AirData } from '../../services/quality/quality-module';\n// import { QualityServiceService } from 'src/app/services/quality/quality-service.service';\n\n/**\n * @ignore\n */\ndeclare var ol: any;\n/**\n * @ignore\n */\ndeclare var $: any;\n/**\n * Współrzędna odpowiadająca szerokości geograficznej.\n */\nvar latitude: any;\n/**\n * Współrzędna odpowiadająca długości geograficznej.\n */\nvar longitude: any;\n/**\n * Obiekt wyświetlający wybrane informacje o jakości powietrza z API Airly.\n */\nvar popupContainer: any;\n/**\n * Przycisk zamykania popupa\n */\nvar popupCloser: any;\n/**\n * Obiekt interpretujący wyniki w postaci obrazu (chmurki).\n */\nvar cloudContainer: any;\n\n\n@Component({\n  selector: 'app-quality-component',\n  templateUrl: './quality-component.component.html',\n  styleUrls: ['./quality-component.component.css']\n})\n\n\nexport class QualityComponentComponent implements OnInit {\n\n  /**\n   * Zmienna przechowująca mapę wyświetloną na stronie.\n   */\n  private map;\n/**\n   * Zmienna przechowująca odpowiedź z API Airly.\n   */\n  public results: any;\n    /**\n   * Konstruktor klasy 'QualityComponentComponent'.\n   * @param http\n   * @param service\n   */\n  constructor(private http: HttpClient, private service: QualityServiceService) { }\n\n    /**\n   * Inicjowanie wyświetlenia mapy na stronie.\n   */\n  ngOnInit() {\n    popupContainer = document.getElementById('popup');\n    popupCloser = document.getElementById('popup-closer');\n    cloudContainer = document.getElementById('cloudPopup');\n\n    var overlay = new ol.Overlay({\n    element: popupContainer,\n    autoPan: true,\n    autoPanAnimation: {\n      duration: 250\n    }\n  });\n  var cloudOverlay = new ol.Overlay({\n    element: cloudContainer,\n    autoPan: true,\n    autoPanAnimation: {\n      duration: 250\n    }\n  });\n  \n  popupCloser.onclick = function() {\n    overlay.setPosition(undefined);\n    cloudOverlay.setPosition(undefined);\n    popupCloser.blur();\n    return false;\n  };\n\n    this.map = new ol.Map({\n      target: 'map',\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM()\n        })\n      ],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([23.1688403, 53.1324886]),\n        zoom: 8,\n      }),\n      overlays: [overlay,cloudOverlay]\n    });\n\n    var serviceTmp = this.service;\n    var qualityComponent = this;\n\n    this.map.on('click', function (args) {\n      console.log(args.coordinate);\n      var lonlat = ol.proj.transform(args.coordinate, 'EPSG:3857', 'EPSG:4326');\n      console.log(lonlat);\n      longitude = lonlat[0];\n      latitude = lonlat[1];      \n      (`lat: ${latitude} long: ${longitude}`);\n      serviceTmp\n        .getAirData(latitude, longitude)\n        .subscribe((records: any) => {\n          console.log(records);\n          qualityComponent.results = records;\n        });\n        overlay.setPosition(args.coordinate);\n        cloudOverlay.setPosition(args.coordinate);\n    });\n  }\n}\n\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        \n          \n            \n              PM1\n              PM10\n              PM25\n              CAQI\n            \n          \n          \n            {{result.current.values[0].value}} µg/m3 \n            {{result.current.values[2].value}} µg/m3\n            {{result.current.values[1].value}} µg/m3\n            {{result.current.indexes[0].value}} µg/m3\n          \n        \n        \n          Brak danych w tym miejscu :(\n        \n      \n    \n    \n      \n        \n        \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./quality-component.component.css\n                \n                .map-container {\n    position: absolute;\n    top: 10%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n.map-frame {\n    border: 2px solid black;\n    height: 100%;\n}\n\n.table{\n    font-size: small;\n    table-layout: auto;\n    width: 320px;\n    height: 90px;\n}\n\n#map {\n    height: 100%;\n}\n#marker {\n    width: 20px;\n    height: 20px;\n    border: 1px solid #088;\n    border-radius: 10px;\n    background-color: #0FF;\n    opacity: 0.5;\n  }\n\n  .ol-popup {\n    position: absolute;\n    background-color: white;\n    border-radius: 10px;\n    border: 1px solid #cccccc;\n    bottom: 12px;\n    left: -50px;\n    width: 320px;\n    height: 110px;\n  }\n  .ol-popup:after, .ol-popup:before {\n    top: 100%;\n    border: solid transparent;\n    content: \" \";\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  .ol-popup:after {\n    border-top-color: white;\n    border-width: 10px;\n    left: 48px;\n    margin-left: -10px;\n  }\n  .ol-popup:before {\n    border-top-color: #cccccc;\n    border-width: 11px;\n    left: 48px;\n    margin-left: -11px;\n  }\n  .ol-popup-closer {\n    text-decoration: none;\n    position: absolute;\n    top: 2px;\n    right: 8px;\n  }\n  .ol-popup-closer:after {\n    content: \"✖\";\n  }\n\n  #cloudPopup {\n    min-width: 60px;\n    min-height: 35px;\n    max-width: 60px;\n    max-height: 35px;\n    margin-left: -30px;\n    margin-top: 0px;\n  }\n\n  .cloudImage {\n    width: 100%;\n    height: 100%;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  PM1              PM10              PM25              CAQI                                            {{result.current.values[0].value}} µg/m3             {{result.current.values[2].value}} µg/m3            {{result.current.values[1].value}} µg/m3            {{result.current.indexes[0].value}} µg/m3                                    Brak danych w tym miejscu :(                                                                          '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QualityComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QualityServiceService.html":{"url":"injectables/QualityServiceService.html","title":"injectable - QualityServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QualityServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quality/quality-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Pobieranie danych z api airly.eu.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quality/quality-service.service.ts:25\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy 'QualityServiceService'.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAirData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAirData(lat: string, lng: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quality/quality-service.service.ts:38\n                \n            \n\n\n            \n                \n                    Funkcja pobiera dane z api o jakości powietrza w wybranym miejscu opisanym poprzez szerokość i długość geograficzną.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        szerokość geograficzna\n\n                                    \n                                \n                                \n                                    lng\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        długość geograficzna\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://airapi.airly.eu/v2/measurements/nearest?indexType=AIRLY_CAQI&maxDistanceKM=100'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-service.service.ts:25\n                            \n                        \n\n                \n                    \n                        Adres api, z którego pobieramy dane o jakości powietrza. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-service.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { AirData } from './quality-module';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n/**\n * Pobieranie danych z api airly.eu.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QualityServiceService {\n\n  /**\n   * @ignore\n   */\n  list: any;\n  /**\n   * Adres api, z którego pobieramy dane o jakości powietrza. \n   */\n  apiUrl = 'https://airapi.airly.eu/v2/measurements/nearest?indexType=AIRLY_CAQI&maxDistanceKM=100';  unsubscribe: any;\n\n  /**\n   * Konstruktor klasy 'QualityServiceService'.\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Funkcja pobiera dane z api o jakości powietrza w wybranym miejscu opisanym poprzez szerokość i długość geograficzną.\n   * @param lat szerokość geograficzna\n   * @param lng długość geograficzna\n   */\n  public getAirData(lat: string, lng: string): Observable {\n    return this.http\n      .get(`${this.apiUrl}&lat=${lat}&lng=${lng}&apikey=SV8Wb734fM470C2HYs8atebFRNg5LzU9`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new AirData(item.current))),\n        catchError((error: HttpErrorResponse) => {\n          return Observable.throw(error.message || \"Server Message\");\n        })\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Station.html":{"url":"classes/Station.html","title":"class - Station","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Station\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/station.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca miejscowość, dla której mogą być policzone statystyki.\nObiekt składa się z id oraz nazwy miejscowości. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/station.ts:5\n                            \n                        \n\n                \n                    \n                            Konstruktor obiektu klasy Station\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                numer id\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                nazwa miejscowości\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/station.ts:11\n                            \n                        \n\n                \n                    \n                        numer id\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/station.ts:11\n                            \n                        \n\n                \n                    \n                        nazwa miejscowości\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Station {\n    /**\n     * Konstruktor obiektu klasy Station\n     * @param id numer id\n     * @param name nazwa miejscowości\n     */\n    constructor(public id: number, public name: string) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StationList.html":{"url":"classes/StationList.html","title":"class - StationList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StationList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/meteo-stat/station-list.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca listę miejscowości możliwych do wyboru przy wyznaczaniu statysyk. \nLista przechowuje id miejscowości i jej nazwę.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/meteo-stat/station-list.ts:11\n                            \n                        \n\n                \n                    \n                            Konstruktor kalsy StationList\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/station-list.ts:11\n                            \n                        \n\n                \n                    \n                        Lista przechowująca id oraz nazwę stacji pogodowej.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Station } from '../../models/station';\n\n/**\n * Klasa reprezentująca listę miejscowości możliwych do wyboru przy wyznaczaniu statysyk. \n * Lista przechowuje id miejscowości i jej nazwę.\n */\nexport class StationList {\n    /**\n     * Lista przechowująca id oraz nazwę stacji pogodowej.\n     */\n    stationList: Array;\n    /**\n     * Konstruktor kalsy StationList\n     */\n    constructor() {\n        this.stationList = new Array();\n        // this.stationList.push(new Station(-1, '--- Wybierz stację ---'));\n        this.stationList.push(new Station(12100, 'Kolobrzeg                  '));\n        this.stationList.push(new Station(12105, 'Koszalin                   '));\n        this.stationList.push(new Station(12106, 'Koszalin Zegrze Pom.       '));\n        this.stationList.push(new Station(12115, 'Ustka                      '));\n        this.stationList.push(new Station(12120, 'Leba                       '));\n        this.stationList.push(new Station(12125, 'Lebork                     '));\n        this.stationList.push(new Station(12135, 'Hel                        '));\n        this.stationList.push(new Station(12145, 'Gdynia                     '));\n        this.stationList.push(new Station(12150, 'Gdansk-Rebiechowo          '));\n        this.stationList.push(new Station(12155, 'Gdansk-Swibno              '));\n        this.stationList.push(new Station(12160, 'Elblag                     '));\n        this.stationList.push(new Station(12185, 'Ketrzyn                    '));\n        this.stationList.push(new Station(12195, 'Suwalki                    '));\n        this.stationList.push(new Station(12200, 'Swinoujscie                '));\n        this.stationList.push(new Station(12205, 'Szczecin                   '));\n        this.stationList.push(new Station(12206, 'Goleniow                   '));\n        this.stationList.push(new Station(12210, 'Resko                      '));\n        this.stationList.push(new Station(12215, 'Szczecinek                 '));\n        this.stationList.push(new Station(12230, 'Pila                       '));\n        this.stationList.push(new Station(12235, 'Chojnice                   '));\n        this.stationList.push(new Station(12250, 'Torun                      '));\n        this.stationList.push(new Station(12270, 'Mlawa                      '));\n        this.stationList.push(new Station(12272, 'Olsztyn                    '));\n        this.stationList.push(new Station(12280, 'Mikolajki                  '));\n        this.stationList.push(new Station(12285, 'Ostroleka                  '));\n        this.stationList.push(new Station(12295, 'Bialystok                  '));\n        this.stationList.push(new Station(12300, 'Gorzow Wlkp                '));\n        this.stationList.push(new Station(12310, 'Slubice                    '));\n        this.stationList.push(new Station(12330, 'Poznan                     '));\n        this.stationList.push(new Station(12345, 'Kolo                       '));\n        this.stationList.push(new Station(12360, 'Plock                      '));\n        this.stationList.push(new Station(12365, 'Brwinow                    '));\n        this.stationList.push(new Station(12372, 'Warszawa Bielany           '));\n        this.stationList.push(new Station(12374, 'Legionowo                  '));\n        this.stationList.push(new Station(12375, 'Warszawa-Okecie            '));\n        this.stationList.push(new Station(12385, 'Siedlce                    '));\n        this.stationList.push(new Station(12399, 'Terespol                   '));\n        this.stationList.push(new Station(12400, 'Zielona Gora               '));\n        this.stationList.push(new Station(12415, 'Legnica Bartoszow          '));\n        this.stationList.push(new Station(12418, 'Leszno-Strzyzewice         '));\n        this.stationList.push(new Station(12424, 'Wroclaw Copernicus Airport '));\n        this.stationList.push(new Station(12425, 'Wroclaw I                  '));\n        this.stationList.push(new Station(12435, 'Kalisz                     '));\n        this.stationList.push(new Station(12455, 'Wielun                     '));\n        this.stationList.push(new Station(12465, 'Lodz                       '));\n        this.stationList.push(new Station(12469, 'Sulejow                    '));\n        this.stationList.push(new Station(12471, 'Belsk                      '));\n        this.stationList.push(new Station(12485, 'Radom                      '));\n        this.stationList.push(new Station(12488, 'Kozienice                  '));\n        this.stationList.push(new Station(12490, 'Deblin / Irena             '));\n        this.stationList.push(new Station(12491, 'Pulawy                     '));\n        this.stationList.push(new Station(12495, 'Lublin Radawiec            '));\n        this.stationList.push(new Station(12497, 'Wlodawa                    '));\n        this.stationList.push(new Station(12500, 'Jelenia Gora               '));\n        this.stationList.push(new Station(12510, 'Sniezka                    '));\n        this.stationList.push(new Station(12520, 'Klodzko                    '));\n        this.stationList.push(new Station(12530, 'Opole                      '));\n        this.stationList.push(new Station(12540, 'Raciborz                   '));\n        this.stationList.push(new Station(12550, 'Czestochowa                '));\n        this.stationList.push(new Station(12555, 'Pyrzowice                  '));\n        this.stationList.push(new Station(12560, 'Katowice                   '));\n        this.stationList.push(new Station(12566, 'Krakow                     '));\n        this.stationList.push(new Station(12570, 'Kielce                     '));\n        this.stationList.push(new Station(12575, 'Tarnow                     '));\n        this.stationList.push(new Station(12580, 'Rzeszow-Jasionka           '));\n        this.stationList.push(new Station(12585, 'Sandomierz                 '));\n        this.stationList.push(new Station(12595, 'Zamosc                     '));\n        this.stationList.push(new Station(12600, 'Bielsko-Biala              '));\n        this.stationList.push(new Station(12625, 'Zakopane                   '));\n        this.stationList.push(new Station(12650, 'Kasprowy Wierch            '));\n        this.stationList.push(new Station(12660, 'Nowy Sacz                  '));\n        this.stationList.push(new Station(12690, 'Lesko                      '));\n        this.stationList.push(new Station(12695, 'Przemysl                   '));\n        // this.stationList.sort();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatisticType.html":{"url":"classes/StatisticType.html","title":"class - StatisticType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatisticType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistic-type.ts\n        \n\n            \n                Description\n            \n            \n                Klasa określająca typ statystyk możliwych do wyboru przez użytkownika.\nDostępne są trzy typy: statystyki godzinowe, statystyki dzienne oraz statystyki miesięczne.\nTyp statystyk określa jakie dane zostaną pobrane z API, czyli czy pobrane pomiary będą w odtępach godzinowych, dniowych czy miesięcznych.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistic-type.ts:6\n                            \n                        \n\n                \n                    \n                            Konstruktor obiektu klasy StatisticType\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                indywidualy numer rodzaju statystyk\n\n                                                        \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna określająca rodzaj statystyk\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistic-type.ts:12\n                            \n                        \n\n                \n                    \n                        indywidualy numer rodzaju statystyk\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistic-type.ts:12\n                            \n                        \n\n                \n                    \n                        zmienna określająca rodzaj statystyk\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StatisticType {\n    /**\n     * Konstruktor obiektu klasy StatisticType\n     * @param id indywidualy numer rodzaju statystyk\n     * @param name zmienna określająca rodzaj statystyk\n     */\n    constructor(public id: number, public name: string) {\n\n    }\n}\n\n\nexport const StatisticTypeList: StatisticType[] =\n    [\n        {\n            id: 1,\n            name: 'Godzinowy'\n        },\n        {\n            id: 2,\n            name: 'Dzienny'\n        },\n        {\n            id: 3,\n            name: 'Miesięczny'\n        }\n    ];\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/calculated-stats.ts\n        \n\n            \n                Description\n            \n            \n                Klasa przechowująca policzone statystyki temperatury, ciśnienia oraz siły wiatru.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pressure\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windPower\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(temperature: CalculatedProps, pressure: CalculatedProps, windPower: CalculatedProps)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/calculated-stats.ts:6\n                            \n                        \n\n                \n                    \n                            Konstruktor obiektu klasy Statistics\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        temperature\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca informacje o temperaturze.\n\n                                                        \n                                                \n                                                \n                                                        pressure\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna przechowująca informacje o ciśnienu.\n\n                                                        \n                                                \n                                                \n                                                        windPower\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmeinna przechowująca informacje o sile wiatru.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:16\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca informacje o ciśnienu.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:15\n                            \n                        \n\n                \n                    \n                        zmienna przechowująca informacje o temperaturze.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windPower\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:17\n                            \n                        \n\n                \n                    \n                        zmeinna przechowująca informacje o sile wiatru.\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CalculatedProps } from './statistics';\n\n/**\n * Klasa przechowująca policzone statystyki temperatury, ciśnienia oraz siły wiatru.\n */\nexport class Statistics {\n\n /**\n   * Konstruktor obiektu klasy Statistics\n   * @param temperature zmienna przechowująca informacje o temperaturze.\n   * @param pressure zmienna przechowująca informacje o ciśnienu.\n   * @param windPower zmeinna przechowująca informacje o sile wiatru.\n   */\n    constructor(\n        public temperature: CalculatedProps,\n        public pressure: CalculatedProps,\n        public windPower: CalculatedProps) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TempChart.html":{"url":"classes/TempChart.html","title":"class - TempChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TempChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/temp-chart.ts\n        \n\n            \n                Description\n            \n            \n                Obiekt przechowujący dane z API oraz typ danych wyświetlanych na wykresach.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                period\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value: number, period: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/temp-chart.ts:4\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy TempChart()  \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna z wartością parametru, który ma zostać wyświetlony na wykresie (ciśnienie, temperatura).\n\n                                                        \n                                                \n                                                \n                                                        period\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                zmienna określająca rodzaj prezentowanych danych, czy są to dane dzienne, miesięczne czy roczne.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            period\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/temp-chart.ts:10\n                            \n                        \n\n                \n                    \n                        zmienna określająca rodzaj prezentowanych danych, czy są to dane dzienne, miesięczne czy roczne.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/temp-chart.ts:10\n                            \n                        \n\n                \n                    \n                        zmienna z wartością parametru, który ma zostać wyświetlony na wykresie (ciśnienie, temperatura).\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TempChart {\n    /**\n     * Konstruktor klasy TempChart()  \n     * @param value zmienna z wartością parametru, który ma zostać wyświetlony na wykresie (ciśnienie, temperatura).\n     * @param period zmienna określająca rodzaj prezentowanych danych, czy są to dane dzienne, miesięczne czy roczne.\n     */\n    constructor(public value: number, public period: string) {\n\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponentComponent.html":{"url":"components/WeatherComponentComponent.html","title":"component - WeatherComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/weather/weather-component.component.ts\n\n\n    \n        Description\n    \n    \n        Komponent zakładki Strona główna.\nWyświetlanie aktualnego stanu pogody oraz prognozy pogody na najbliższe pięć dni dla wybranego przez użytkownila miasta.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-component\n            \n\n            \n                styleUrls\n                ./weather-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./weather-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                resultsForecast\n                            \n                            \n                                    Public\n                                resultsForecastToChartData\n                            \n                            \n                                    Public\n                                resultsForecastToChartTemp\n                            \n                            \n                                    Public\n                                resultsForecastToTable\n                            \n                            \n                                    Public\n                                resultsWeather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawChart\n                            \n                            \n                                getForecastService\n                            \n                            \n                                getWeatherService\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showContent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: WeatherServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/weather/weather-component.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WeatherServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawChart\n                        \n                        \n                    \n                \n            \n            \n                \ndrawChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:151\n                \n            \n\n\n            \n                \n                    Funkcja rysująca wykres prognozy pogody. Odwołujemy się do niej w funkcji 'getForecastService()'.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastService\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastService(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:105\n                \n            \n\n\n            \n                \n                    Funkcja inicująca pobieranie danych z prognozą pogody oraz przypisanie ich pod odpowiednie zmienne.\nPrzypisanie pod zmienną 'resultsForecast' danych do wyświetlenia\nw tabeli z prognozą pogody na najbliższe dni.\nDane pobierane są dzięki funkcji 'getWeatherForecastData()' .\nZ danych uzyskanych przez funkcję 'getWeatherForecastData()' wyciągamy i przypisujemy pod odpowiednie zmienne czas pomiaru,\ntemperaturę, temperaturę minimalną i temperaturę maksymalną. Zmienne wykorzystujemy do rysowania wykresu,\nfunkcja 'drawChart()'\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejsowość, dla której pobieramy dane.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherService\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherService(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:80\n                \n            \n\n\n            \n                \n                    Przypisanie pod zmienną 'resultWeather' danych, które będą wyświetlone w tabeli z aktualnym stanem pogody\nw miejscowości podanej przez użytkownika. Dane pobierane są dzięki funkcji 'getWeatherData()'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość, dla której wyświetlamy dane\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showContent\n                        \n                        \n                    \n                \n            \n            \n                \nshowContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:68\n                \n            \n\n\n            \n                \n                    Funkcja inicjue wyświetlanie się tabel z danymi oraz wykresu poprzez nacisnięcie przycisku \"Pokaż dane!\"\nOdwołuje się do tabel z pogodą w danym momencie '.content__table', z prognozą pogody '.content__chart' oraz wykresem '.chart-area'.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMsg\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:35\n                            \n                        \n\n                \n                    \n                        Informacja o błędzie przy wprowadzaniu przez użytkownika nazwy miasta.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:31\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca dane z prognozą pogody na najbliższe dni analizowanego miasta.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:39\n                            \n                        \n\n                \n                    \n                        Przechowuje dane o czasie pomiaru, wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:43\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:47\n                            \n                        \n\n                \n                    \n                        Przechowuje dane do wyświetlenia w tabeli z prognozą pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:27\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca dane z aktualnym stanem pogody analizowanego miasta.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WeatherServiceService } from '../../services/weather/weather-service.service';\nimport { Chart } from 'chart.js';\nimport { WeatherData } from '../../services/weather/weather-module';\nimport { isNull } from 'util';\ndeclare var $: any;\n\n/**\n * Komponent zakładki Strona główna.\n\n * Wyświetlanie aktualnego stanu pogody oraz prognozy pogody na najbliższe pięć dni dla wybranego przez użytkownila miasta.\n */\n@Component({\n  selector: 'app-weather-component',\n  templateUrl: './weather-component.component.html',\n  styleUrls: ['./weather-component.component.css']\n})\n/**\n * Klasa odpowiadająca za informacje wyświetlane na stronie głownej aplikacji\n */\nexport class WeatherComponentComponent implements OnInit {\n\n /**\n  * Zmienna przechowująca dane z aktualnym stanem pogody analizowanego miasta.\n  */\n  public resultsWeather = [];\n   /**\n * Zmienna przechowująca dane z prognozą pogody na najbliższe dni analizowanego miasta.\n */\n  public resultsForecast: any;\n  /**\n * Informacja o błędzie przy wprowadzaniu przez użytkownika nazwy miasta.\n */\n  public errorMsg;\n  /**\n * Przechowuje dane o czasie pomiaru, wyciągnięte z danych prognozy pogody.\n */\n  public resultsForecastToChartData = [];\n  /**\n * Przechowuje temperatury wyciągnięte z danych prognozy pogody.\n */\n  public resultsForecastToChartTemp = [];\n  /**\n * Przechowuje dane do wyświetlenia w tabeli z prognozą pogody.\n */\n  public resultsForecastToTable = [];\n\n/**\n *\n * @param http\n * @param service\n */\n  constructor(private http: HttpClient, private service: WeatherServiceService) { }\n\n  ngOnInit() {\n    //podstawowe animacje dla dwóch głownych okien na pierwszej stronie aplikacji\n    $(document).ready(function () {\n      $(\".content\").animate({ opacity: 1, }, 1500);\n      $(\".nav\").fadeTo(\"slow\", 1);\n    })\n  }\n\n  /**\n   * Funkcja inicjue wyświetlanie się tabel z danymi oraz wykresu poprzez nacisnięcie przycisku \"Pokaż dane!\"\n   * Odwołuje się do tabel z pogodą w danym momencie '.content__table', z prognozą pogody '.content__chart' oraz wykresem '.chart-area'.\n   */\n  showContent() {\n    $(document).ready(function () {\n      $(\".content__table\").show();\n      $(\".content__chart\").show();\n      $(\".chart-area\").show();\n    })\n  }\n  /**\n   * Przypisanie pod zmienną 'resultWeather' danych, które będą wyświetlone w tabeli z aktualnym stanem pogody\n   * w miejscowości podanej przez użytkownika. Dane pobierane są dzięki funkcji 'getWeatherData()'.\n   * @param {string} term Parametr określający miejscowość, dla której wyświetlamy dane\n   */\n  getWeatherService(term: string) {\n    this.service\n      .getWeatherData(term)\n      .subscribe((records: any) => {\n        console.log(records);\n        this.resultsWeather.push(records);\n      },\n        error => this.errorMsg = \"Nie wprowadzono miejscowości lub wprowadzono złą nazwę!\",\n      )\n    this.errorMsg = null;\n  }\n\n    /**\n   * Funkcja inicująca pobieranie danych z prognozą pogody oraz przypisanie ich pod odpowiednie zmienne.\n   *\n   * Przypisanie pod zmienną 'resultsForecast' danych do wyświetlenia\n   * w tabeli z prognozą pogody na najbliższe dni.\n   * Dane pobierane są dzięki funkcji 'getWeatherForecastData()' .\n   *\n   * Z danych uzyskanych przez funkcję 'getWeatherForecastData()' wyciągamy i przypisujemy pod odpowiednie zmienne czas pomiaru,\n   * temperaturę, temperaturę minimalną i temperaturę maksymalną. Zmienne wykorzystujemy do rysowania wykresu,\n   * funkcja 'drawChart()'\n   * @param {string} term Parametr określający miejsowość, dla której pobieramy dane.\n   * @return\n   */\n  getForecastService(term: string) {\n    this.service\n      .getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        var maxTemp = data[0].list[0].main.temp_max;\n        var minTemp = data[0].list[0].main.temp_min;\n        var icon = data[0].list[0].weather[0].icon;\n        for (let i = 0; i  data[0].list[i+1].main.temp_min){\n              minTemp = data[0].list[i+1].main.temp_min;\n            }\n\n          }\n          else {\n            this.resultsForecastToTable.push({date: date.getDate() + \".0\" + (date.getMonth()+1), minTemp: minTemp, maxTemp: maxTemp, icon: icon});\n            maxTemp = data[0].list[i].main.temp_max;\n            minTemp = data[0].list[i].main.temp_min;\n          }\n        }\n\n        this.resultsForecastToChartData = [];\n        this.resultsForecastToChartTemp = [];\n        for (let i = 0; i  document.getElementById('cityInput');\n    console.log(city);\n    var myChart = new Chart('chart__forecast', {\n      type: 'line',\n      data: {\n        labels: this.resultsForecastToChartData, //dt_txt,\n\n        datasets: [{\n          label: 'Wartość temperatury',\n          data: this.resultsForecastToChartTemp, //main.temp_max main.temp_min\n          borderColor: '#037ffc',\n          backgroundColor:'#E8B67C',\n\n        }],\n      },\n      options: {\n        responsive: true,\n        title: {\n          display: true,\n          text: 'Prognozowana temperatura w przeciągu najbliższych 5 dni dla miejscowości ' + city.value.toUpperCase(),\n        },\n      }\n    });\n  }\n}\n    \n\n    \n        \n    \n        Sprawdź pogodę w swoim mieście\n\n    \n\n    \n        \n        Pokaż\n            dane!\n    \n\n    \n        {{errorMsg}}\n    \n\n\n\n    \n        \n\n            \n                \n                    Miasto\n                    Temperatura\n                    Temperatura Odczuwalna\n                    Temperatura Minimalna\n                    Temperatura Maksymalna\n                    Ciśnienie\n                    Wilgotność\n                    Pogoda\n                \n            \n\n            \n                {{result[0].name}}\n                {{result[0].main.temp}} C\n                {{result[0].main.feels_like}} C\n                {{result[0].main.temp_min}} C\n                {{result[0].main.temp_max}} C\n                {{result[0].main.pressure}} hPa\n                {{result[0].main.humidity}} %\n                \n                    \n                \n            \n\n        \n    \n\n    \n        \n\n            \n                \n                    Data\n                    Temperatura max/min\n                    Pogoda\n                \n            \n\n            \n                \n                    {{resultTable.date}}\n                \n                \n                    {{resultTable.maxTemp}} C / {{resultTable.minTemp}} C\n                \n                \n                    \n                \n            \n\n        \n    \n\n\n\n    \n\n\n    \n\n    \n                \n                    ./weather-component.component.css\n                \n                .navigation{\n    background-color: #ffffff;\n}\n\n.nav{\n    height: 40vh;\n    background-color: #ffffff;\n\n    background: url(https://www.setaswall.com/wp-content/uploads/2017/03/Sun-Sky-Summer-Wallpaper-2560x1600.jpg);\n    background-repeat: no-repeat;\n    background-position: center;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    opacity: 0;\n}\n\nh2{\n    color: #ffffff;\n    font-family: \"Lato\", sans-serif;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n}\n\n.nav__buttons__input{\n    border-radius: 100px;\n    padding: 25px 60px;\n    height: 15px;\n    text-align: center;\n    text-transform: uppercase;\n\n    animation-name: moveToBottom;\n    animation-duration: 1s;\n    animation-delay: 0.5s;\n    animation-fill-mode: backwards;\n}\n\n.nav__buttons__input:hover{\n    background: linear-gradient(#626d329f,#6e5f33af);\n    color: #ffffff;\n    transition-duration: 2s;\n}\n\n.nav__buttons__btn{\n    border-radius: 100px;\n    padding: 7px 10px;\n    margin-left: 5px;\n\n    animation-name: moveToLeft;\n    animation-duration: 1.5s;\n    animation-delay: 1.2s;\n    animation-fill-mode: backwards;\n}\n\n.nav__buttons__btn:hover{\n    background: linear-gradient(#626d329f,#6e5f33af);\n    color: #ffffff;\n    transition-duration: 0.5s;\n}\n\n.content{\n    opacity: 0;\n    margin-top: 15px;\n    display: flex;\n    justify-content: space-around;\n}\n\n.content__table{\n    display: none;\n    text-align: center;\n    width: 50%;\n    height:0px;\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 0.2;\n}\n\n.content__chart{\n    display: block;\n    text-align: center;\n    width: 40%;\n    background-color: #ffffff;\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 0.4s;\n    animation-fill-mode: backwards;\n}\n\n.table{\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n\n.nav__error{\n    font-size: 22px;\n    color: #ffffff;\n    text-shadow: 1px 1px 6px rgba(172,91,0,0.88);\n}\n\n.content__my-custom-scrollbar {\n    position: relative;\n    height: 300px;\n    overflow: auto;\n}\n\n.chart-area{\n    width: 50%;\n    height: auto;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10px;\n    display: none;\n    background-color: #ffffff;\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 1s;\n    animation-fill-mode: backwards;\n\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sprawdź pogodę w swoim mieście                        Pokaż            dane!                {{errorMsg}}                                                                Miasto                    Temperatura                    Temperatura Odczuwalna                    Temperatura Minimalna                    Temperatura Maksymalna                    Ciśnienie                    Wilgotność                    Pogoda                                                        {{result[0].name}}                {{result[0].main.temp}} C                {{result[0].main.feels_like}} C                {{result[0].main.temp_min}} C                {{result[0].main.temp_max}} C                {{result[0].main.pressure}} hPa                {{result[0].main.humidity}} %                                                                                                                                        Data                    Temperatura max/min                    Pogoda                                                                            {{resultTable.date}}                                                    {{resultTable.maxTemp}} C / {{resultTable.minTemp}} C                                                                                                '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherData.html":{"url":"classes/WeatherData.html","title":"class - WeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-module.ts\n        \n\n            \n                Description\n            \n            \n                Klasa opisująca dane pogodowe w danym momencie odczytane\nz api openweathermap.org.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                main\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                visibility\n                            \n                            \n                                    Public\n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, visibility: number, main: number, weather: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-module.ts:5\n                            \n                        \n\n                \n                    \n                            Kostruktor klasy WeatherData().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                nazwa miasta, którą podał użytkownik\n\n                                                        \n                                                \n                                                \n                                                        visibility\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                I don't know \n\n                                                        \n                                                \n                                                \n                                                        main\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n\n                                                        \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ikonka określająca pogodę w danym momencie\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            main\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:16\n                            \n                        \n\n                \n                    \n                        dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:14\n                            \n                        \n\n                \n                    \n                        nazwa miasta, którą podał użytkownik\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:15\n                            \n                        \n\n                \n                    \n                        I don't know \n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:17\n                            \n                        \n\n                \n                    \n                        ikonka określająca pogodę w danym momencie\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WeatherData {\n    /**\n     * Kostruktor klasy WeatherData().\n     * @param {string} name nazwa miasta, którą podał użytkownik\n     * @param {number} visibility I don't know \n     * @param {number} main dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n     * @param {string} weather ikonka określająca pogodę w danym momencie\n     */\n    constructor(\n        public name: string,\n        public visibility: number,\n        public main: number,\n        public weather: string,\n    ) { }\n}\n\n/**\n * Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org.\n */\nexport class ForecastData {\n    /**\n     * Kostruktor klasy ForecastData().\n     * @param list macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n     * (czas pomiaru, temperatura max/min, znak określający pogodę) \n     */\n    constructor(\n        public list = [],\n    ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherServiceService.html":{"url":"injectables/WeatherServiceService.html","title":"injectable - WeatherServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Klasa z funkcjami pobierającymi dane z api openweathermap.org.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                            \n                                apiUrlForecast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                getWeatherForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-service.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherData(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather-service.service.ts:34\n                \n            \n\n\n            \n                \n                    Funkcja wyciąga aktualne dane pogodowe z api openweathermap.org dla wybranej przez użytkownika miejscowości.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość wybraną przez użytkownika.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherForecastData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherForecastData(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather-service.service.ts:55\n                \n            \n\n\n            \n                \n                    Funkcja pobiera z api openwethermap.org dane opisujące prognozę pogody na najbliższe pięć dni.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość wybraną przez użytkownika.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://api.openweathermap.org/data/2.5/weather?q=\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-service.service.ts:21\n                            \n                        \n\n                \n                    \n                        Adres api, z którgo pobierane są dane o aktualnym stanie pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrlForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://api.openweathermap.org/data/2.5/forecast?q=\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-service.service.ts:26\n                            \n                        \n\n                \n                    \n                        Adres api, z którgo pobierane są dane z prognozą pogody na najbliższe dni.\nZ api możemy uzyskać prognozę pogody na pięć dni w przód.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { WeatherData, ForecastData } from './weather-module';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n/**\n * Klasa z funkcjami pobierającymi dane z api openweathermap.org.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherServiceService {\n\n  /**\n   * Adres api, z którgo pobierane są dane o aktualnym stanie pogody.\n   */\n  apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\";\n    /**\n   * Adres api, z którgo pobierane są dane z prognozą pogody na najbliższe dni.\n   * Z api możemy uzyskać prognozę pogody na pięć dni w przód.\n   */\n  apiUrlForecast = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n\n  constructor(private http: HttpClient) { }\n    /**\n   * Funkcja wyciąga aktualne dane pogodowe z api openweathermap.org dla wybranej przez użytkownika miejscowości.\n   * @param {string} term Parametr określający miejscowość wybraną przez użytkownika.\n   * @retruns  ????????\n   */\n  public getWeatherData(term: string): Observable {\n\n    // return this.http\n    //   .get(this.apiUrl)         // do sprawdzenia wszystkich endpointów\n\n    return this.http\n      .get(`${this.apiUrl}${term}&appid=9a3485ea70ca20151b5d5d7b29054807&units=metric`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new WeatherData(item.name, item.visibility, item.main, item.weather))),\n        catchError((error: HttpErrorResponse) => {\n          return Observable.throw(error.message || \"Server Message\");\n        })\n      )\n  }\n\n   /**\n    * Funkcja pobiera z api openwethermap.org dane opisujące prognozę pogody na najbliższe pięć dni.\n    * @param {string} term Parametr określający miejscowość wybraną przez użytkownika.\n    */\n  public getWeatherForecastData(term: string): Observable {\n    return this.http\n      .get(`${this.apiUrlForecast}${term}&appid=b742a4225977a8a94a092feb673aad31&units=metric`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new ForecastData(item.list)))\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routableComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/air-quality-component/air-quality-component.component.ts\n            \n            component\n            AirQualityComponentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/map/map-component.component.ts\n            \n            component\n            MapComponentComponent\n            \n                100 %\n                (43/43)\n            \n        \n        \n            \n                \n                src/app/components/map/map-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            component\n            QualityComponentComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            cloudContainer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            latitude\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            longitude\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            popupCloser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            popupContainer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/stats-component/stats-component.component.ts\n            \n            component\n            StatsComponentComponent\n            \n                78 %\n                (29/37)\n            \n        \n        \n            \n                \n                src/app/components/stats-component/stats-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/weather/weather-component.component.ts\n            \n            component\n            WeatherComponentComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/components/weather/weather-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/calculated-stats.ts\n            \n            class\n            Statistics\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/data-points.ts\n            \n            class\n            DataPoints\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/data-points.ts\n            \n            class\n            DataPointsList\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/models/meteo-stats-data.ts\n            \n            class\n            MeteoStatsData\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/models/station.ts\n            \n            class\n            Station\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/statistic-type.ts\n            \n            class\n            StatisticType\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/statistic-type.ts\n            \n            variable\n            StatisticTypeList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/statistics.ts\n            \n            class\n            CalculatedProps\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/stats-api-model.ts\n            \n            class\n            MeteoStatsModel\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/models/temp-chart.ts\n            \n            class\n            TempChart\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/air-quality/air-quality-module.ts\n            \n            class\n            AirQualityData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/air-quality/air-quality.service.ts\n            \n            injectable\n            AirQualityService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/meteo-stat/chart-service.ts\n            \n            class\n            ChartService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/meteo-stat/meteo-stats.service.ts\n            \n            injectable\n            MeteoStatsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/meteo-stat/station-list.ts\n            \n            class\n            StationList\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/quality/quality-module.ts\n            \n            class\n            AirData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/quality/quality-service.service.ts\n            \n            injectable\n            QualityServiceService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-module.ts\n            \n            class\n            ForecastData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-module.ts\n            \n            class\n            WeatherData\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-service.service.ts\n            \n            injectable\n            WeatherServiceService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.11\n        \n            @angular/cdk : ~8.2.3\n        \n            @angular/common : ~8.2.11\n        \n            @angular/compiler : ~8.2.11\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ~8.2.11\n        \n            @angular/material : ^8.2.3\n        \n            @angular/platform-browser : ~8.2.11\n        \n            @angular/platform-browser-dynamic : ~8.2.11\n        \n            @angular/router : ~8.2.11\n        \n            @ng-bootstrap/ng-bootstrap : ^6.0.2\n        \n            canvasjs : ^1.8.3\n        \n            chart.js : ^2.9.3\n        \n            hammerjs : ^2.0.8\n        \n            jquery : ^3.5.0\n        \n            leaflet : ^1.6.0\n        \n            ol : ^6.3.1\n        \n            rxjs : ~6.4.0\n        \n            rxjs-compat : ^6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeteoApp\nThis project was generated with Angular CLI version 8.3.14.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAirQualityComponentComponent\n\nAirQualityComponentComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAirQualityComponentComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponentComponent\n\nMapComponentComponent\n\nAppModule -->\n\nMapComponentComponent->AppModule\n\n\n\n\n\nQualityComponentComponent\n\nQualityComponentComponent\n\nAppModule -->\n\nQualityComponentComponent->AppModule\n\n\n\n\n\nStatsComponentComponent\n\nStatsComponentComponent\n\nAppModule -->\n\nStatsComponentComponent->AppModule\n\n\n\n\n\nWeatherComponentComponent\n\nWeatherComponentComponent\n\nAppModule -->\n\nWeatherComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../map-component.component.ts)\n                        \n                        \n                            $   (src/.../weather-component.component.ts)\n                        \n                        \n                            $   (src/.../stats-component.component.ts)\n                        \n                        \n                            cloudContainer   (src/.../quality-component.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            latitude   (src/.../quality-component.component.ts)\n                        \n                        \n                            longitude   (src/.../quality-component.component.ts)\n                        \n                        \n                            popupCloser   (src/.../quality-component.component.ts)\n                        \n                        \n                            popupContainer   (src/.../quality-component.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            routableComponent   (src/.../app-routing.module.ts)\n                        \n                        \n                            StatisticTypeList   (src/.../statistic-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/map/map-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/weather/weather-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/stats-component/stats-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/quality/quality-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloudContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Obiekt interpretujący wyniki w postaci obrazu (chmurki).\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Współrzędna odpowiadająca szerokości geograficznej.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Współrzędna odpowiadająca długości geograficznej.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupCloser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Przycisk zamykania popupa\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            popupContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Obiekt wyświetlający wybrane informacje o jakości powietrza z API Airly.\n\n                    \n                \n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routableComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  WeatherComponentComponent, StatsComponentComponent\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/models/statistic-type.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StatisticTypeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StatisticType[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        {\n            id: 1,\n            name: 'Godzinowy'\n        },\n        {\n            id: 2,\n            name: 'Dzienny'\n        },\n        {\n            id: 3,\n            name: 'Miesięczny'\n        }\n    ]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
