var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AirData.html",[0,0.125,1,1.731]],["body/classes/AirData.html",[0,0.156,1,3.16,2,1.117,3,0.367,4,0.311,5,0.311,6,3.361,7,2.164,8,1.414,9,3.821,10,3.821,11,3.821,12,1.786,13,2.582,14,3.533,15,2.848,16,0.425,17,0.696,18,1.415,19,5.756,20,0.781,21,3.821,22,0.615,23,3.821,24,3.469,25,2.739,26,0.687,27,0.035,28,0.486,29,0.465,30,0.687,31,3.006,32,5.308,33,5.308,34,5.308,35,3.361,36,1.17,37,1.288,38,2.71,39,5.308,40,5.308,41,3.807,42,3.821,43,0.367,44,1.467,45,0.021,46,0.027,47,0.021]],["title/components/AirQualityComponentComponent.html",[48,0.815,49,1.174]],["body/components/AirQualityComponentComponent.html",[0,0.103,3,0.241,4,0.204,5,0.204,12,1.162,15,2.39,16,0.279,17,0.522,20,0.404,22,0.595,26,0.451,27,0.035,28,0.543,29,0.349,30,0.451,36,0.8,38,1.853,41,2.604,43,0.241,45,0.014,46,0.02,47,0.028,48,1.381,49,1.797,50,1.853,51,1.419,52,1.419,53,1.419,54,1.419,55,4.122,56,1.943,57,3.147,58,1.279,59,2.299,60,2.704,61,1.419,62,3.1,63,2.533,64,2.533,65,2.056,66,2.704,67,2.056,68,2.299,69,1.528,70,2.965,71,4.682,72,2.505,73,2.965,74,3.63,75,2.299,76,2.078,77,1.528,78,1.419,79,2.505,80,0.725,81,0.732,82,1.587,83,1.587,84,2.505,85,1.055,86,1.159,87,2.505,88,2.505,89,2.078,90,2.505,91,3.63,92,3.63,93,3.1,94,4.682,95,3.63,96,2.604,97,3.011,98,3.282,99,3.63,100,3.63,101,1.162,102,3.63,103,3.63,104,3.011,105,3.63,106,1.68,107,3.63,108,3.63,109,3.884,110,3.63,111,3.63,112,3.63,113,3.63,114,3.63,115,3.011,116,3.63,117,3.63,118,3.63,119,3.63,120,1.853,121,3.011,122,3.63,123,3.63,124,3.63,125,3.011,126,3.63,127,3.63,128,3.63,129,3.63,130,1.853,131,3.63,132,3.63,133,2.604,134,3.63,135,3.63,136,3.63,137,3.63,138,3.63,139,3.63,140,3.63,141,3.63,142,3.63,143,3.63,144,3.63,145,3.63,146,3.63,147,3.63,148,3.63,149,3.63,150,2.299,151,3.63,152,1.587,153,1.587,154,2.505,155,1.159,156,2.056,157,2.056,158,1.419,159,2.651,160,1.419,161,2.651,162,0.962,163,1.419,164,0.878,165,0.962,166,0.878,167,0.878,168,1.055,169,0.802,170,1.055,171,1.419,172,1.419]],["title/classes/AirQualityData.html",[0,0.125,173,1.936]],["body/classes/AirQualityData.html",[0,0.177,2,1.261,3,0.414,4,0.352,5,0.352,7,2.444,20,0.842,22,0.548,26,0.776,27,0.035,28,0.548,29,0.414,30,0.776,43,0.414,45,0.024,46,0.029,47,0.024,56,1.669,80,0.861,82,3.303,83,3.303,93,2.953,150,3.687,173,3.303,174,3.095,175,2.594,176,5.605,177,1.638,178,5.605,179,4.315,180,2.733,181,3.55]],["title/injectables/AirQualityService.html",[73,1.936,182,1.174]],["body/injectables/AirQualityService.html",[0,0.153,3,0.359,4,0.305,5,0.305,16,0.416,17,0.686,20,0.604,22,0.668,26,0.673,27,0.036,28,0.475,29,0.458,30,0.673,37,1.275,43,0.359,45,0.021,46,0.027,47,0.021,56,1.197,64,1.731,69,2.009,73,3.022,77,1.574,80,1.141,81,1.093,82,3.506,83,3.506,85,1.574,86,1.731,165,1.436,173,2.368,177,1.093,182,1.832,183,2.118,184,3.102,185,3.97,186,1.731,187,2.562,188,3.74,189,2.208,190,3.74,191,3.328,192,1.436,193,1.436,194,4.772,195,4.772,196,3.74,197,1.574,198,3.022,199,2.682,200,2.682,201,1.436,202,2.368,203,2.118,204,2.368,205,3.74,206,3.74,207,3.74,208,3.74,209,2.682,210,2.682,211,1.574,212,3.74,213,3.74,214,3.74]],["title/components/AppComponent.html",[48,0.815,162,1.174]],["body/components/AppComponent.html",[0,0.148,3,0.347,4,0.295,5,0.295,15,2.791,16,0.402,17,0.672,22,0.46,27,0.035,28,0.594,29,0.347,43,0.347,45,0.02,46,0.026,47,0.02,48,1.457,49,1.389,50,2.385,51,2.049,52,2.049,53,2.049,54,2.049,56,1.495,61,2.049,62,3.384,63,2.818,64,1.674,65,2.645,67,2.645,80,0.722,81,1.057,109,4.535,155,1.674,156,2.645,157,2.645,158,2.049,159,3.096,160,2.049,161,3.096,162,2.099,163,2.049,164,1.268,165,1.389,166,1.268,167,1.268,168,1.523,169,1.158,170,1.523,171,2.049,172,2.049,177,1.057,192,1.389,193,1.389,203,2.645,215,3.001,216,4.671,217,4.671,218,5.173,219,4.671,220,5.173,221,3.875,222,3.618,223,3.618,224,4.671,225,4.671,226,2.645,227,4.671]],["title/modules/AppModule.html",[201,1.174,228,1.936]],["body/modules/AppModule.html",[0,0.138,3,0.324,4,0.275,5,0.275,27,0.036,43,0.324,45,0.019,46,0.025,47,0.019,49,1.712,56,1.427,57,2.134,63,1.559,80,1.21,81,0.985,155,1.559,162,2.343,164,1.992,166,1.992,167,1.992,169,1.82,197,1.418,201,1.293,228,3.951,229,1.908,230,2.134,231,4.146,232,3.584,233,3.699,234,2.416,235,2.795,236,2.795,237,2.795,238,2.795,239,3.219,240,2.824,241,2.795,242,2.416,243,3.369,244,3.699,245,4.459,246,2.795,247,2.416,248,3.699,249,3.369,250,3.369,251,4.459,252,2.795,253,4.459,254,2.795,255,4.589,256,2.795,257,2.795,258,2.134,259,2.795,260,2.795]],["title/modules/AppRoutingModule.html",[201,1.174,239,1.731]],["body/modules/AppRoutingModule.html",[0,0.153,3,0.359,4,0.305,5,0.305,27,0.036,43,0.458,45,0.021,46,0.027,47,0.021,48,1.524,49,1.832,56,1.772,57,2.368,64,1.731,80,1.186,81,1.093,164,1.672,165,1.436,166,1.672,167,1.842,169,1.682,180,2.368,229,2.118,234,2.682,239,2.702,244,3.102,248,3.958,254,3.102,255,4.744,256,3.102,257,3.102,258,2.368,259,3.102,260,3.102,261,2.682,262,2.682,263,3.328,264,4.772,265,3.422,266,5.848,267,4.772,268,2.368,269,3.74,270,3.74,271,3.74,272,3.74,273,2.682]],["title/classes/CalculatedProps.html",[0,0.125,274,1.936]],["body/classes/CalculatedProps.html",[0,0.122,2,0.869,3,0.285,4,0.242,5,0.242,8,0.869,16,0.331,17,0.589,18,1.625,20,0.48,22,0.696,26,0.737,27,0.036,28,0.521,29,0.526,30,0.535,31,1.683,38,1.518,43,0.285,44,2.103,45,0.017,46,0.023,47,0.017,97,2.466,101,0.952,175,2.769,177,1.717,226,2.32,274,2.595,275,2.466,276,0.952,277,2.973,278,2.973,279,2.466,280,2.466,281,2.466,282,1.683,283,2.973,284,2.466,285,2.466,286,2.973,287,2.466,288,2.973,289,2.132,290,2.973,291,2.973,292,2.973,293,4.097,294,2.973,295,2.973,296,2.973,297,2.973,298,2.973,299,2.973,300,2.973,301,2.973,302,4.689,303,5.72,304,5.72,305,5.479,306,5.72,307,4.097,308,4.545,309,5.053,310,5.479,311,4.097,312,2.973,313,2.973,314,2.973,315,4.097,316,2.973,317,2.132,318,2.973,319,2.973,320,2.973,321,2.466,322,2.973,323,1.883,324,1.683,325,4.097,326,2.973,327,4.097,328,2.973,329,4.097,330,2.973,331,4.097,332,2.973,333,4.097,334,2.973]],["title/classes/ForecastData.html",[0,0.125,335,1.731]],["body/classes/ForecastData.html",[0,0.173,2,0.91,3,0.299,4,0.254,5,0.254,7,1.764,8,1.236,12,1.649,16,0.346,17,0.608,18,1.515,20,0.775,22,0.538,25,2.72,26,0.56,27,0.036,28,0.611,29,0.406,30,0.56,36,1.059,37,1.027,43,0.406,44,2.068,45,0.017,46,0.024,47,0.017,96,3.033,98,3.042,101,1.724,106,2.493,120,2.751,133,2.233,170,1.781,175,2.384,177,1.506,192,1.195,193,1.195,276,1.354,335,2.918,336,3.042,337,3.508,338,3.042,339,3.412,340,3.412,341,3.508,342,3.508,343,3.114,344,3.114,345,3.984,346,3.984,347,3.445,348,3.042,349,3.984,350,3.445,351,3.445,352,3.6,353,3.445,354,3.984,355,3.042,356,3.695,357,3.114,358,2.159,359,2.583,360,2.233,361,1.972,362,2.583,363,3.508,364,2.583,365,2.583,366,3.508,367,2.583,368,3.033,369,3.033,370,2.233,371,1.972,372,1.972,373,1.972,374,2.233,375,2.583,376,2.233]],["title/components/MapComponentComponent.html",[48,0.815,164,1.071]],["body/components/MapComponentComponent.html",[0,0.128,3,0.197,4,0.255,5,0.167,16,0.228,17,0.449,20,0.504,22,0.539,26,0.562,27,0.036,28,0.539,29,0.3,30,0.562,36,0.451,43,0.3,45,0.03,46,0.018,47,0.018,48,1.282,49,0.786,50,1.595,51,1.159,52,1.159,53,1.159,54,1.159,56,1,58,1.045,59,2.399,60,2.399,61,1.159,62,2.922,63,2.387,64,0.947,65,1.769,66,2.399,67,1.769,68,1.978,69,1.315,70,2.684,75,2.399,76,2.591,77,1.315,78,2.145,80,0.756,81,0.598,85,0.862,86,0.947,106,1.446,130,1.045,153,1.296,155,0.947,156,1.769,157,1.769,158,1.159,159,3.054,160,1.159,161,2.4,162,0.786,163,1.159,164,1.6,165,2.222,166,0.717,167,0.717,168,0.862,169,0.655,170,0.862,171,1.159,172,1.159,181,3.047,186,0.947,187,1.961,189,1.446,192,0.786,193,0.786,197,0.862,211,1.784,240,1.978,265,1.468,289,2.717,324,2.994,377,3.273,378,3.788,379,3.124,380,2.4,381,3.124,382,2.047,383,1.468,384,2.047,385,1.698,386,1.468,387,1.468,388,2.047,389,1.468,390,1.698,391,2.047,392,2.591,393,2.047,394,2.047,395,1.045,396,1.698,397,2.047,398,1.698,399,2.047,400,2.047,401,2.047,402,1.698,403,2.047,404,2.24,405,1.045,406,1.698,407,2.047,408,2.047,409,2.047,410,2.047,411,1.698,412,1.159,413,2.047,414,1.698,415,2.047,416,2.047,417,3.124,418,3.124,419,2.047,420,3.124,421,2.591,422,2.047,423,2.047,424,2.047,425,2.047,426,2.591,427,2.047,428,2.24,429,2.591,430,2.047,431,2.047,432,2.047,433,2.047,434,2.047,435,2.047,436,2.047,437,2.047,438,2.047,439,2.047,440,2.047,441,1.698,442,1.698,443,1.698,444,1.698,445,1.698,446,1.698,447,1.698,448,1.698,449,1.698,450,1.698,451,1.698,452,1.698,453,1.698,454,1.698,455,1.698,456,1.698,457,1.698,458,1.698,459,3.124,460,1.698,461,2.717,462,1.698,463,2.047,464,2.047,465,2.047,466,2.047,467,2.047,468,2.047,469,1.698,470,3.124,471,3.124,472,3.124,473,3.04,474,3.516,475,2.047,476,2.047,477,2.717,478,2.047,479,2.717,480,2.047,481,1.698,482,2.717,483,1.698,484,1.698,485,2.047,486,2.24,487,2.591,488,2.24,489,2.591,490,1.698,491,1.468,492,1.698,493,1.698,494,1.698,495,2.24,496,1.468]],["title/classes/MeteoStatsData.html",[0,0.125,497,1.936]],["body/classes/MeteoStatsData.html",[0,0.105,2,0.747,3,0.245,4,0.208,5,0.208,8,0.747,16,0.284,17,0.53,18,1.683,20,0.594,22,0.747,26,0.46,27,0.035,28,0.325,29,0.564,30,0.46,36,1.15,37,0.894,43,0.245,45,0.014,46,0.021,47,0.014,80,0.51,130,2.413,150,3.406,168,2.493,175,2.944,180,1.619,276,1.513,282,2.086,289,3.389,308,3.92,352,3.304,371,2.333,372,2.333,373,2.333,392,3.055,395,1.88,497,2.333,498,4.913,499,2.12,500,2.333,501,3.683,502,3.055,503,3.055,504,3.683,505,3.683,506,3.683,507,5.009,508,4.318,509,4.726,510,3.683,511,3.683,512,4.318,513,4.318,514,3.683,515,5.009,516,5.009,517,4.155,518,5.009,519,5.009,520,5.009,521,4.155,522,5.009,523,5.009,524,5.009,525,5.009,526,2.556,527,2.556,528,2.556,529,2.556,530,2.556,531,2.556,532,2.556,533,2.556,534,2.556,535,2.556,536,2.556,537,2.556,538,2.556,539,2.556]],["title/classes/MeteoStatsModel.html",[0,0.125,540,1.936]],["body/classes/MeteoStatsModel.html",[0,0.176,2,1.255,3,0.412,4,0.35,5,0.35,8,1.255,16,0.478,17,0.748,18,1.491,22,0.546,27,0.035,29,0.412,36,1.146,37,1.262,43,0.412,45,0.024,46,0.029,47,0.024,80,0.857,130,2.655,150,3.681,168,1.808,221,3.562,276,1.664,497,3.77,500,3.293,502,4.313,540,3.293,541,4.313,542,3.562,543,4.313,544,5.2,545,4.294]],["title/injectables/MeteoStatsService.html",[182,1.174,546,2.193]],["body/injectables/MeteoStatsService.html",[0,0.121,3,0.285,4,0.242,5,0.242,12,0.948,13,1.371,16,0.329,17,0.588,20,0.478,22,0.713,26,0.842,27,0.036,28,0.595,29,0.549,30,0.842,36,0.901,37,0.992,43,0.285,45,0.017,46,0.023,47,0.017,69,1.721,77,1.721,78,1.678,80,1.007,81,0.866,85,1.247,86,1.371,101,0.948,130,1.513,177,1.6,182,1.569,183,1.678,186,1.371,187,2.335,189,1.892,191,2.964,192,1.569,193,1.569,197,1.247,198,1.876,199,2.125,202,1.876,203,1.678,204,1.876,226,2.65,276,0.948,282,1.678,405,2.087,411,2.458,540,1.876,543,2.458,546,2.932,547,4.099,548,4.741,549,2.458,550,4.68,551,4.68,552,3.357,553,4.68,554,4.088,555,4.088,556,4.088,557,4.088,558,2.998,559,5.046,560,5.046,561,2.963,562,4.088,563,2.963,564,4.088,565,2.963,566,4.088,567,2.963,568,2.963,569,2.963,570,2.963,571,2.963,572,2.963,573,2.963,574,4.088,575,2.963,576,2.963,577,2.963,578,2.458,579,2.458,580,2.589,581,2.458,582,2.932,583,2.458,584,2.963,585,2.963,586,2.963,587,5.046,588,2.963,589,2.458,590,2.963,591,2.458,592,2.963,593,4.68,594,2.963,595,4.68,596,2.963,597,2.963]],["title/components/QualityComponentComponent.html",[48,0.815,166,1.071]],["body/components/QualityComponentComponent.html",[0,0.068,1,1.508,3,0.16,4,0.271,5,0.136,6,1.057,12,0.534,13,1.232,14,1.686,15,1.359,16,0.186,17,0.383,18,0.445,20,0.269,22,0.482,24,1.91,25,1.508,26,0.3,27,0.036,28,0.422,29,0.16,30,0.3,31,1.882,35,1.057,36,1.022,37,0.806,41,1.91,43,0.16,44,1.456,45,0.009,46,0.015,47,0.026,48,1.178,49,0.64,50,1.359,51,0.945,52,0.945,53,0.945,54,0.945,56,1.589,58,0.852,59,1.686,60,2.104,61,0.945,62,2.727,63,2.228,64,0.772,65,1.508,66,2.104,67,1.508,68,1.686,69,1.121,70,2.402,75,2.402,77,1.121,78,1.508,80,0.925,81,0.488,85,0.702,89,1.384,101,0.534,106,2.146,125,1.384,152,1.057,153,1.057,155,0.772,156,1.882,157,2.347,158,0.945,159,3.042,160,0.945,161,2.148,162,0.64,163,0.945,164,0.585,165,1.995,166,1.548,167,0.585,168,0.702,169,0.534,170,0.702,171,0.945,172,0.945,181,2.402,185,1.91,186,0.772,187,1.755,189,1.538,197,0.702,201,0.64,211,2.188,240,1.057,284,3.994,317,1.91,324,2.502,361,1.057,386,1.91,387,1.91,389,3.169,395,1.936,396,1.384,404,1.197,405,0.852,421,2.209,426,1.384,428,1.197,429,1.384,441,1.384,442,1.384,443,1.384,444,1.384,445,1.384,446,1.384,447,1.384,448,1.384,449,1.384,450,1.384,451,1.384,452,1.384,453,1.384,454,1.384,455,1.384,456,2.209,457,2.209,458,1.384,460,1.384,461,1.197,462,1.384,469,1.384,473,2.383,474,2.209,477,2.383,479,1.91,482,2.383,484,1.384,486,1.91,487,2.209,488,1.91,489,2.209,490,1.384,491,2.383,492,1.384,493,2.209,494,1.384,495,1.91,496,1.197,503,2.209,598,2.973,599,4.418,600,2.625,601,2.663,602,1.668,603,1.686,604,2.663,605,1.91,606,2.663,607,1.686,608,1.686,609,2.209,610,2.383,611,2.209,612,2.209,613,1.668,614,2.663,615,2.756,616,3.146,617,2.663,618,2.663,619,2.663,620,3.323,621,2.663,622,2.663,623,2.663,624,2.663,625,2.663,626,1.668,627,1.384,628,2.663,629,1.197,630,1.668,631,2.209,632,1.668,633,2.209,634,1.91,635,1.384,636,2.209,637,2.973,638,1.384,639,2.72,640,1.197,641,1.384,642,1.384,643,1.197,644,1.197,645,3.323,646,1.668,647,1.668,648,1.668,649,1.384,650,1.384,651,1.668,652,1.384,653,1.668,654,1.668,655,1.668,656,1.668,657,1.668,658,1.668,659,1.668,660,1.668,661,1.668,662,1.668,663,1.668,664,1.384,665,1.384,666,1.384,667,1.384,668,1.668,669,1.668,670,1.668,671,1.668,672,1.668,673,1.668,674,1.668,675,1.668,676,1.668,677,1.668,678,1.668,679,1.668,680,1.668,681,1.668,682,1.668,683,1.668,684,1.668,685,1.668,686,1.668,687,1.668,688,1.668,689,1.668,690,1.668,691,1.668,692,1.668,693,1.668,694,1.668,695,1.668,696,1.668,697,1.668,698,2.663,699,1.668,700,2.663,701,1.668,702,1.668,703,1.668,704,1.668,705,1.668,706,1.668,707,2.663,708,4.815,709,2.663,710,2.663,711,2.663,712,2.663,713,2.663,714,2.663,715,2.663,716,2.663,717,2.663,718,2.663,719,2.663,720,1.384,721,1.384,722,1.384,723,2.209,724,1.384,725,2.209,726,1.384,727,1.668,728,2.663,729,1.668,730,1.384,731,1.384,732,1.384,733,1.384,734,1.668]],["title/injectables/QualityServiceService.html",[182,1.174,600,1.936]],["body/injectables/QualityServiceService.html",[0,0.119,1,1.65,3,0.28,4,0.238,5,0.238,6,3.333,8,1.181,12,1.604,13,2.319,14,3.173,15,2.558,16,0.324,17,0.581,18,1.237,20,0.47,22,0.637,24,2.898,25,2.288,26,0.727,27,0.036,28,0.514,29,0.481,30,0.727,36,1.2,37,1.322,43,0.28,44,1.781,45,0.016,46,0.023,47,0.016,56,0.933,69,1.701,77,1.227,80,1.136,81,0.852,85,1.227,86,1.87,101,1.293,120,1.488,165,1.119,177,1.632,182,1.551,183,1.65,185,2.898,186,1.348,187,2.319,189,2.147,191,2.938,192,1.119,193,1.119,197,1.227,198,1.845,200,2.898,201,1.119,202,1.845,203,1.65,204,1.845,209,2.09,210,2.09,211,1.227,321,3.352,395,2.063,461,2.898,552,3.327,600,3.173,603,2.559,605,2.898,629,2.09,631,2.417,735,2.09,736,4.041,737,4.639,738,4.639,739,4.041,740,5.01,741,2.914,742,3.352,743,4.041,744,4.041,745,4.041,746,3.352,747,5.01,748,5.01,749,4.041,750,5.01,751,4.041,752,3.352,753,3.352,754,3.352,755,2.417,756,2.417,757,2.417,758,2.417,759,2.914,760,2.914,761,2.417,762,2.417,763,2.09]],["title/classes/Station.html",[0,0.125,558,1.731]],["body/classes/Station.html",[0,0.167,2,1.191,3,0.391,4,0.332,5,0.332,8,1.191,16,0.453,17,0.724,18,1.564,20,0.658,22,0.695,26,0.733,27,0.035,28,0.76,29,0.525,30,0.733,36,1.11,37,0.989,38,2.081,43,0.391,45,0.023,46,0.028,47,0.023,93,3.234,104,3.381,115,3.381,120,2.081,174,2.923,175,2.642,177,1.669,226,2.308,276,1.305,395,2.081,412,2.852,500,2.581,558,2.852,764,3.381,765,3.612,766,3.612,767,4.076,768,4.076,769,4.076,770,4.076,771,4.076,772,4.076,773,5.037,774,3.381]],["title/classes/StationList.html",[0,0.125,775,2.193]],["body/classes/StationList.html",[0,0.098,2,0.699,3,0.23,4,0.195,5,0.195,8,0.699,16,0.266,17,0.505,20,0.671,22,0.446,27,0.036,29,0.23,43,0.23,45,0.013,46,0.02,47,0.013,80,0.478,120,1.793,211,1.008,276,1.124,412,1.989,500,2.224,547,2.983,558,1.355,765,2.518,766,2.518,775,3.499,776,3.45,777,1.985,778,2.913,779,3.512,780,3.512,781,3.512,782,4.159,783,2.393,784,2.393,785,6.436,786,2.393,787,2.393,788,2.393,789,3.512,790,2.393,791,2.393,792,2.393,793,2.393,794,2.393,795,2.393,796,2.393,797,2.393,798,2.393,799,2.393,800,2.393,801,2.393,802,2.393,803,2.393,804,3.512,805,2.393,806,2.393,807,2.393,808,2.393,809,2.393,810,2.393,811,2.393,812,2.393,813,2.393,814,2.393,815,2.393,816,2.393,817,2.393,818,2.393,819,2.393,820,2.393,821,2.393,822,2.393,823,2.393,824,2.393,825,2.393,826,2.393,827,2.393,828,2.393,829,2.393,830,2.393,831,2.393,832,2.393,833,2.393,834,2.393,835,2.393,836,2.393,837,2.393,838,2.393,839,2.393,840,2.393,841,2.393,842,2.393,843,2.393,844,2.393,845,2.393,846,2.393,847,2.393,848,2.393,849,2.393,850,2.393,851,2.393,852,2.393,853,2.393,854,3.512,855,2.393,856,2.393,857,2.393,858,2.393,859,2.393,860,2.393,861,2.393,862,2.393,863,2.393,864,2.393,865,2.393,866,3.512,867,2.393,868,2.393,869,2.393,870,2.393,871,2.393,872,2.393,873,2.393,874,3.512,875,2.393,876,2.393,877,2.393,878,2.393,879,2.393,880,2.393,881,2.393,882,2.393,883,2.393,884,2.393,885,2.393,886,2.393,887,2.393,888,2.393,889,2.393,890,2.393,891,2.393,892,2.393,893,2.393,894,2.393,895,2.393,896,2.393,897,2.393,898,2.393,899,2.393,900,2.393,901,2.393,902,2.393,903,2.393,904,2.393,905,2.393,906,2.393,907,2.393,908,2.393,909,2.393,910,2.393,911,2.393,912,2.393,913,2.393,914,2.393,915,2.393,916,2.393,917,2.393,918,2.393,919,2.393,920,2.393,921,2.393,922,2.393,923,2.393,924,2.393,925,2.393,926,2.393,927,2.393,928,2.393,929,2.393,930,2.393,931,2.393,932,2.393,933,2.393,934,2.393,935,2.393,936,2.393,937,2.393,938,2.393,939,2.393,940,2.393,941,2.393,942,2.393,943,2.393,944,2.393,945,2.393,946,2.393]],["title/classes/StatisticType.html",[0,0.125,947,1.936]],["body/classes/StatisticType.html",[0,0.151,2,1.077,3,0.354,4,0.3,5,0.3,8,1.077,12,1.18,16,0.41,17,0.68,18,1.517,20,0.595,22,0.663,26,0.663,27,0.035,28,0.77,29,0.501,30,0.663,35,2.994,36,0.812,37,0.894,43,0.454,45,0.021,46,0.027,47,0.021,93,3.354,101,1.18,174,2.643,175,2.548,177,1.609,226,2.956,265,2.643,276,1.18,279,3.057,282,2.087,323,2.334,348,2.334,376,2.643,405,1.881,578,3.921,579,3.057,580,2.334,581,3.057,582,2.643,583,3.057,607,2.334,608,2.334,640,2.643,765,2.643,766,2.643,774,3.057,947,3.305,948,3.948,949,2.643,950,4.727,951,3.685,952,3.685,953,3.685,954,3.685,955,3.685,956,4.727,957,3.685,958,3.685,959,3.685,960,3.685,961,3.685,962,3.685,963,4.727,964,2.643,965,3.057,966,3.057,967,3.057]],["title/classes/Statistics.html",[0,0.125,268,1.936]],["body/classes/Statistics.html",[0,0.161,2,1.149,3,0.378,4,0.32,5,0.32,16,0.437,17,0.708,18,1.634,20,0.795,22,0.717,26,0.707,27,0.036,28,0.5,29,0.541,30,0.707,43,0.378,44,2.064,45,0.022,46,0.028,47,0.022,80,0.785,268,3.406,274,3.967,517,4.913,521,4.815,968,4.815,969,3.261,970,5.923,971,3.931,972,3.931,973,3.931,974,3.931,975,3.931]],["title/components/WeatherComponentComponent.html",[48,0.815,169,0.979]],["body/components/WeatherComponentComponent.html",[0,0.046,3,0.107,4,0.091,5,0.091,8,0.73,12,1.657,13,1.368,16,0.124,17,0.274,18,1.423,20,0.18,22,0.608,26,0.449,27,0.036,28,0.562,29,0.409,30,0.449,31,1.674,36,1.229,38,1.696,43,0.107,44,1.135,45,0.006,46,0.011,47,0.006,48,1.088,49,0.427,50,0.973,51,0.631,52,0.631,53,0.631,54,0.631,56,0.61,58,0.569,59,1.207,60,1.581,61,0.631,62,2.311,63,1.889,64,0.515,65,1.079,66,1.581,67,1.079,68,1.207,69,0.802,70,1.872,75,1.872,77,1.399,78,1.881,80,0.663,81,0.325,85,0.469,86,0.515,98,2.294,101,1.458,106,1.676,130,1.696,152,0.705,153,1.581,155,0.515,156,1.079,157,1.079,158,0.631,159,1.881,160,0.631,161,1.674,162,0.427,163,0.631,164,0.39,165,0.427,166,0.39,167,0.39,168,0.469,169,0.946,170,1.86,171,0.631,172,0.631,177,1.193,181,0.705,186,0.515,187,1.368,189,1.155,192,1.275,193,1.275,197,0.469,201,0.427,276,0.356,280,1.58,281,1.58,282,2.051,285,3.004,287,0.924,317,2.12,323,1.872,324,1.414,338,3.382,339,1.872,340,1.872,347,2.12,348,1.207,351,2.12,352,2.798,353,1.366,355,1.872,356,2.12,358,0.569,360,2.597,368,1.366,369,1.366,370,1.366,371,1.207,372,1.207,373,1.207,374,1.366,380,1.674,383,2.12,385,1.58,386,0.799,387,0.799,389,2.383,390,1.58,395,2.574,398,1.58,402,1.58,404,1.791,405,0.973,406,0.924,412,1.414,414,0.924,428,2.597,473,1.366,477,1.366,479,1.366,481,1.58,482,2.12,483,2.452,486,0.799,488,2.383,491,1.366,603,2.451,605,1.366,607,2.294,608,1.872,609,3.004,610,2.927,611,2.452,612,2.452,615,1.58,616,1.58,634,0.799,643,1.366,644,2.12,649,1.58,650,1.58,652,0.924,664,4.343,667,2.071,721,2.452,722,2.756,723,3.385,724,2.452,725,3.211,726,2.452,730,1.58,731,1.58,732,3.535,733,3.385,746,1.58,753,1.58,778,1.58,976,3.498,977,3.322,978,3.322,979,2.497,980,2.497,981,2.497,982,2.497,983,2.497,984,3.322,985,2.497,986,1.905,987,2.956,988,1.905,989,1.114,990,1.114,991,1.114,992,4.262,993,1.114,994,1.114,995,1.905,996,1.114,997,1.905,998,3.385,999,1.905,1000,1.905,1001,3.622,1002,2.452,1003,2.452,1004,1.905,1005,1.905,1006,1.905,1007,1.905,1008,3.622,1009,1.905,1010,1.905,1011,2.956,1012,2.452,1013,1.905,1014,1.905,1015,1.114,1016,1.905,1017,2.452,1018,2.956,1019,1.905,1020,1.58,1021,1.58,1022,1.905,1023,1.114,1024,1.114,1025,1.905,1026,1.905,1027,2.956,1028,1.905,1029,1.905,1030,1.905,1031,2.956,1032,1.905,1033,2.497,1034,2.497,1035,1.905,1036,3.871,1037,2.497,1038,1.114,1039,1.905,1040,1.905,1041,1.905,1042,1.114,1043,2.956,1044,1.114,1045,4.081,1046,1.905,1047,4.081,1048,1.905,1049,1.114,1050,1.905,1051,1.114,1052,1.114,1053,0.924,1054,1.114,1055,1.114,1056,1.114,1057,1.114,1058,1.905,1059,1.114,1060,1.114,1061,1.114,1062,1.114,1063,1.114,1064,1.114,1065,1.114,1066,1.114,1067,1.114,1068,1.114,1069,1.114,1070,0.924,1071,1.114,1072,1.114,1073,1.114,1074,1.905,1075,1.114,1076,1.905,1077,1.114,1078,1.114,1079,0.924,1080,1.905,1081,1.905,1082,1.905,1083,1.905,1084,2.956,1085,1.905,1086,1.905,1087,4.675,1088,1.905,1089,1.905,1090,1.905,1091,1.905,1092,1.905,1093,1.905,1094,1.905,1095,1.905,1096,1.905,1097,1.114,1098,4.081,1099,1.114,1100,1.114,1101,1.114,1102,1.114,1103,1.114,1104,1.114,1105,1.114,1106,1.114,1107,1.905,1108,3.322,1109,2.497,1110,1.905,1111,2.956,1112,1.114,1113,1.114,1114,1.114,1115,1.114,1116,1.905,1117,1.114,1118,1.114,1119,1.114,1120,1.114,1121,3.622,1122,1.905,1123,1.905,1124,1.114,1125,1.114,1126,1.114,1127,1.905,1128,1.114,1129,1.114,1130,1.905,1131,2.956,1132,3.871,1133,1.905,1134,3.322,1135,1.905,1136,2.956,1137,2.956,1138,2.956,1139,1.114,1140,1.905,1141,1.905,1142,1.905,1143,1.114,1144,1.114,1145,1.114,1146,1.114,1147,1.114,1148,2.956,1149,1.114,1150,1.114,1151,1.114,1152,1.114,1153,1.905,1154,1.58,1155,1.114,1156,1.114,1157,1.114,1158,1.114,1159,1.114,1160,1.114,1161,1.114,1162,1.114,1163,1.114,1164,1.114,1165,1.114,1166,1.114,1167,1.114,1168,1.114,1169,1.114,1170,1.114]],["title/classes/WeatherData.html",[0,0.125,358,1.561]],["body/classes/WeatherData.html",[0,0.161,2,0.82,3,0.27,4,0.229,5,0.229,7,1.59,8,1.151,12,1.662,16,0.312,17,0.566,18,1.592,20,0.734,22,0.66,25,2.575,26,0.505,27,0.036,28,0.684,29,0.499,30,0.505,36,1.144,37,0.956,43,0.378,44,1.993,45,0.016,46,0.022,47,0.016,96,2.014,98,1.778,101,1.805,106,1.822,120,2.01,133,3.262,170,2.266,175,2.688,177,1.697,276,1.26,335,2.23,336,3.408,337,3.266,338,3.122,339,2.494,340,2.494,341,3.266,342,2.329,345,3.772,346,2.329,347,2.014,348,1.778,349,2.329,350,2.824,351,2.014,352,3.782,353,2.014,354,2.329,355,1.778,356,3.536,358,2.517,359,3.772,360,3.262,361,2.88,362,3.772,363,4.464,364,3.772,365,3.772,366,4.464,367,3.772,368,3.964,369,3.964,370,3.262,371,2.88,372,2.88,373,2.88,374,3.262,375,3.772,376,3.262,1171,2.329,1172,2.808,1173,2.808,1174,2.808,1175,2.808,1176,2.808,1177,2.808]],["title/injectables/WeatherServiceService.html",[182,1.174,380,1.731]],["body/injectables/WeatherServiceService.html",[0,0.097,3,0.227,4,0.193,5,0.193,8,1.208,12,1.79,13,1.612,16,0.263,17,0.501,18,1.354,20,0.382,22,0.617,26,0.744,27,0.036,28,0.525,29,0.466,30,0.744,36,1.307,37,1.393,38,1.779,43,0.227,44,1.337,45,0.013,46,0.02,47,0.013,69,1.467,77,1.467,80,1.075,81,0.692,85,0.997,86,2.109,101,1.115,106,2.351,121,1.964,165,0.909,170,0.997,177,1.635,182,1.337,183,1.341,186,1.096,187,2.109,189,1.612,191,3.076,192,1.337,193,1.337,197,0.997,198,2.206,200,2.498,201,0.909,202,1.499,203,1.341,204,2.618,209,2.498,210,2.498,211,1.467,276,1.115,323,2.887,335,1.341,336,3.217,338,3.413,339,2.887,340,3.217,350,2.498,355,2.887,358,1.209,380,1.973,383,3.269,412,1.973,552,2.964,591,1.964,603,2.887,607,3.217,608,3.217,629,1.698,735,1.698,742,2.89,752,3.781,754,2.89,755,1.964,756,1.964,757,1.964,758,1.964,761,1.964,762,1.964,763,1.698,998,4.214,1002,3.781,1003,2.89,1012,3.781,1017,2.89,1020,2.89,1021,3.781,1070,2.89,1079,2.89,1171,3.781,1178,3.484,1179,3.484,1180,4.133,1181,3.484,1182,2.368,1183,3.484,1184,3.484,1185,3.484,1186,4.558,1187,2.368,1188,3.484,1189,3.484,1190,4.558,1191,3.484,1192,2.368,1193,4.558,1194,3.484,1195,3.484,1196,3.484,1197,3.484,1198,3.484,1199,2.368,1200,2.368,1201,2.368,1202,2.368,1203,2.368,1204,2.368,1205,2.368,1206,2.368,1207,2.368,1208,2.368]],["title/coverage.html",[1209,3.465]],["body/coverage.html",[0,0.242,1,1.669,5,0.24,6,2.58,7,2.851,27,0.036,29,0.283,37,0.715,45,0.017,46,0.023,47,0.023,48,1.457,49,1.132,55,2.445,56,1.494,57,1.867,58,3.025,73,1.867,82,2.58,83,2.58,152,1.867,162,1.132,164,1.033,166,1.033,167,1.033,168,1.241,169,0.944,173,1.867,182,1.933,184,2.445,211,1.241,215,2.445,258,2.58,261,2.114,262,2.114,268,1.867,273,2.114,274,1.867,275,2.445,324,3.465,335,1.669,336,2.956,358,1.505,377,2.922,380,1.669,495,3.919,497,1.867,498,2.445,499,2.445,540,1.867,541,2.445,542,2.445,546,2.114,547,2.922,548,2.445,549,2.445,558,1.669,598,3.611,600,1.867,637,2.114,639,2.114,720,3.379,735,2.922,764,2.445,775,2.114,776,2.445,777,2.445,947,1.867,948,2.922,949,2.922,964,2.114,968,2.445,969,2.445,976,2.922,1154,2.445,1209,2.445,1210,2.948,1211,2.948,1212,2.948,1213,5.975,1214,5.795,1215,4.074,1216,4.668,1217,4.074,1218,4.074,1219,4.668,1220,3.379,1221,2.948,1222,2.948,1223,2.948,1224,2.948,1225,2.948,1226,2.948,1227,4.074,1228,2.948,1229,2.948,1230,2.948,1231,2.948,1232,2.948,1233,2.948,1234,2.948,1235,4.074,1236,2.948,1237,2.948,1238,2.948,1239,2.445,1240,3.379,1241,2.445,1242,3.379,1243,2.445,1244,2.445,1245,2.948]],["title/dependencies.html",[230,2.329,1246,2.551]],["body/dependencies.html",[27,0.036,45,0.024,46,0.029,47,0.024,81,1.261,180,2.733,199,3.74,230,2.733,232,3.095,246,4.326,247,3.74,252,3.579,627,3.579,1053,3.579,1247,4.315,1248,6.129,1249,4.315,1250,4.315,1251,4.315,1252,4.315,1253,3.579,1254,4.315,1255,4.315,1256,4.315,1257,4.315,1258,4.315,1259,4.315,1260,4.315,1261,4.315,1262,4.315,1263,4.315,1264,4.315,1265,4.315,1266,4.315]],["title/index.html",[16,0.284,1267,2.551,1268,2.551]],["body/index.html",[4,0.323,27,0.028,28,0.503,45,0.022,46,0.028,47,0.022,48,1.438,63,1.831,211,1.666,242,2.838,589,4.687,763,3.547,1253,4.992,1269,3.958,1270,4.946,1271,3.958,1272,5.394,1273,5.394,1274,3.958,1275,3.958,1276,3.958,1277,5.817,1278,3.958,1279,3.958,1280,3.958,1281,3.958,1282,3.958,1283,3.958,1284,3.958,1285,3.958,1286,3.958,1287,3.958,1288,5.394,1289,5.394,1290,3.958,1291,5.817,1292,3.958,1293,3.958,1294,3.958,1295,3.958,1296,3.958,1297,3.958,1298,3.283,1299,4.946,1300,4.946,1301,5.651,1302,3.958,1303,4.946,1304,4.946,1305,3.958,1306,3.958,1307,3.958,1308,3.958,1309,5.394,1310,3.958,1311,3.958,1312,3.958,1313,3.958]],["title/modules.html",[229,2.365]],["body/modules.html",[27,0.031,45,0.027,46,0.031,47,0.027,228,3.07,229,2.745,239,2.745,247,3.476,1314,4.847,1315,4.847,1316,5.586,1317,4.847,1318,4.847]],["title/overview.html",[1319,3.465]],["body/overview.html",[2,1.216,27,0.035,45,0.023,46,0.029,47,0.023,50,2.125,155,1.926,162,2.335,164,1.934,166,1.934,167,1.934,169,1.766,183,2.357,201,1.598,228,4.017,229,2.357,230,2.636,231,3.453,232,2.985,233,3.453,234,2.985,235,3.453,236,3.453,237,3.453,238,3.453,239,3.125,240,3.231,241,3.453,242,2.985,263,2.636,496,2.985,580,2.636,1319,3.453,1320,4.163,1321,4.163,1322,4.163]],["title/routes.html",[263,2.645]],["body/routes.html",[27,0.032,45,0.028,46,0.032,47,0.028,263,3.147]],["title/miscellaneous/variables.html",[1323,2.116,1324,3.051]],["body/miscellaneous/variables.html",[12,1.093,13,1.58,14,2.163,15,1.743,16,0.38,27,0.036,28,0.639,29,0.584,31,1.934,35,2.163,36,0.753,37,0.829,45,0.019,46,0.025,47,0.028,58,3.078,93,2.849,101,1.093,167,1.197,169,1.093,192,2.133,193,2.133,258,2.163,261,2.449,262,3.226,273,3.226,361,2.163,377,2.449,405,1.743,580,2.163,582,2.449,598,2.449,610,2.449,633,3.732,634,3.226,635,2.833,636,3.732,637,3.226,638,2.833,639,3.226,640,2.449,641,2.833,642,2.833,643,2.449,644,2.449,665,2.833,666,3.732,947,2.163,948,2.449,949,3.226,964,3.226,965,2.833,966,2.833,967,2.833,976,2.449,1220,2.833,1239,2.833,1240,4.436,1241,2.833,1242,2.833,1243,3.732,1244,3.732,1298,3.732,1323,2.833,1324,2.833,1325,3.415,1326,3.415,1327,3.415,1328,4.499,1329,3.415,1330,3.415,1331,5.031,1332,3.415,1333,3.415,1334,3.415,1335,3.415,1336,4.499]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":324,"title":{},"body":{"classes/CalculatedProps.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["0.05",{"_index":703,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0.2",{"_index":1156,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.4s",{"_index":1159,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.5",{"_index":698,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0.5s",{"_index":1135,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.9.1",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1216,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["088",{"_index":729,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0ff",{"_index":734,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["1",{"_index":405,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["1.2s",{"_index":1149,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["1.5s",{"_index":1148,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["1.6.0",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1219,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":1226,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1230,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1227,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1229,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":485,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["100",{"_index":495,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"coverage.html":{}}}],["100px",{"_index":481,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["108",{"_index":471,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["10px",{"_index":731,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["11",{"_index":1322,"title":{},"body":{"overview.html":{}}}],["11px",{"_index":724,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["12/14",{"_index":1224,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":478,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["14",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["1500",{"_index":406,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["15px",{"_index":1130,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["19",{"_index":435,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["1px",{"_index":725,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["1s",{"_index":1133,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["2",{"_index":580,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.9.3",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":154,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["20px",{"_index":728,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["22px",{"_index":1162,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["23.1688403",{"_index":430,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["25",{"_index":720,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{}}}],["2560x1600.jpg",{"_index":1106,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["25px",{"_index":1128,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["27/28",{"_index":1222,"title":{},"body":{"coverage.html":{}}}],["270",{"_index":472,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["2px",{"_index":492,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["2s",{"_index":1143,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["3",{"_index":582,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["3.4.1",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1235,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":489,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["33",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":1169,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["390px",{"_index":480,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["3px",{"_index":723,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["4",{"_index":1321,"title":{},"body":{"overview.html":{}}}],["4/5",{"_index":1218,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1158,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["40vh",{"_index":1100,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["5",{"_index":496,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"overview.html":{}}}],["5/6",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1154,"title":{},"body":{"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["52",{"_index":110,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["53.1324886",{"_index":429,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["5px",{"_index":1146,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["6",{"_index":1320,"title":{},"body":{"overview.html":{}}}],["6.0.2",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":1129,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["6px",{"_index":1163,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["7",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1145,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["8",{"_index":449,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["8.2.11",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["8.2.14",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["8.3.14",{"_index":1275,"title":{},"body":{"index.html":{}}}],["80",{"_index":1217,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1237,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1223,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":431,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["90",{"_index":470,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["96",{"_index":1221,"title":{},"body":{"coverage.html":{}}}],["absolute",{"_index":474,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["actual_component",{"_index":172,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["adnie",{"_index":129,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["adres",{"_index":752,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["afterviewinit",{"_index":422,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["air",{"_index":64,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["airdata",{"_index":1,"title":{"classes/AirData.html":{}},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["airdata(item.current",{"_index":760,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["airly",{"_index":206,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["airly.eu",{"_index":736,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["airport",{"_index":876,"title":{},"body":{"classes/StationList.html":{}}}],["airqualitycomponentcomponent",{"_index":49,"title":{"components/AirQualityComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["airqualitydata",{"_index":173,"title":{"classes/AirQualityData.html":{}},"body":{"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["airqualitydata(item.id",{"_index":212,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["airqualityservice",{"_index":73,"title":{"injectables/AirQualityService.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["aktualne",{"_index":1184,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["aktualnie",{"_index":39,"title":{},"body":{"classes/AirData.html":{}}}],["aktualnym",{"_index":1017,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["align",{"_index":1111,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["analizowanego",{"_index":1043,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["anchor",{"_index":697,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["anchorxunits",{"_index":699,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["anchoryunits",{"_index":701,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["angular",{"_index":1272,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":197,"title":{},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["angular/compiler",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/i18n/i18n_ast",{"_index":630,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":180,"title":{},"body":{"classes/AirQualityData.html":{},"modules/AppRoutingModule.html":{},"classes/MeteoStatsData.html":{},"dependencies.html":{}}}],["animacje",{"_index":1060,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["animation",{"_index":664,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["api",{"_index":37,"title":{},"body":{"classes/AirData.html":{},"injectables/AirQualityService.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/rest/aqindex/getindex/52",{"_index":195,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["apibaseurl",{"_index":550,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["apikey",{"_index":551,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["apiurl",{"_index":552,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["apiurlforecast",{"_index":1180,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["aplikacja",{"_index":94,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["aplikacji",{"_index":1058,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["app",{"_index":63,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"index.html":{}}}],["app.component",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":162,"title":{"components/AppComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":228,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":239,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":1037,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["area\").show",{"_index":1069,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["args",{"_index":452,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["around",{"_index":1152,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["array",{"_index":782,"title":{},"body":{"classes/StationList.html":{}}}],["artifacts",{"_index":1292,"title":{},"body":{"index.html":{}}}],["assets/marker/marker.png",{"_index":705,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["atmosferyczny",{"_index":508,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["attribution",{"_index":436,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["auto",{"_index":483,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["automatically",{"_index":1282,"title":{},"body":{"index.html":{}}}],["available",{"_index":1318,"title":{},"body":{"modules.html":{}}}],["avaragesum",{"_index":315,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["average",{"_index":302,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["averagesum",{"_index":309,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["background",{"_index":732,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["backwards",{"_index":1138,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["bartoszow",{"_index":869,"title":{},"body":{"classes/StationList.html":{}}}],["bedzie",{"_index":33,"title":{},"body":{"classes/AirData.html":{}}}],["belsk",{"_index":887,"title":{},"body":{"classes/StationList.html":{}}}],["biala",{"_index":933,"title":{},"body":{"classes/StationList.html":{}}}],["bialystok",{"_index":839,"title":{},"body":{"classes/StationList.html":{}}}],["bielany",{"_index":855,"title":{},"body":{"classes/StationList.html":{}}}],["bielsko",{"_index":932,"title":{},"body":{"classes/StationList.html":{}}}],["black",{"_index":494,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["block",{"_index":1157,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["bootstrap",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":491,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["bottom",{"_index":487,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["box",{"_index":721,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["break",{"_index":595,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["browse",{"_index":1316,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["brwinow",{"_index":852,"title":{},"body":{"classes/StationList.html":{}}}],["build",{"_index":1291,"title":{},"body":{"index.html":{}}}],["bylo",{"_index":679,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["będ",{"_index":348,"title":{},"body":{"classes/ForecastData.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["będzie",{"_index":134,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["błędzie",{"_index":1039,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["c",{"_index":1087,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ca",{"_index":118,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["calculatedprops",{"_index":274,"title":{"classes/CalculatedProps.html":{}},"body":{"classes/CalculatedProps.html":{},"classes/Statistics.html":{},"coverage.html":{}}}],["caqi",{"_index":711,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["case",{"_index":593,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["catcherror",{"_index":756,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["catcherror((error",{"_index":761,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["center",{"_index":428,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["change",{"_index":1284,"title":{},"body":{"index.html":{}}}],["chart",{"_index":1036,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["chart.js",{"_index":1053,"title":{},"body":{"components/WeatherComponentComponent.html":{},"dependencies.html":{}}}],["chce",{"_index":138,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["chcemy",{"_index":112,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["check",{"_index":1312,"title":{},"body":{"index.html":{}}}],["chojnice",{"_index":827,"title":{},"body":{"classes/StationList.html":{}}}],["ciśnienia",{"_index":286,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["ciśnienie",{"_index":373,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["class",{"_index":0,"title":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/WeatherData.html":{}},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/WeatherData.html":{},"overview.html":{}}}],["cli",{"_index":1273,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":656,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cluster_appmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":104,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/Station.html":{}}}],["code",{"_index":1286,"title":{},"body":{"index.html":{}}}],["color",{"_index":733,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["column",{"_index":1114,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["compat",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":48,"title":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":161,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.css",{"_index":66,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.html",{"_index":68,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts",{"_index":58,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component.component.ts:107",{"_index":996,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:11",{"_index":74,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["component.component.ts:127",{"_index":989,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:15",{"_index":76,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{}}}],["component.component.ts:18",{"_index":79,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["component.component.ts:19",{"_index":384,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:24",{"_index":1052,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:28",{"_index":1042,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:30",{"_index":382,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["component.component.ts:32",{"_index":1038,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:36",{"_index":1044,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:40",{"_index":1051,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:43",{"_index":601,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component.component.ts:44",{"_index":1049,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:48",{"_index":988,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:57",{"_index":1023,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:60",{"_index":602,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component.component.ts:69",{"_index":1024,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:82",{"_index":1015,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:99",{"_index":613,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component/air",{"_index":57,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["component/stats",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":160,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["components",{"_index":50,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"overview.html":{}}}],["components/air",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/quality/quality",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/stats",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/weather/weather",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["console.log(args.coordinate",{"_index":453,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["console.log(data[0].list[0].wind.deg",{"_index":415,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["console.log(lonlat",{"_index":458,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["console.log(records",{"_index":1071,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["console.log(results",{"_index":89,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["const",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"classes/StatisticType.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(current",{"_index":21,"title":{},"body":{"classes/AirData.html":{}}}],["constructor(date",{"_index":526,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["constructor(http",{"_index":186,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(id",{"_index":174,"title":{},"body":{"classes/AirQualityData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{}}}],["constructor(list",{"_index":343,"title":{},"body":{"classes/ForecastData.html":{}}}],["constructor(min",{"_index":307,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["constructor(name",{"_index":1172,"title":{},"body":{"classes/WeatherData.html":{}}}],["constructor(private",{"_index":85,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(public",{"_index":774,"title":{},"body":{"classes/Station.html":{},"classes/StatisticType.html":{}}}],["constructor(service",{"_index":72,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["constructor(temperature",{"_index":971,"title":{},"body":{"classes/Statistics.html":{}}}],["container",{"_index":484,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["content",{"_index":667,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["content\").animate",{"_index":1065,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content/uploads/2017/03/sun",{"_index":1102,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__chart",{"_index":1034,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__chart\").show",{"_index":1068,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__my",{"_index":1165,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__table",{"_index":1033,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__table\").show",{"_index":1067,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["context",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["copernicus",{"_index":875,"title":{},"body":{"classes/StationList.html":{}}}],["copy",{"_index":437,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["coverage",{"_index":1209,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":19,"title":{},"body":{"classes/AirData.html":{}}}],["custom",{"_index":1166,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["czas",{"_index":351,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["czasie",{"_index":1046,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["czasowego",{"_index":320,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["czasowym",{"_index":576,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["czestochowa",{"_index":913,"title":{},"body":{"classes/StationList.html":{}}}],["czy",{"_index":956,"title":{},"body":{"classes/StatisticType.html":{}}}],["czyli",{"_index":279,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/StatisticType.html":{}}}],["cząca",{"_index":570,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["daily",{"_index":596,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["dane",{"_index":12,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["danej",{"_index":411,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{}}}],["danych",{"_index":395,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"components/WeatherComponentComponent.html":{}}}],["danym",{"_index":368,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["danymi",{"_index":1028,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dat",{"_index":97,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/CalculatedProps.html":{}}}],["data",{"_index":150,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{}}}],["data.ts",{"_index":499,"title":{},"body":{"classes/MeteoStatsData.html":{},"coverage.html":{}}}],["data.ts:10",{"_index":528,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:11",{"_index":535,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:12",{"_index":537,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:13",{"_index":536,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:14",{"_index":530,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:15",{"_index":533,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:16",{"_index":532,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:17",{"_index":538,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:18",{"_index":539,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:19",{"_index":529,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:20",{"_index":534,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:21",{"_index":531,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:8",{"_index":527,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data].map((item",{"_index":210,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["datacount",{"_index":310,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["datacount).tofixed(2).tostring",{"_index":334,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["date",{"_index":308,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{}}}],["datefrom",{"_index":559,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["dateto",{"_index":560,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["daty",{"_index":297,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["deblin",{"_index":893,"title":{},"body":{"classes/StationList.html":{}}}],["declarations",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":387,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["default",{"_index":192,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["deklarowanie",{"_index":617,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["delay",{"_index":1134,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dependencies",{"_index":230,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["dev",{"_index":1279,"title":{},"body":{"index.html":{}}}],["development",{"_index":1276,"title":{},"body":{"index.html":{}}}],["direction",{"_index":1113,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["directive",{"_index":158,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["directives",{"_index":171,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1290,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1295,"title":{},"body":{"index.html":{}}}],["display",{"_index":1108,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dist",{"_index":1294,"title":{},"body":{"index.html":{}}}],["dla",{"_index":38,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/CalculatedProps.html":{},"classes/Station.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["dni",{"_index":340,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["dniowych",{"_index":960,"title":{},"body":{"classes/StatisticType.html":{}}}],["document).ready(function",{"_index":402,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["document.getelementbyid(\"inputlat",{"_index":464,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["document.getelementbyid(\"inputlon",{"_index":466,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["document.getelementbyid('popup",{"_index":658,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["documentation",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["doda",{"_index":680,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["dodanie",{"_index":407,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["dom",{"_index":53,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["don't",{"_index":364,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["dostępne",{"_index":951,"title":{},"body":{"classes/StatisticType.html":{}}}],["drawchart",{"_index":984,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["druga",{"_index":440,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["du",{"_index":119,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["duration",{"_index":1132,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dwóch",{"_index":1061,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dynamic",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["dzienne",{"_index":581,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["dzienny",{"_index":966,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["dzięki",{"_index":612,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["długo",{"_index":748,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["długości",{"_index":638,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1306,"title":{},"body":{"index.html":{}}}],["elblag",{"_index":809,"title":{},"body":{"classes/StationList.html":{}}}],["element",{"_index":157,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["element).popover",{"_index":662,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["element).popover('show",{"_index":674,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["encapsulation",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":589,"title":{},"body":{"injectables/MeteoStatsService.html":{},"index.html":{}}}],["endpointów",{"_index":1201,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["environment",{"_index":1240,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epsg:3857",{"_index":456,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["epsg:4326",{"_index":457,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["error",{"_index":1073,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["errormsg",{"_index":977,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["execute",{"_index":1303,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["exports",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":665,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1117,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["features",{"_index":689,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ffffff",{"_index":1098,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["files",{"_index":1285,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1136,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["flag",{"_index":1297,"title":{},"body":{"index.html":{}}}],["flex",{"_index":1109,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["font",{"_index":1116,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["forecastdata",{"_index":335,"title":{"classes/ForecastData.html":{}},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["forecastdata(item.list",{"_index":1208,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["formsmodule",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["fraction",{"_index":700,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["frame",{"_index":490,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["full",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":451,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["funkcj",{"_index":1005,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["funkcja",{"_index":603,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["funkcjami",{"_index":1178,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["funkcji",{"_index":389,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["further",{"_index":1308,"title":{},"body":{"index.html":{}}}],["g/m3",{"_index":708,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["gdansk",{"_index":804,"title":{},"body":{"classes/StationList.html":{}}}],["gdynia",{"_index":802,"title":{},"body":{"classes/StationList.html":{}}}],["gdzie",{"_index":125,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["generate",{"_index":1288,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1271,"title":{},"body":{"index.html":{}}}],["generowane",{"_index":322,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["geograficzn",{"_index":749,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["geograficzna",{"_index":750,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["geograficznej",{"_index":636,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["geometry",{"_index":691,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["get(`${this.apiurlforecast}${term}&appid=b742a4225977a8a94a092feb673aad31&units=metric",{"_index":1207,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["get(`${this.apiurl}${term}&appid=9a3485ea70ca20151b5d5d7b29054807&units=metric",{"_index":1202,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["get(`${this.apiurl}&lat=${lat}&lng=${lng}&apikey=sv8wb734fm470c2hys8atebfrng5lzu9",{"_index":759,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["get(this.api",{"_index":205,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["get(this.apiurl",{"_index":591,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/WeatherServiceService.html":{}}}],["getairdata",{"_index":185,"title":{},"body":{"injectables/AirQualityService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["getairdata(lat",{"_index":739,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["getairdata(latitude",{"_index":651,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["getairservice",{"_index":599,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["getdatabialystok",{"_index":379,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatabialystok(term",{"_index":381,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getforecastservice",{"_index":985,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getforecastservice(term",{"_index":995,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getstatsdata",{"_index":554,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getstatsdata(type",{"_index":557,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getting",{"_index":1267,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":555,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["gettype(type",{"_index":562,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getweatherdata",{"_index":1020,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherdata(term",{"_index":1070,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherforecastdata",{"_index":1003,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherforecastdata(term",{"_index":1079,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherservice",{"_index":986,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getweatherservice(term",{"_index":1014,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["go",{"_index":1311,"title":{},"body":{"index.html":{}}}],["godzinowe",{"_index":579,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["godzinowy",{"_index":965,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["godzinowych",{"_index":959,"title":{},"body":{"classes/StatisticType.html":{}}}],["goleniow",{"_index":819,"title":{},"body":{"classes/StationList.html":{}}}],["gora",{"_index":866,"title":{},"body":{"classes/StationList.html":{}}}],["gorzow",{"_index":841,"title":{},"body":{"classes/StationList.html":{}}}],["gradient(#626d329f,#6e5f33af",{"_index":1141,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["graph",{"_index":1317,"title":{},"body":{"modules.html":{}}}],["głownej",{"_index":1057,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["głownych",{"_index":1062,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["główna",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["głęboko",{"_index":510,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["h2",{"_index":1115,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["height",{"_index":482,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["height:0px",{"_index":1155,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["hel",{"_index":800,"title":{},"body":{"classes/StationList.html":{}}}],["help",{"_index":1309,"title":{},"body":{"index.html":{}}}],["hourly",{"_index":594,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["hpa",{"_index":1092,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["html",{"_index":156,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["http",{"_index":189,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["http://api.gios.gov.pl/pjp",{"_index":194,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["http://localhost:4200",{"_index":1281,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":187,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["httpclientmodule",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":754,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["https://airapi.airly.eu/v2/measurements/nearest?indextype=airly_caqi&maxdistancekm=100",{"_index":751,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["https://api.meteostat.net/v1/history",{"_index":564,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["https://api.openweathermap.org/data/2.5/forecast?q",{"_index":1195,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["https://api.openweathermap.org/data/2.5/weather?q",{"_index":1191,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["ich",{"_index":999,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["id",{"_index":93,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":631,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["ikonka",{"_index":375,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["image",{"_index":695,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["img",{"_index":476,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["implements",{"_index":59,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["import",{"_index":80,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["imports",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["informacja",{"_index":649,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["informacje",{"_index":1055,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["inicjowanie",{"_index":614,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["inicjue",{"_index":1025,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["inicjująca",{"_index":604,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["inicująca",{"_index":997,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["initmap",{"_index":425,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["injectable",{"_index":182,"title":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["injectables",{"_index":183,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"overview.html":{}}}],["inputlat",{"_index":463,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inputlat.setattribute('value',lat",{"_index":467,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inputlon",{"_index":465,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inputlon.setattribute('value',lon",{"_index":468,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["irena",{"_index":894,"title":{},"body":{"classes/StationList.html":{}}}],["item.main",{"_index":1205,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["item.stindexlevel",{"_index":213,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["item.stsourcedatadate",{"_index":214,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["item.visibility",{"_index":1204,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["item.weather",{"_index":1206,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["items",{"_index":1112,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["jakby",{"_index":677,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["jakie",{"_index":955,"title":{},"body":{"classes/StatisticType.html":{}}}],["jako",{"_index":109,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{}}}],["jakości",{"_index":14,"title":{},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"miscellaneous/variables.html":{}}}],["jasionka",{"_index":926,"title":{},"body":{"classes/StationList.html":{}}}],["jelenia",{"_index":903,"title":{},"body":{"classes/StationList.html":{}}}],["jeśli",{"_index":111,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["jquery",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":1110,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["kalisz",{"_index":879,"title":{},"body":{"classes/StationList.html":{}}}],["karma",{"_index":1305,"title":{},"body":{"index.html":{}}}],["kasprowy",{"_index":937,"title":{},"body":{"classes/StationList.html":{}}}],["katowice",{"_index":917,"title":{},"body":{"classes/StationList.html":{}}}],["kay",{"_index":207,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["ketrzyn",{"_index":811,"title":{},"body":{"classes/StationList.html":{}}}],["key=xwftslqc",{"_index":566,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["kiedy",{"_index":298,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["kielce",{"_index":921,"title":{},"body":{"classes/StationList.html":{}}}],["kierunek",{"_index":392,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{}}}],["kierunku",{"_index":410,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["klasa",{"_index":276,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["klasy",{"_index":25,"title":{},"body":{"classes/AirData.html":{},"classes/ForecastData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/WeatherData.html":{}}}],["kliknie",{"_index":685,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["kliknięcia",{"_index":620,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["kliknięcie",{"_index":621,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["klikniętego",{"_index":40,"title":{},"body":{"classes/AirData.html":{}}}],["klodzko",{"_index":907,"title":{},"body":{"classes/StationList.html":{}}}],["know",{"_index":365,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["kolo",{"_index":848,"title":{},"body":{"classes/StationList.html":{}}}],["kolobrzeg",{"_index":787,"title":{},"body":{"classes/StationList.html":{}}}],["konstruktor",{"_index":24,"title":{},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["korzysta",{"_index":114,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["kostruktor",{"_index":345,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["koszalin",{"_index":789,"title":{},"body":{"classes/StationList.html":{}}}],["kozienice",{"_index":891,"title":{},"body":{"classes/StationList.html":{}}}],["krakow",{"_index":919,"title":{},"body":{"classes/StationList.html":{}}}],["któr",{"_index":361,"title":{},"body":{"classes/ForecastData.html":{},"components/QualityComponentComponent.html":{},"classes/WeatherData.html":{},"miscellaneous/variables.html":{}}}],["która",{"_index":32,"title":{},"body":{"classes/AirData.html":{}}}],["które",{"_index":390,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["którego",{"_index":321,"title":{},"body":{"classes/CalculatedProps.html":{},"injectables/QualityServiceService.html":{}}}],["której",{"_index":347,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["którgo",{"_index":1193,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["których",{"_index":767,"title":{},"body":{"classes/Station.html":{}}}],["l",{"_index":626,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["l.map('map",{"_index":427,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":433,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["lat",{"_index":461,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["latitude",{"_index":637,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lato",{"_index":1118,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["layers",{"_index":443,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["leaflet",{"_index":627,"title":{},"body":{"components/QualityComponentComponent.html":{},"dependencies.html":{}}}],["leba",{"_index":796,"title":{},"body":{"classes/StationList.html":{}}}],["lebork",{"_index":798,"title":{},"body":{"classes/StationList.html":{}}}],["left",{"_index":479,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["legend",{"_index":155,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"overview.html":{}}}],["legionowo",{"_index":857,"title":{},"body":{"classes/StationList.html":{}}}],["legnica",{"_index":868,"title":{},"body":{"classes/StationList.html":{}}}],["lesko",{"_index":943,"title":{},"body":{"classes/StationList.html":{}}}],["leszno",{"_index":871,"title":{},"body":{"classes/StationList.html":{}}}],["letter",{"_index":1124,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["linear",{"_index":1140,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["list",{"_index":120,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/WeatherData.html":{}}}],["list.ts",{"_index":777,"title":{},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["list.ts:7",{"_index":781,"title":{},"body":{"classes/StationList.html":{}}}],["lng",{"_index":740,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["lodz",{"_index":883,"title":{},"body":{"classes/StationList.html":{}}}],["lon",{"_index":459,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["long",{"_index":469,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["longitude",{"_index":639,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lonlat",{"_index":454,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["lonlat[0",{"_index":460,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["lonlat[1",{"_index":462,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["lub",{"_index":287,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["lublin",{"_index":898,"title":{},"body":{"classes/StationList.html":{}}}],["ma",{"_index":105,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["macierz",{"_index":346,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["main",{"_index":366,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["mainpage",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["maksymaln",{"_index":281,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["maksymalna",{"_index":372,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["maksymalne",{"_index":1048,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["maksymalnych",{"_index":292,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["map",{"_index":165,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["map\").animate",{"_index":403,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["map((data",{"_index":209,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["map__bialystok",{"_index":475,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["mapa",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["mapcomponentcomponent",{"_index":164,"title":{"components/MapComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapie",{"_index":396,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["mapy",{"_index":421,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["margin",{"_index":488,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["marker",{"_index":727,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":303,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["max.tostring",{"_index":330,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["max/min",{"_index":353,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["maxdate",{"_index":304,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["maxdate.tostring",{"_index":332,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["maxzoom",{"_index":434,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["message",{"_index":629,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["metadata",{"_index":61,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["meteo",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"classes/MeteoStatsModel.html":{}}}],["meteoapp",{"_index":1269,"title":{},"body":{"index.html":{}}}],["meteostat",{"_index":571,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["meteostatsdata",{"_index":497,"title":{"classes/MeteoStatsData.html":{}},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["meteostatsmodel",{"_index":540,"title":{"classes/MeteoStatsModel.html":{}},"body":{"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["meteostatsservice",{"_index":546,"title":{"injectables/MeteoStatsService.html":{}},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["methods",{"_index":69,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miasta",{"_index":360,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["miasto",{"_index":1083,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["miejsc",{"_index":122,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["miejsca",{"_index":41,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["miejscowo",{"_index":1021,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miejscowości",{"_index":412,"title":{},"body":{"components/MapComponentComponent.html":{},"classes/Station.html":{},"classes/StationList.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miejscu",{"_index":744,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["miejsowo",{"_index":1013,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["miesięczne",{"_index":583,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["miesięczny",{"_index":967,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["miesięcznych",{"_index":961,"title":{},"body":{"classes/StatisticType.html":{}}}],["mieście",{"_index":1082,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["mikolajki",{"_index":835,"title":{},"body":{"classes/StationList.html":{}}}],["min",{"_index":305,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["min.tostring",{"_index":326,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minadate",{"_index":306,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minadate.tostring",{"_index":328,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minimaln",{"_index":280,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["minimalna",{"_index":371,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["minimalne",{"_index":1050,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["minimalnych",{"_index":291,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["miscellaneous",{"_index":1323,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mlawa",{"_index":831,"title":{},"body":{"classes/StationList.html":{}}}],["mode",{"_index":1137,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["model",{"_index":543,"title":{},"body":{"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{}}}],["model.ts",{"_index":542,"title":{},"body":{"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["model.ts:7",{"_index":545,"title":{},"body":{"classes/MeteoStatsModel.html":{}}}],["models/station",{"_index":783,"title":{},"body":{"classes/StationList.html":{}}}],["models/stats",{"_index":569,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["module",{"_index":201,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"overview.html":{}}}],["module.ts",{"_index":7,"title":{},"body":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{},"coverage.html":{}}}],["module.ts:11",{"_index":42,"title":{},"body":{"classes/AirData.html":{}}}],["module.ts:14",{"_index":1175,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:15",{"_index":1176,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:16",{"_index":1174,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:17",{"_index":1177,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:24",{"_index":344,"title":{},"body":{"classes/ForecastData.html":{}}}],["module.ts:3",{"_index":179,"title":{},"body":{"classes/AirQualityData.html":{}}}],["module.ts:31",{"_index":357,"title":{},"body":{"classes/ForecastData.html":{}}}],["module.ts:4",{"_index":23,"title":{},"body":{"classes/AirData.html":{}}}],["module.ts:5",{"_index":1173,"title":{},"body":{"classes/WeatherData.html":{}}}],["modules",{"_index":229,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mog",{"_index":115,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/Station.html":{}}}],["momencie",{"_index":369,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["monthly",{"_index":597,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["more",{"_index":1310,"title":{},"body":{"index.html":{}}}],["movetobottom",{"_index":1131,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["movetoleft",{"_index":1147,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["możemy",{"_index":1196,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["możliwych",{"_index":765,"title":{},"body":{"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{}}}],["móg",{"_index":135,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["na",{"_index":106,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["nacisnięcie",{"_index":1029,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["najbliższe",{"_index":339,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nas",{"_index":624,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["nastepnie",{"_index":622,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["następnie",{"_index":642,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["następujących",{"_index":505,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["nasłonecznienie",{"_index":514,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["nav",{"_index":1099,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav\").fadeto(\"slow",{"_index":1066,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__btn",{"_index":1144,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__btn:hover",{"_index":1150,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__input",{"_index":1126,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__input:hover",{"_index":1139,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__error",{"_index":1160,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["navigate",{"_index":1280,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1097,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nazw",{"_index":1077,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nazwa",{"_index":359,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["nazwy",{"_index":1041,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["new",{"_index":211,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":1253,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":423,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["ngmodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":70,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["nie",{"_index":1075,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["niegu",{"_index":509,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["niej",{"_index":994,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["none",{"_index":1153,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["northresults",{"_index":378,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["nowy",{"_index":940,"title":{},"body":{"classes/StationList.html":{}}}],["null",{"_index":1078,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["number",{"_index":175,"title":{},"body":{"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/WeatherData.html":{}}}],["o",{"_index":13,"title":{},"body":{"classes/AirData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["obiekt",{"_index":501,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["obiektu",{"_index":544,"title":{},"body":{"classes/MeteoStatsModel.html":{}}}],["obiektów",{"_index":506,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["obieku",{"_index":10,"title":{},"body":{"classes/AirData.html":{}}}],["object",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obok",{"_index":126,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["observable",{"_index":191,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["observable.throw(error.message",{"_index":762,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["odczuwalna",{"_index":370,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["odczytane",{"_index":341,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["odpowiadająca",{"_index":634,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["odpowiedni",{"_index":143,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["odpowiednie",{"_index":398,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["odpowiedniego",{"_index":99,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["odtępach",{"_index":958,"title":{},"body":{"classes/StatisticType.html":{}}}],["odwołuje",{"_index":1032,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["odwołujemy",{"_index":993,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ograniczenia",{"_index":769,"title":{},"body":{"classes/Station.html":{}}}],["okecie",{"_index":859,"title":{},"body":{"classes/StationList.html":{}}}],["okien",{"_index":1063,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["określa",{"_index":954,"title":{},"body":{"classes/StatisticType.html":{}}}],["określająca",{"_index":376,"title":{},"body":{"classes/ForecastData.html":{},"classes/StatisticType.html":{},"classes/WeatherData.html":{}}}],["określający",{"_index":355,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["ol",{"_index":632,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.feature",{"_index":690,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.geom.point(ol.proj.transform([longitude",{"_index":692,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.layer.tile",{"_index":444,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.layer.vector",{"_index":687,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.map",{"_index":441,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.overlay",{"_index":657,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.proj.fromlonlat([23.1688403",{"_index":448,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.proj.transform(args.coordinate",{"_index":455,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.source.osm",{"_index":445,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.source.vector",{"_index":688,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.style.icon",{"_index":696,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.style.style",{"_index":694,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.view",{"_index":447,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["olsztyn",{"_index":833,"title":{},"body":{"classes/StationList.html":{}}}],["ona",{"_index":127,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["oninit",{"_index":60,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["opacity",{"_index":404,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["opad",{"_index":507,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["openstreetmap",{"_index":438,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["openweathermap.org",{"_index":1171,"title":{},"body":{"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["openwethermap.org",{"_index":1188,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["opeweathermap.org",{"_index":342,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["opis",{"_index":713,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["opisanym",{"_index":745,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["opisująca",{"_index":337,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["opisujące",{"_index":1189,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["opole",{"_index":909,"title":{},"body":{"classes/StationList.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["oraz",{"_index":282,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{}}}],["osatecznie",{"_index":277,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["ospowiednie",{"_index":1000,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ostroleka",{"_index":837,"title":{},"body":{"classes/StationList.html":{}}}],["out",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":1170,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["overview",{"_index":1319,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1246,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1127,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["param",{"_index":44,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["parametr",{"_index":1012,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["parametrami",{"_index":367,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["path",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["peakgust",{"_index":515,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pi",{"_index":1190,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["pierwsza",{"_index":419,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pierwszej",{"_index":1064,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pila",{"_index":825,"title":{},"body":{"classes/StationList.html":{}}}],["pin",{"_index":681,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pipe",{"_index":198,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["placement",{"_index":663,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["plock",{"_index":850,"title":{},"body":{"classes/StationList.html":{}}}],["pm1",{"_index":707,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pm10",{"_index":709,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pm25",{"_index":710,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["po",{"_index":91,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pobiera",{"_index":742,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["pobierająca",{"_index":572,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["pobierającymi",{"_index":1179,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["pobieramy",{"_index":753,"title":{},"body":{"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["pobierane",{"_index":1002,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["pobieranie",{"_index":605,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["pobierz",{"_index":146,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pobior",{"_index":391,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pobrane",{"_index":35,"title":{},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["pobranego",{"_index":409,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pobrania",{"_index":771,"title":{},"body":{"classes/Station.html":{}}}],["pobranych",{"_index":503,"title":{},"body":{"classes/MeteoStatsData.html":{},"components/QualityComponentComponent.html":{}}}],["początkow",{"_index":318,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["pod",{"_index":610,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["poda",{"_index":362,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["podane",{"_index":294,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["podanej",{"_index":1019,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["podanym",{"_index":574,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["podmuch",{"_index":513,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["podstawie",{"_index":393,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["podstawowe",{"_index":1059,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pogod",{"_index":356,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["pogoda",{"_index":1084,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pogodowe",{"_index":350,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pogody",{"_index":338,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pojawi",{"_index":397,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["poka",{"_index":1031,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["policzone",{"_index":768,"title":{},"body":{"classes/Station.html":{}}}],["polsce",{"_index":102,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pom",{"_index":792,"title":{},"body":{"classes/StationList.html":{}}}],["pomiar",{"_index":140,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiarowego",{"_index":100,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiarowych",{"_index":123,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiaru",{"_index":98,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["pomiary",{"_index":957,"title":{},"body":{"classes/StatisticType.html":{}}}],["poprzenie",{"_index":417,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["poprzez",{"_index":746,"title":{},"body":{"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{}}}],["popup",{"_index":645,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popup.getelement",{"_index":660,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popup.setposition(ol.proj.fromlonlat([longitude",{"_index":661,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["position",{"_index":473,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["powietrza",{"_index":15,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"miscellaneous/variables.html":{}}}],["poziom",{"_index":712,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["poznan",{"_index":846,"title":{},"body":{"classes/StationList.html":{}}}],["pozycja",{"_index":646,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["precipitation",{"_index":516,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pressure",{"_index":517,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["private",{"_index":181,"title":{},"body":{"classes/AirQualityData.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["prod",{"_index":1296,"title":{},"body":{"index.html":{}}}],["production",{"_index":1298,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prognoz",{"_index":998,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["prognozy",{"_index":992,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["project",{"_index":1270,"title":{},"body":{"index.html":{}}}],["properties",{"_index":17,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["protractor",{"_index":1307,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":202,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["providers",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["przechowuje",{"_index":1045,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przechowująca",{"_index":317,"title":{},"body":{"classes/CalculatedProps.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["przechowującego",{"_index":11,"title":{},"body":{"classes/AirData.html":{}}}],["przechowywa",{"_index":34,"title":{},"body":{"classes/AirData.html":{}}}],["przechowywane",{"_index":349,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["przedziale",{"_index":575,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["przedziału",{"_index":319,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["przemysl",{"_index":945,"title":{},"body":{"classes/StationList.html":{}}}],["przerzuca",{"_index":623,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["przez",{"_index":607,"title":{},"body":{"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["przy",{"_index":778,"title":{},"body":{"classes/StationList.html":{},"components/WeatherComponentComponent.html":{}}}],["przycisku",{"_index":1030,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przypadku",{"_index":290,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["przypisane",{"_index":641,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["przypisanie",{"_index":609,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["przypisujemy",{"_index":1007,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przód",{"_index":1198,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["prędko",{"_index":511,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["public",{"_index":18,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pulawy",{"_index":896,"title":{},"body":{"classes/StationList.html":{}}}],["pyrzowice",{"_index":915,"title":{},"body":{"classes/StationList.html":{}}}],["póki",{"_index":103,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["quality",{"_index":56,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["quality.service",{"_index":84,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["quality.service.ts",{"_index":184,"title":{},"body":{"injectables/AirQualityService.html":{},"coverage.html":{}}}],["quality.service.ts:10",{"_index":188,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality.service.ts:14",{"_index":196,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality.service.ts:16",{"_index":190,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality/air",{"_index":83,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["qualitycomponentcomponent",{"_index":166,"title":{"components/QualityComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["qualityserviceservice",{"_index":600,"title":{"injectables/QualityServiceService.html":{}},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["raciborz",{"_index":911,"title":{},"body":{"classes/StationList.html":{}}}],["radawiec",{"_index":899,"title":{},"body":{"classes/StationList.html":{}}}],["radius",{"_index":730,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["radom",{"_index":889,"title":{},"body":{"classes/StationList.html":{}}}],["readme",{"_index":1313,"title":{},"body":{"index.html":{}}}],["rebiechowo",{"_index":805,"title":{},"body":{"classes/StationList.html":{}}}],["records",{"_index":653,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["redirectto",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redni",{"_index":283,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["relative",{"_index":1168,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["reload",{"_index":1283,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":1107,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["reprezentujace",{"_index":400,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["reprezentująca",{"_index":500,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{}}}],["require",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resko",{"_index":821,"title":{},"body":{"classes/StationList.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.current.indexes[0].description",{"_index":719,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.indexes[0].level",{"_index":718,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.indexes[0].value",{"_index":717,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[0].value",{"_index":714,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[1].value",{"_index":716,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[2].value",{"_index":715,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.id",{"_index":147,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result.stindexlevel.indexlevelname",{"_index":149,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result.stsourcedatadate",{"_index":151,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result[0].main.feels_like",{"_index":1088,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.humidity",{"_index":1093,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.pressure",{"_index":1091,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp",{"_index":1086,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp_max",{"_index":1090,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp_min",{"_index":1089,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].name",{"_index":1085,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results[0].current.indexes[0].description",{"_index":673,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.indexes[0].level",{"_index":672,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.indexes[0].value",{"_index":671,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.values[0].value",{"_index":668,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.values[1].value",{"_index":670,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.values[2].value",{"_index":669,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["resultsforecast",{"_index":978,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartdata",{"_index":979,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartmaxtemp",{"_index":980,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartmintemp",{"_index":981,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttocharttemp",{"_index":982,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsweather",{"_index":983,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultweather",{"_index":1016,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["retruns",{"_index":1199,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["return",{"_index":86,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["returns",{"_index":77,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["rgba(172,91,0,0.88",{"_index":1164,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rgba(74,100,107,0.8",{"_index":726,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["right",{"_index":486,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["root",{"_index":203,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["root'},{'name",{"_index":163,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["routablecomponent",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":263,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1277,"title":{},"body":{"index.html":{}}}],["running",{"_index":1299,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":199,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/throw",{"_index":758,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/add/operator/catch",{"_index":757,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/observable",{"_index":755,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/operators",{"_index":200,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rysowania",{"_index":1010,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rysująca",{"_index":990,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rzeszow",{"_index":925,"title":{},"body":{"classes/StationList.html":{}}}],["równie",{"_index":296,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["s",{"_index":323,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["sacz",{"_index":941,"title":{},"body":{"classes/StationList.html":{}}}],["sandomierz",{"_index":928,"title":{},"body":{"classes/StationList.html":{}}}],["sans",{"_index":1119,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["scaffolding",{"_index":1287,"title":{},"body":{"index.html":{}}}],["scale",{"_index":702,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["scrollbar",{"_index":1167,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["selector",{"_index":62,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["serif",{"_index":1120,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["serve",{"_index":1278,"title":{},"body":{"index.html":{}}}],["server",{"_index":763,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"index.html":{}}}],["service",{"_index":75,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["service.service",{"_index":386,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["service.service.ts",{"_index":735,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["service.service.ts:21",{"_index":1192,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:25",{"_index":738,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["service.service.ts:26",{"_index":1181,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:34",{"_index":1182,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:38",{"_index":741,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["service.service.ts:55",{"_index":1187,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["services/quality/quality",{"_index":628,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["services/weather/weather",{"_index":385,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["shadow",{"_index":722,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["showairdata",{"_index":71,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["showcontent",{"_index":987,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["showing",{"_index":654,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["si",{"_index":130,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/WeatherComponentComponent.html":{}}}],["sie",{"_index":684,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["siedlce",{"_index":861,"title":{},"body":{"classes/StationList.html":{}}}],["size",{"_index":1161,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["siły",{"_index":288,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["skrajne",{"_index":301,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["sky",{"_index":1103,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["skąd",{"_index":137,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["składa",{"_index":504,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["składający",{"_index":502,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{}}}],["slubice",{"_index":844,"title":{},"body":{"classes/StationList.html":{}}}],["sniezka",{"_index":905,"title":{},"body":{"classes/StationList.html":{}}}],["snowdepth",{"_index":518,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["snowfall",{"_index":519,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["solid",{"_index":493,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"index.html":{}}}],["space",{"_index":1151,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["spacing",{"_index":1125,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["spec\\.ts",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sprawd",{"_index":1080,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["sprawdzenia",{"_index":1200,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["src",{"_index":704,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["src/.../app",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../quality",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statistic",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stats",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/air",{"_index":55,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/map/map",{"_index":377,"title":{},"body":{"components/MapComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/quality/quality",{"_index":598,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/stats",{"_index":1220,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/weather/weather",{"_index":976,"title":{},"body":{"components/WeatherComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/calculated",{"_index":968,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["src/app/models/meteo",{"_index":498,"title":{},"body":{"classes/MeteoStatsData.html":{},"coverage.html":{}}}],["src/app/models/station.ts",{"_index":764,"title":{},"body":{"classes/Station.html":{},"coverage.html":{}}}],["src/app/models/station.ts:5",{"_index":772,"title":{},"body":{"classes/Station.html":{}}}],["src/app/models/station.ts:6",{"_index":773,"title":{},"body":{"classes/Station.html":{}}}],["src/app/models/statistic",{"_index":948,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/statistics.ts",{"_index":275,"title":{},"body":{"classes/CalculatedProps.html":{},"coverage.html":{}}}],["src/app/models/statistics.ts:21",{"_index":314,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:22",{"_index":316,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:23",{"_index":312,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:24",{"_index":313,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:25",{"_index":311,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/stats",{"_index":541,"title":{},"body":{"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["src/app/services/air",{"_index":82,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["src/app/services/meteo",{"_index":547,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{},"coverage.html":{}}}],["src/app/services/quality/quality",{"_index":6,"title":{},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["src/app/services/weather/weather",{"_index":336,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1239,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1241,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1242,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacji",{"_index":573,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stan",{"_index":96,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["stanem",{"_index":1018,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["stanie",{"_index":1194,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["stany",{"_index":148,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["start",{"_index":588,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["started",{"_index":1268,"title":{"index.html":{}},"body":{}}],["stat/meteo",{"_index":548,"title":{},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["stat/station",{"_index":776,"title":{},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["statements",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["station",{"_index":558,"title":{"classes/Station.html":{}},"body":{"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"coverage.html":{}}}],["station(12100",{"_index":786,"title":{},"body":{"classes/StationList.html":{}}}],["station(12105",{"_index":788,"title":{},"body":{"classes/StationList.html":{}}}],["station(12106",{"_index":790,"title":{},"body":{"classes/StationList.html":{}}}],["station(12115",{"_index":793,"title":{},"body":{"classes/StationList.html":{}}}],["station(12120",{"_index":795,"title":{},"body":{"classes/StationList.html":{}}}],["station(12125",{"_index":797,"title":{},"body":{"classes/StationList.html":{}}}],["station(12135",{"_index":799,"title":{},"body":{"classes/StationList.html":{}}}],["station(12145",{"_index":801,"title":{},"body":{"classes/StationList.html":{}}}],["station(12150",{"_index":803,"title":{},"body":{"classes/StationList.html":{}}}],["station(12155",{"_index":806,"title":{},"body":{"classes/StationList.html":{}}}],["station(12160",{"_index":808,"title":{},"body":{"classes/StationList.html":{}}}],["station(12185",{"_index":810,"title":{},"body":{"classes/StationList.html":{}}}],["station(12195",{"_index":812,"title":{},"body":{"classes/StationList.html":{}}}],["station(12200",{"_index":814,"title":{},"body":{"classes/StationList.html":{}}}],["station(12205",{"_index":816,"title":{},"body":{"classes/StationList.html":{}}}],["station(12206",{"_index":818,"title":{},"body":{"classes/StationList.html":{}}}],["station(12210",{"_index":820,"title":{},"body":{"classes/StationList.html":{}}}],["station(12215",{"_index":822,"title":{},"body":{"classes/StationList.html":{}}}],["station(12230",{"_index":824,"title":{},"body":{"classes/StationList.html":{}}}],["station(12235",{"_index":826,"title":{},"body":{"classes/StationList.html":{}}}],["station(12250",{"_index":828,"title":{},"body":{"classes/StationList.html":{}}}],["station(12270",{"_index":830,"title":{},"body":{"classes/StationList.html":{}}}],["station(12272",{"_index":832,"title":{},"body":{"classes/StationList.html":{}}}],["station(12280",{"_index":834,"title":{},"body":{"classes/StationList.html":{}}}],["station(12285",{"_index":836,"title":{},"body":{"classes/StationList.html":{}}}],["station(12295",{"_index":838,"title":{},"body":{"classes/StationList.html":{}}}],["station(12300",{"_index":840,"title":{},"body":{"classes/StationList.html":{}}}],["station(12310",{"_index":843,"title":{},"body":{"classes/StationList.html":{}}}],["station(12330",{"_index":845,"title":{},"body":{"classes/StationList.html":{}}}],["station(12345",{"_index":847,"title":{},"body":{"classes/StationList.html":{}}}],["station(12360",{"_index":849,"title":{},"body":{"classes/StationList.html":{}}}],["station(12365",{"_index":851,"title":{},"body":{"classes/StationList.html":{}}}],["station(12372",{"_index":853,"title":{},"body":{"classes/StationList.html":{}}}],["station(12374",{"_index":856,"title":{},"body":{"classes/StationList.html":{}}}],["station(12375",{"_index":858,"title":{},"body":{"classes/StationList.html":{}}}],["station(12385",{"_index":860,"title":{},"body":{"classes/StationList.html":{}}}],["station(12399",{"_index":862,"title":{},"body":{"classes/StationList.html":{}}}],["station(12400",{"_index":864,"title":{},"body":{"classes/StationList.html":{}}}],["station(12415",{"_index":867,"title":{},"body":{"classes/StationList.html":{}}}],["station(12418",{"_index":870,"title":{},"body":{"classes/StationList.html":{}}}],["station(12424",{"_index":873,"title":{},"body":{"classes/StationList.html":{}}}],["station(12425",{"_index":877,"title":{},"body":{"classes/StationList.html":{}}}],["station(12435",{"_index":878,"title":{},"body":{"classes/StationList.html":{}}}],["station(12455",{"_index":880,"title":{},"body":{"classes/StationList.html":{}}}],["station(12465",{"_index":882,"title":{},"body":{"classes/StationList.html":{}}}],["station(12469",{"_index":884,"title":{},"body":{"classes/StationList.html":{}}}],["station(12471",{"_index":886,"title":{},"body":{"classes/StationList.html":{}}}],["station(12485",{"_index":888,"title":{},"body":{"classes/StationList.html":{}}}],["station(12488",{"_index":890,"title":{},"body":{"classes/StationList.html":{}}}],["station(12490",{"_index":892,"title":{},"body":{"classes/StationList.html":{}}}],["station(12491",{"_index":895,"title":{},"body":{"classes/StationList.html":{}}}],["station(12495",{"_index":897,"title":{},"body":{"classes/StationList.html":{}}}],["station(12497",{"_index":900,"title":{},"body":{"classes/StationList.html":{}}}],["station(12500",{"_index":902,"title":{},"body":{"classes/StationList.html":{}}}],["station(12510",{"_index":904,"title":{},"body":{"classes/StationList.html":{}}}],["station(12520",{"_index":906,"title":{},"body":{"classes/StationList.html":{}}}],["station(12530",{"_index":908,"title":{},"body":{"classes/StationList.html":{}}}],["station(12540",{"_index":910,"title":{},"body":{"classes/StationList.html":{}}}],["station(12550",{"_index":912,"title":{},"body":{"classes/StationList.html":{}}}],["station(12555",{"_index":914,"title":{},"body":{"classes/StationList.html":{}}}],["station(12560",{"_index":916,"title":{},"body":{"classes/StationList.html":{}}}],["station(12566",{"_index":918,"title":{},"body":{"classes/StationList.html":{}}}],["station(12570",{"_index":920,"title":{},"body":{"classes/StationList.html":{}}}],["station(12575",{"_index":922,"title":{},"body":{"classes/StationList.html":{}}}],["station(12580",{"_index":924,"title":{},"body":{"classes/StationList.html":{}}}],["station(12585",{"_index":927,"title":{},"body":{"classes/StationList.html":{}}}],["station(12595",{"_index":929,"title":{},"body":{"classes/StationList.html":{}}}],["station(12600",{"_index":931,"title":{},"body":{"classes/StationList.html":{}}}],["station(12625",{"_index":934,"title":{},"body":{"classes/StationList.html":{}}}],["station(12650",{"_index":936,"title":{},"body":{"classes/StationList.html":{}}}],["station(12660",{"_index":939,"title":{},"body":{"classes/StationList.html":{}}}],["station(12690",{"_index":942,"title":{},"body":{"classes/StationList.html":{}}}],["station(12695",{"_index":944,"title":{},"body":{"classes/StationList.html":{}}}],["stationlist",{"_index":775,"title":{"classes/StationList.html":{}},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["statistics",{"_index":268,"title":{"classes/Statistics.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Statistics.html":{},"coverage.html":{}}}],["statistictype",{"_index":947,"title":{"classes/StatisticType.html":{}},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statistictypelist",{"_index":964,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stats",{"_index":168,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["stats.service.ts",{"_index":549,"title":{},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["stats.service.ts:17",{"_index":565,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:18",{"_index":567,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:19",{"_index":568,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:20",{"_index":556,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:23",{"_index":561,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:30",{"_index":563,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.ts",{"_index":969,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["stats.ts:13",{"_index":974,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:14",{"_index":973,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:15",{"_index":975,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:3",{"_index":972,"title":{},"body":{"classes/Statistics.html":{}}}],["statscomponentcomponent",{"_index":167,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["statstype",{"_index":553,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["statystyk",{"_index":578,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{}}}],["statystyki",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{}}}],["statysyk",{"_index":780,"title":{},"body":{"classes/StationList.html":{}}}],["stindexlevel",{"_index":176,"title":{},"body":{"classes/AirQualityData.html":{}}}],["stored",{"_index":1293,"title":{},"body":{"index.html":{}}}],["string",{"_index":177,"title":{},"body":{"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["strona",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["stronie",{"_index":616,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["strzaleczka",{"_index":682,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["strzałki",{"_index":399,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["strzyzewice",{"_index":872,"title":{},"body":{"classes/StationList.html":{}}}],["stsourcedatadate",{"_index":178,"title":{},"body":{"classes/AirQualityData.html":{}}}],["style",{"_index":693,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["styles",{"_index":52,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["styleurls",{"_index":65,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((data",{"_index":414,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((records",{"_index":652,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((results",{"_index":88,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["sulejow",{"_index":885,"title":{},"body":{"classes/StationList.html":{}}}],["summer",{"_index":1104,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["sunshine",{"_index":520,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["support",{"_index":1314,"title":{},"body":{"modules.html":{}}}],["suwalki",{"_index":813,"title":{},"body":{"classes/StationList.html":{}}}],["sv8wb734fm470c2hys8atebfrng5lzu9",{"_index":208,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["svg",{"_index":1315,"title":{},"body":{"modules.html":{}}}],["swibno",{"_index":807,"title":{},"body":{"classes/StationList.html":{}}}],["swinoujscie",{"_index":815,"title":{},"body":{"classes/StationList.html":{}}}],["switch",{"_index":592,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["swoim",{"_index":1081,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["szczecin",{"_index":817,"title":{},"body":{"classes/StationList.html":{}}}],["szczecinek",{"_index":823,"title":{},"body":{"classes/StationList.html":{}}}],["szczytowy",{"_index":512,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["szeroko",{"_index":747,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["szerokości",{"_index":635,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["sztywno",{"_index":107,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["t",{"_index":117,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tabel",{"_index":1027,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["tabela",{"_index":132,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tabeli",{"_index":644,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":152,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["tablicy",{"_index":408,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["tak",{"_index":128,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tam",{"_index":683,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["target",{"_index":442,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["tarnow",{"_index":923,"title":{},"body":{"classes/StationList.html":{}}}],["te",{"_index":300,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["tego",{"_index":113,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["temperatur",{"_index":1008,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["temperatura",{"_index":352,"title":{},"body":{"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["temperature",{"_index":521,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["temperaturemax",{"_index":522,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["temperaturemin",{"_index":523,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["temperatury",{"_index":285,"title":{},"body":{"classes/CalculatedProps.html":{},"components/WeatherComponentComponent.html":{}}}],["template",{"_index":51,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["templateurl",{"_index":67,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["terespol",{"_index":863,"title":{},"body":{"classes/StationList.html":{}}}],["term",{"_index":383,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["test",{"_index":1302,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1301,"title":{},"body":{"index.html":{}}}],["text",{"_index":1121,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.apibaseurl",{"_index":586,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.apikey",{"_index":590,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.apiurl",{"_index":585,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.average",{"_index":333,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.errormsg",{"_index":1074,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.getdatabialystok(\"białystok",{"_index":401,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.gettype(type",{"_index":584,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.http",{"_index":204,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["this.initmap",{"_index":424,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.map",{"_index":426,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["this.map.addlayer(vectorlayer",{"_index":706,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["this.map.addoverlay(popup",{"_index":659,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["this.map.on('click",{"_index":450,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["this.max",{"_index":329,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.maxdate",{"_index":331,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.min",{"_index":325,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.minadate",{"_index":327,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.northresults.push(data[0].list[0].wind.deg",{"_index":416,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.results",{"_index":90,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["this.resultsweather.push(records",{"_index":1072,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.service",{"_index":650,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["this.service.getairdata",{"_index":87,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["this.service.getweatherforecastdata(term",{"_index":413,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.stationlist",{"_index":784,"title":{},"body":{"classes/StationList.html":{}}}],["this.stationlist.push(new",{"_index":785,"title":{},"body":{"classes/StationList.html":{}}}],["this.stationlist.sort",{"_index":946,"title":{},"body":{"classes/StationList.html":{}}}],["this.statstype",{"_index":587,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["tiles",{"_index":432,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["tiles.addto(this.map",{"_index":439,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["title",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":477,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["torun",{"_index":829,"title":{},"body":{"classes/StationList.html":{}}}],["transform",{"_index":1122,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["transition",{"_index":1142,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["tree",{"_index":54,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["true",{"_index":666,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["trzeba",{"_index":678,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["trzy",{"_index":952,"title":{},"body":{"classes/StatisticType.html":{}}}],["tslib",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["tutaj",{"_index":124,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tworzenie",{"_index":9,"title":{},"body":{"classes/AirData.html":{}}}],["tych",{"_index":394,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["typ",{"_index":950,"title":{},"body":{"classes/StatisticType.html":{}}}],["type",{"_index":29,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":949,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.ts:6",{"_index":962,"title":{},"body":{"classes/StatisticType.html":{}}}],["type.ts:7",{"_index":963,"title":{},"body":{"classes/StatisticType.html":{}}}],["typie",{"_index":577,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["typy",{"_index":953,"title":{},"body":{"classes/StatisticType.html":{}}}],["unit",{"_index":1300,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":737,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["uppercase",{"_index":1123,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["url(https://www.setaswall.com/wp",{"_index":1101,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["use",{"_index":1289,"title":{},"body":{"index.html":{}}}],["user",{"_index":655,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ustka",{"_index":794,"title":{},"body":{"classes/StationList.html":{}}}],["uzyska",{"_index":1197,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["uzyskanych",{"_index":1004,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["użytkowniaka",{"_index":648,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["użytkownik",{"_index":133,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["użytkownika",{"_index":608,"title":{},"body":{"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["value",{"_index":193,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":159,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["variable",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1324,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vectorlayer",{"_index":686,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["version",{"_index":1274,"title":{},"body":{"index.html":{}}}],["via",{"_index":1304,"title":{},"body":{"index.html":{}}}],["view",{"_index":446,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["viewencapsulation",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.none",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":363,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["void",{"_index":78,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["w",{"_index":101,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["wallpaper",{"_index":1105,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["warszawa",{"_index":854,"title":{},"body":{"classes/StationList.html":{}}}],["warto",{"_index":284,"title":{},"body":{"classes/CalculatedProps.html":{},"components/QualityComponentComponent.html":{}}}],["wartości",{"_index":293,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["wczyta",{"_index":116,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["weather",{"_index":170,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["weathercomponentcomponent",{"_index":169,"title":{"components/WeatherComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["weatherdata",{"_index":358,"title":{"classes/WeatherData.html":{}},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["weatherdata(item.name",{"_index":1203,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["weatherserviceservice",{"_index":380,"title":{"injectables/WeatherServiceService.html":{}},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["wersja",{"_index":420,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wersje",{"_index":418,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wiatru",{"_index":289,"title":{},"body":{"classes/CalculatedProps.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{}}}],["width",{"_index":153,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["wielun",{"_index":881,"title":{},"body":{"classes/StationList.html":{}}}],["wierch",{"_index":938,"title":{},"body":{"classes/StationList.html":{}}}],["wilgotno",{"_index":374,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["winddirection",{"_index":524,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["windpower",{"_index":970,"title":{},"body":{"classes/Statistics.html":{}}}],["windspeed",{"_index":525,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["wlkp",{"_index":842,"title":{},"body":{"classes/StationList.html":{}}}],["wlodawa",{"_index":901,"title":{},"body":{"classes/StationList.html":{}}}],["wpisze",{"_index":141,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wprowadzaniu",{"_index":1040,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wprowadzeniu",{"_index":92,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wprowadzono",{"_index":1076,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wroclaw",{"_index":874,"title":{},"body":{"classes/StationList.html":{}}}],["współrzędna",{"_index":633,"title":{},"body":{"components/QualityComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["współrzędne",{"_index":647,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["współrzędnych",{"_index":619,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wszelki",{"_index":675,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wszystkich",{"_index":121,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["wtedy",{"_index":142,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wyboru",{"_index":766,"title":{},"body":{"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{}}}],["wybra",{"_index":136,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wybran",{"_index":1186,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wybranego",{"_index":606,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wybranej",{"_index":1185,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wybranym",{"_index":743,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["wyciąga",{"_index":1183,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wyciągamy",{"_index":1006,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyciągnięte",{"_index":1047,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykorzystujemy",{"_index":1009,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykres",{"_index":991,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykresem",{"_index":1035,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykresu",{"_index":1011,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wynik",{"_index":144,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wynikaj",{"_index":770,"title":{},"body":{"classes/Station.html":{}}}],["wypadek",{"_index":676,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wyskoczy",{"_index":145,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wywołanie",{"_index":388,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wyznaczająca",{"_index":278,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["wyznaczaniu",{"_index":779,"title":{},"body":{"classes/StationList.html":{}}}],["wyświetlamy",{"_index":1022,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlane",{"_index":1056,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlania",{"_index":618,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wyświetlanie",{"_index":1026,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlenia",{"_index":615,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["wyświetli",{"_index":131,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wyświetlon",{"_index":625,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wyświetlone",{"_index":643,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["x.dt_txt",{"_index":1094,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["x.main.temp_max",{"_index":1095,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["x.main.temp_min",{"_index":1096,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["z",{"_index":36,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["za",{"_index":1054,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["zadeklarowane",{"_index":108,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["zakopane",{"_index":935,"title":{},"body":{"classes/StationList.html":{}}}],["zamosc",{"_index":930,"title":{},"body":{"classes/StationList.html":{}}}],["zanotowano",{"_index":299,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zegrze",{"_index":791,"title":{},"body":{"classes/StationList.html":{}}}],["zielona",{"_index":865,"title":{},"body":{"classes/StationList.html":{}}}],["zmienn",{"_index":611,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["zmienna",{"_index":31,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["zmienne",{"_index":1001,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["znak",{"_index":354,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["znale",{"_index":139,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["zone.js",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"overview.html":{}}}],["zostaj",{"_index":295,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["zostan",{"_index":640,"title":{},"body":{"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["zwraca",{"_index":95,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AirData.html":{"url":"classes/AirData.html","title":"class - AirData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quality/quality-module.ts\n        \n\n            \n                Description\n            \n            \n                Tworzenie obieku przechowującego dane o jakości powietrza.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(current: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quality/quality-module.ts:4\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy 'AirData' \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Zmienna, która bedzie przechowywać dane o jakości powietrza \npobrane z api dla aktualnie klikniętego miejsca.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-module.ts:11\n                            \n                        \n\n                \n                    \n                        Zmienna, która bedzie przechowywać dane o jakości powietrza \npobrane z api dla aktualnie klikniętego miejsca.\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AirData {\n    /**\n     * Konstruktor klasy 'AirData' \n     * @param current Zmienna, która bedzie przechowywać dane o jakości powietrza \n     * pobrane z api dla aktualnie klikniętego miejsca.\n     */\n    constructor(\n        public current: any\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AirQualityComponentComponent.html":{"url":"components/AirQualityComponentComponent.html","title":"component - AirQualityComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AirQualityComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/air-quality-component/air-quality-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-air-quality-component\n            \n\n            \n                styleUrls\n                ./air-quality-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./air-quality-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                results\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AirQualityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/air-quality-component/air-quality-component.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AirQualityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAirData\n                        \n                        \n                    \n                \n            \n            \n                \nshowAirData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AirQualityService } from 'src/app/services/air-quality/air-quality.service';\n\n@Component({\n  selector: 'app-air-quality-component',\n  templateUrl: './air-quality-component.component.html',\n  styleUrls: ['./air-quality-component.component.css']\n})\nexport class AirQualityComponentComponent implements OnInit {\n\n  results: any;\n\n  constructor(private service: AirQualityService) { }\n\n  ngOnInit() {\n  }\n\n  showAirData() {\n    return this.service.getAirData()\n      .subscribe((results: any) => {\n        console.log(results);\n        this.results = results;\n      })\n  }\n}\n\n    \n\n    \n            Po wprowadzeniu id aplikacja zwraca stan powietrza i datę pomiaru dla odpowiedniego miejsca pomiarowego w polsce\n    Póki co aplikacja ma na sztywno zadeklarowane id pomiaru jako 52\n    Jeśli chcemy z tego korzystać to mogę wczytać tę całą dużą listę wszystkich miejsc pomiarowych tutaj gdzieś obok. Ona tak ładnie się wyświetli jako tabela i użytkownik będzie mógł wybrać skąd chce znaleźć pomiar. Wpisze wtedy odpowiedni ID i wynik wyskoczy\n\n\n    \n    Pobierz dane!\n\n\n\n\n    \n        \n            ID\n            {{result.id}}\n        \n\n        \n            Stany powietrza\n            {{result.stIndexLevel.indexLevelName}}\n        \n\n        \n            Data pomiaru\n            {{result.stSourceDataDate}}\n        \n    \n\n    \n\n    \n                \n                    ./air-quality-component.component.css\n                \n                .table{\n    width: 20%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Po wprowadzeniu id aplikacja zwraca stan powietrza i datę pomiaru dla odpowiedniego miejsca pomiarowego w polsce    Póki co aplikacja ma na sztywno zadeklarowane id pomiaru jako 52    Jeśli chcemy z tego korzystać to mogę wczytać tę całą dużą listę wszystkich miejsc pomiarowych tutaj gdzieś obok. Ona tak ładnie się wyświetli jako tabela i użytkownik będzie mógł wybrać skąd chce znaleźć pomiar. Wpisze wtedy odpowiedni ID i wynik wyskoczy        Pobierz dane!                        ID            {{result.id}}                            Stany powietrza            {{result.stIndexLevel.indexLevelName}}                            Data pomiaru            {{result.stSourceDataDate}}            '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AirQualityComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AirQualityData.html":{"url":"classes/AirQualityData.html","title":"class - AirQualityData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirQualityData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/air-quality/air-quality-module.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, stIndexLevel: string, stSourceDataDate: Data)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/air-quality/air-quality-module.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stIndexLevel\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stSourceDataDate\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Data } from '@angular/router';\n\nexport class AirQualityData {\n    constructor(\n        private id: number,\n        private stIndexLevel: string,\n        private stSourceDataDate: Data\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AirQualityService.html":{"url":"injectables/AirQualityService.html","title":"injectable - AirQualityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AirQualityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/air-quality/air-quality.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/air-quality/air-quality.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAirData\n                        \n                        \n                    \n                \n            \n            \n                \ngetAirData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/air-quality/air-quality.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://api.gios.gov.pl/pjp-api/rest/aqindex/getIndex/52'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/air-quality/air-quality.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { pipe, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AirQualityData } from './air-quality-module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AirQualityService {\n\n  constructor(private http: HttpClient) { }\n\n  api = 'http://api.gios.gov.pl/pjp-api/rest/aqindex/getIndex/52';\n\n  getAirData(): Observable {\n    return this.http\n      .get(this.api)        // airly kay:  SV8Wb734fM470C2HYs8atebFRNg5LzU9\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new AirQualityData(item.id, item.stIndexLevel, item.stSourceDataDate)))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'meteo-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'meteo-app';\n}\n\n    \n\n    \n        \n    Strona główna\n    Statystyki\n    Mapa\n    Jakość powietrza -->\n    Jakość powietrza\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Strona główna    Statystyki    Mapa    Jakość powietrza -->    Jakość powietrza'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponentComponent\n\nMapComponentComponent\n\nAppModule -->\n\nMapComponentComponent->AppModule\n\n\n\n\n\nQualityComponentComponent\n\nQualityComponentComponent\n\nAppModule -->\n\nQualityComponentComponent->AppModule\n\n\n\n\n\nStatsComponentComponent\n\nStatsComponentComponent\n\nAppModule -->\n\nStatsComponentComponent->AppModule\n\n\n\n\n\nWeatherComponentComponent\n\nWeatherComponentComponent\n\nAppModule -->\n\nWeatherComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            MapComponentComponent\n                        \n                        \n                            QualityComponentComponent\n                        \n                        \n                            StatsComponentComponent\n                        \n                        \n                            WeatherComponentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { WeatherComponentComponent } from './components/weather/weather-component.component';\nimport { MapComponentComponent } from './components/map/map-component.component';\nimport { StatsComponentComponent } from './components/stats-component/stats-component.component';\nimport { QualityComponentComponent } from './components/quality/quality-component.component';\n// import { AirQualityComponentComponent } from './components/air-quality-component/air-quality-component.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponentComponent,\n    MapComponentComponent,\n    StatsComponentComponent,\n    QualityComponentComponent\n    // AirQualityComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StatsComponentComponent } from './components/stats-component/stats-component.component';\nimport { WeatherComponentComponent } from './components/weather/weather-component.component';\nimport { MapComponentComponent } from './components/map/map-component.component';\nimport { QualityComponentComponent } from './components/quality/quality-component.component';\n// import { AirQualityComponentComponent } from './components/air-quality-component/air-quality-component.component';\n\n\nconst routes: Routes = [\n  { path: 'mainpage', component: WeatherComponentComponent },\n  { path: 'statistics', component: StatsComponentComponent },\n  { path: 'map', component: MapComponentComponent },\n  { path: 'quality', component: QualityComponentComponent },\n  // { path: 'air-quality', component: AirQualityComponentComponent },\n  { path: '', redirectTo: '/mainpage', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routableComponent = [\n  WeatherComponentComponent, StatsComponentComponent\n];\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CalculatedProps.html":{"url":"classes/CalculatedProps.html","title":"class - CalculatedProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CalculatedProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistics.ts\n        \n\n            \n                Description\n            \n            \n                Klasa osatecznie wyznaczająca statystyki, czyli minimalną, maksymalną oraz średnią wartość temperatury, ciśnienia lub siły wiatru.\nW przypadku minimalnych i maksymalnych wartości, podane zostają również daty, kiedy zanotowano te skrajne wartości.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                average\n                            \n                            \n                                    Public\n                                max\n                            \n                            \n                                    Public\n                                maxDate\n                            \n                            \n                                    Public\n                                min\n                            \n                            \n                                    Public\n                                minaDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: number, minaDate: Date, max: number, maxDate: Date, averageSum: number, dataCount: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistics.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        minaDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        averageSum\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            average\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:21\n                            \n                        \n\n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        min\n                                                \n                                                \n                                                        minaDate\n                                                \n                                                \n                                                        max\n                                                \n                                                \n                                                        maxDate\n                                                \n                                                \n                                                        avarageSum\n                                                \n                                                \n                                                        dataCount\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minaDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CalculatedProps {\n\n  /**\n   *\n   * @param min\n   * @param minaDate\n   * @param max\n   * @param maxDate\n   * @param avarageSum\n   * @param dataCount\n   */\n\n   /**\n    *\n    * Zmienna przechowująca początkową datę przedziału czasowego, dla którego generowane są statystyki.\n    */\n    public min: string;\n    public minaDate: string;\n    public max: string;\n    public maxDate: string;\n    public average: string;\n    constructor(min: number, minaDate: Date, max: number, maxDate: Date, averageSum: number, dataCount: number\n    ) {\n        if (dataCount > 0) {\n            this.min = min.toString();\n            this.minaDate = minaDate.toString();\n            this.max = max.toString();\n            this.maxDate = maxDate.toString();\n            this.average = (averageSum / dataCount).toFixed(2).toString();\n        } else {\n            this.min = '-';\n            this.minaDate = '-';\n            this.max = '-';\n            this.maxDate = '-';\n            this.average = '-';\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForecastData.html":{"url":"classes/ForecastData.html","title":"class - ForecastData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForecastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-module.ts\n        \n\n            \n                Description\n            \n            \n                Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(list: [])\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-module.ts:24\n                            \n                        \n\n                \n                    \n                            Kostruktor klasy ForecastData().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                  \n                                                        \n                                                                    []\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n(czas pomiaru, temperatura max/min, znak określający pogodę) \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:31\n                            \n                        \n\n                \n                    \n                        macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n(czas pomiaru, temperatura max/min, znak określający pogodę) \n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WeatherData {\n    /**\n     * Kostruktor klasy WeatherData().\n     * @param {string} name nazwa miasta, którą podał użytkownik\n     * @param {number} visibility I don't know \n     * @param {number} main dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n     * @param {string} weather ikonka określająca pogodę w danym momencie\n     */\n    constructor(\n        public name: string,\n        public visibility: number,\n        public main: number,\n        public weather: string,\n    ) { }\n}\n\n/**\n * Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org.\n */\nexport class ForecastData {\n    /**\n     * Kostruktor klasy ForecastData().\n     * @param list macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n     * (czas pomiaru, temperatura max/min, znak określający pogodę) \n     */\n    constructor(\n        public list = [],\n    ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponentComponent.html":{"url":"components/MapComponentComponent.html","title":"component - MapComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map/map-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-component\n            \n\n            \n                styleUrls\n                ./map-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./map-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                northresults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataBialystok\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: WeatherServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map/map-component.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WeatherServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataBialystok\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataBialystok(term)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    term\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            northresults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map/map-component.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherServiceService } from '../../services/weather/weather-service.service';\nimport { HttpClient } from '@angular/common/http';\ndeclare var $: any;\n\n\n@Component({\n  selector: 'app-map-component',\n  templateUrl: './map-component.component.html',\n  styleUrls: ['./map-component.component.css']\n})\n\nexport class MapComponentComponent implements OnInit {\n\n  private northresults = [];\n\n  constructor(private http: HttpClient, private service: WeatherServiceService) { }\n\n  ngOnInit() {\n    //wywołanie funkcji, które pobiorą kierunek wiatru; na podstawie tych danych na mapie pojawią się odpowiednie strzałki reprezentujace kierunek wiatru\n    this.getDataBialystok(\"Białystok\");\n\n    $(document).ready(function () {\n      $(\".map\").animate({ opacity: 1 }, 1500)\n    })\n\n  }\n\n  //dodanie do tablicy pobranego kierunku wiatru z danej miejscowości\n  getDataBialystok(term) {\n    return this.service.getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        //console.log(data[0].list[0].wind.deg\n        this.northresults.push(data[0].list[0].wind.deg);\n      })\n  }\n\n}\n\n\n\n  //************************************************************POPRZENIE WERSJE MAP*************************************************************************/\n\n// ---------------------------PIERWSZA WERSJA MAPY-------------------------------- //\n// export class MapComponentComponent implements AfterViewInit {\n\n//   private map;\n\n//   constructor() { }\n\n//   ngAfterViewInit(): void {\n//     this.initMap();\n//   }\n\n//   private initMap(): void {\n//     this.map = L.map('map', {\n//       center: [53.1324886, 23.1688403],\n//       zoom: 9\n//     });\n\n//     const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//       maxZoom: 19,\n//       attribution: '&copy; OpenStreetMap'\n//     });\n\n//     tiles.addTo(this.map);\n//   }\n// }\n\n\n\n\n// ---------------------------DRUGA WERSJA MAPY-------------------------------- //\n\n//   this.map = new ol.Map({\n  //     target: 'map',\n  //     layers: [\n  //       new ol.layer.Tile({\n  //         source: new ol.source.OSM()\n  //       })\n  //     ],\n  //     view: new ol.View({\n  //       center: ol.proj.fromLonLat([23.1688403, 53.1324886]),\n  //       zoom: 8,\n\n  //     })\n  //   });\n\n  //   this.map.on('click', function (args) {\n  //     console.log(args.coordinate);\n  //     var lonlat = ol.proj.transform(args.coordinate, 'EPSG:3857', 'EPSG:4326');\n  //     console.log(lonlat);\n\n  //     var lon = lonlat[0];\n  //     var lat = lonlat[1];\n  //     var inputlat = document.getElementById(\"inputLat\");\n  //     var inputlon = document.getElementById(\"inputLon\");\n  //     inputlat.setAttribute('value',lat);\n  //     inputlon.setAttribute('value',lon);\n  //     (`lat: ${lat} long: ${lon}`);\n  //   });\n  // }\n\n\n  //************************************************************POPRZENIE WERSJE MAP*************************************************************************/\n    \n\n    \n        \n  \n\n  \n\n    = 0 && result \n      \n    \n\n    = 90 && result \n      \n    \n\n    = 108 && result \n      \n    \n\n    = 270 && result \n      \n     -->\n\n  \n\n\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n      \n    \n   -->\n\n\n\n\n  \n  \n\n\n  \n\n    \n    \n  \n   -->\n    \n\n    \n                \n                    ./map-component.component.css\n                \n                .map{\n    position: absolute;\n    opacity: 0;\n}\n\n.map__bialystok img{\n    position: absolute;\n    top: 130px;\n    left: 390px;\n    width: 100px;\n    height: auto;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* .map-container {\n    position: absolute;\n    top: 10%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n.map-frame {\n    border: 2px solid black;\n    height: 100%;\n}\n.results {\n    position: absolute;\n    top: 5%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n#map {\n    height: 100%;\n} */\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        = 0 && result               = 90 && result               = 108 && result               = 270 && result            -->                         -->                   -->'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeteoStatsData.html":{"url":"classes/MeteoStatsData.html","title":"class - MeteoStatsData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeteoStatsData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/meteo-stats-data.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca obiekt składający się z danych pobranych z API. Klasa składa się z następujących obiektów:\ndata, temperatura, temperatura minimalna, temperatura maksymalna, opad atmosferyczny, opad śniegu, głębokość śniegu, kierunek wiatru,\nprędkość wiatru, szczytowy podmuch, nasłonecznienie oraz ciśnienie. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                peakgust\n                            \n                            \n                                    Public\n                                precipitation\n                            \n                            \n                                    Public\n                                pressure\n                            \n                            \n                                    Public\n                                snowdepth\n                            \n                            \n                                    Public\n                                snowfall\n                            \n                            \n                                    Public\n                                sunshine\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                temperatureMax\n                            \n                            \n                                    Public\n                                temperatureMin\n                            \n                            \n                                    Public\n                                winddirection\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date: Data, temperature: number, temperatureMin: number, temperatureMax: number, precipitation: number, snowfall: number, snowdepth: number, winddirection: number, windspeed: number, peakgust: number, sunshine: number, pressure: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/meteo-stats-data.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        temperature\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        temperatureMin\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        temperatureMax\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        precipitation\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snowfall\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snowdepth\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        winddirection\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windspeed\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        peakgust\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sunshine\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pressure\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            peakgust\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            precipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snowdepth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snowfall\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sunshine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            winddirection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Data } from '@angular/router';\n\n/**\n * Klasa reprezentująca obiekt składający się z danych pobranych z API. Klasa składa się z następujących obiektów:\n * data, temperatura, temperatura minimalna, temperatura maksymalna, opad atmosferyczny, opad śniegu, głębokość śniegu, kierunek wiatru,\n * prędkość wiatru, szczytowy podmuch, nasłonecznienie oraz ciśnienie. \n */\nexport class MeteoStatsData {\n    constructor(\n        public date: Data,\n        public temperature: number,\n        public temperatureMin: number,\n        public temperatureMax: number,\n        public precipitation: number, // opad atmosferyczny\n        public snowfall: number,\n        public snowdepth: number,\n        public winddirection: number,\n        public windspeed: number,\n        public peakgust: number, // szczytowy podmuch\n        public sunshine: number,\n        public pressure: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeteoStatsModel.html":{"url":"classes/MeteoStatsModel.html","title":"class - MeteoStatsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeteoStatsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/stats-api-model.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca model składający się z obiektu MeteoStatsData.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MeteoStatsData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/stats-api-model.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeteoStatsData } from './meteo-stats-data';\n\n/**\n * Klasa reprezentująca model składający się z obiektu MeteoStatsData.\n */\nexport class MeteoStatsModel {\n    public data: MeteoStatsData[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeteoStatsService.html":{"url":"injectables/MeteoStatsService.html","title":"injectable - MeteoStatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeteoStatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/meteo-stat/meteo-stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiBaseUrl\n                            \n                            \n                                apiKey\n                            \n                            \n                                apiURL\n                            \n                            \n                                statsType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatsData\n                            \n                            \n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/meteo-stat/meteo-stats.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatsData(type, station, dateFrom, dateTo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    station\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dateFrom\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dateTo\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \ngetType(type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.meteostat.net/v1/history/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '&key=XWfTSLqc'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statsType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { pipe, Observable } from 'rxjs';\nimport { MeteoStatsModel } from '../../models/stats-api-model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n/**\n * Klasa łącząca się z API meteostat oraz pobierająca dane z danej stacji w podanym przedziale czasowym o podanym typie statystyk:\n * 1 - statystyki godzinowe, 2 - statystyki dzienne, 3 - statystyki miesięczne\n */\nexport class MeteoStatsService {\n\n  apiBaseUrl = 'https://api.meteostat.net/v1/history/';\n  apiKey = '&key=XWfTSLqc';\n  apiURL: string;\n  statsType: string;\n  constructor(private http: HttpClient) { }\n\n  getStatsData(type, station, dateFrom, dateTo): Observable {\n    this.getType(type);\n    this.apiURL = this.apiBaseUrl + this.statsType + '?station=' + station + '&start=' + dateFrom + '&end=' + dateTo + this.apiKey;\n    return this.http\n      .get(this.apiURL);\n  }\n\n  getType(type) {\n    switch (type) {\n      case '1': this.statsType = 'hourly'; break;\n      case '2': this.statsType = 'daily'; break;\n      case '3': this.statsType = 'monthly'; break;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QualityComponentComponent.html":{"url":"components/QualityComponentComponent.html","title":"component - QualityComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QualityComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/quality/quality-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quality-component\n            \n\n            \n                styleUrls\n                ./quality-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./quality-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAirService\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: QualityServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/quality/quality-component.component.ts:43\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy 'QualityComponentComponent'.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QualityServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAirService\n                        \n                        \n                    \n                \n            \n            \n                \ngetAirService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quality/quality-component.component.ts:60\n                \n            \n\n\n            \n                \n                    Funkcja inicjująca pobieranie danych z miejsca wybranego przez użytkownika. \n Przypisanie pod zmienną 'results' danych pobranych z api dzięki funkcji 'getAirData()'.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quality/quality-component.component.ts:99\n                \n            \n\n\n            \n                \n                    Inicjowanie wyświetlenia mapy na stronie.\nDeklarowanie funkcji wyświetlania współrzędnych z kliknięcia.\nKliknięcie nastepnie przerzuca nas do funkcji 'getAirService()'\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/quality/quality-component.component.ts:43\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca mapę wyświetloną na stronie.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\nimport { QualityServiceService } from '../../services/quality/quality-service.service';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { AirData } from '../../services/quality/quality-module';\n// import { QualityServiceService } from 'src/app/services/quality/quality-service.service';\n\n/**\n * @ignore \n */\ndeclare var ol: any;\n/**\n * @ignore \n */\ndeclare var $: any;\n/**\n * Współrzędna odpowiadająca szerokości geograficznej\n */\nvar latitude: any;\n/**\n * Współrzędna odpowiadająca długości geograficznej\n */\nvar longitude: any;\n  /**\n   * Zmienna pod którą zostaną przypisane dane o jakości powietrza pobrane z api, \n   * a następnie wyświetlone w tabeli.\n   */\nvar results: any;\n\n@Component({\n  selector: 'app-quality-component',\n  templateUrl: './quality-component.component.html',\n  styleUrls: ['./quality-component.component.css']\n})\n\n\nexport class QualityComponentComponent implements OnInit {\n\n  /**\n   * Zmienna przechowująca mapę wyświetloną na stronie.\n   */\n  private map;\n  //public results : AirData[] = [];\n\n    /**\n   * Konstruktor klasy 'QualityComponentComponent'.\n   * @param http\n   * @param service \n   */\n  constructor(private http: HttpClient, private service: QualityServiceService) { }\n\n /**\n  * Funkcja inicjująca pobieranie danych z miejsca wybranego przez użytkownika. \n   * Przypisanie pod zmienną 'results' danych pobranych z api dzięki funkcji 'getAirData()'.\n   * \n   * @param popup pozycja (współrzędne) kliknięcia użytkowniaka na mapę. ?????????\n   * @param element informacja o jakości powietrza do wyświetlenia na mapie. ???\n  */\n  getAirService() {\n\n    this.service\n      .getAirData(latitude, longitude)\n      .subscribe((records: any) => {\n        results = records;\n\n        // Popup showing the position the user clicked\n        var popup = new ol.Overlay({\n          element: document.getElementById('popup')\n        });\n        this.map.addOverlay(popup);\n\n        var element = popup.getElement();\n        console.log(results);\n        popup.setPosition(ol.proj.fromLonLat([longitude, latitude]));\n        $(element).popover({\n          placement: 'top',\n          animation: false,\n          html: true,\n          content: '' + \n            results[0].current.values[0].value + ' ' +\n            results[0].current.values[2].value + ' ' +\n            results[0].current.values[1].value + ' ' +\n            results[0].current.indexes[0].value + ' ' +\n            results[0].current.indexes[0].level + ' ' +\n            results[0].current.indexes[0].description + ''\n        });\n        $(element).popover('show');\n      })\n  }\n\n  /**\n   * Inicjowanie wyświetlenia mapy na stronie.\n   * \n   * Deklarowanie funkcji wyświetlania współrzędnych z kliknięcia.\n   * \n   * Kliknięcie nastepnie przerzuca nas do funkcji 'getAirService()'\n   */\n  ngOnInit() {\n    this.map = new ol.Map({\n      target: 'map',\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM()\n        })\n      ],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([23.1688403, 53.1324886]),\n        zoom: 8,\n\n      })\n    });\n\n    this.map.on('click', function (args) {\n      console.log(args.coordinate);\n      var lonlat = ol.proj.transform(args.coordinate, 'EPSG:3857', 'EPSG:4326');\n      console.log(lonlat);\n\n      longitude = lonlat[0];\n      latitude = lonlat[1];\n      (`lat: ${latitude} long: ${longitude}`);\n    });\n  }\n}\n\n//Na wszelki wypadek jakby trzeba bylo dodać pin (strzaleczka tam gdzie sie kliknie)\n\n    // var vectorLayer = new ol.layer.Vector({\n    //   source: new ol.source.Vector({\n    //     features: [new ol.Feature({\n    //       geometry: new ol.geom.Point(ol.proj.transform([longitude, latitude], 'EPSG:4326', 'EPSG:3857')),\n    //     })]\n    //   }),\n    //   style: new ol.style.Style({\n    //     image: new ol.style.Icon({\n    //       anchor: [0.5, 1],\n    //       anchorXUnits: \"fraction\",\n    //       anchorYUnits: \"fraction\",\n    //       scale: 0.05,\n    //       src: \"assets/marker/marker.png\"\n\n    //     })\n    //   })\n    // });\n    // this.map.addLayer(vectorLayer);\n    \n\n    \n        \n  \n    \n      \n        Wartość PM1 (µg/m3)\n        Wartość PM10 (µg/m3)\n        Wartość PM25 (µg/m3)\n        Wartość CAQI (µg/m3)\n        Poziom\n        Opis\n      \n    \n    \n      {{result.current.values[0].value}} \n      {{result.current.values[2].value}} \n      {{result.current.values[1].value}} \n      {{result.current.indexes[0].value}} \n      {{result.current.indexes[0].level}} \n      {{result.current.indexes[0].description}} \n     -->\n    \n\n\n  \n    \n    \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./quality-component.component.css\n                \n                .map-container {\n    position: absolute;\n    top: 25%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n.map-frame {\n    border: 2px solid black;\n    height: 100%;\n}\n\n.results {\n    position: absolute;\n    top: 5%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n.table{\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n\n#map {\n    height: 100%;\n}\n#marker {\n    width: 20px;\n    height: 20px;\n    border: 1px solid #088;\n    border-radius: 10px;\n    background-color: #0FF;\n    opacity: 0.5;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wartość PM1 (µg/m3)        Wartość PM10 (µg/m3)        Wartość PM25 (µg/m3)        Wartość CAQI (µg/m3)        Poziom        Opis                    {{result.current.values[0].value}}       {{result.current.values[2].value}}       {{result.current.values[1].value}}       {{result.current.indexes[0].value}}       {{result.current.indexes[0].level}}       {{result.current.indexes[0].description}}      -->                                '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QualityComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QualityServiceService.html":{"url":"injectables/QualityServiceService.html","title":"injectable - QualityServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QualityServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quality/quality-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Pobieranie danych z api airly.eu.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quality/quality-service.service.ts:25\n                            \n                        \n\n                \n                    \n                            Konstruktor klasy 'QualityServiceService'.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAirData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAirData(lat: string, lng: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quality/quality-service.service.ts:38\n                \n            \n\n\n            \n                \n                    Funkcja pobiera dane z api o jakości powietrza w wybranym miejscu opisanym poprzez szerokość i długość geograficzną.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        szerokość geograficzna\n\n                                    \n                                \n                                \n                                    lng\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        długość geograficzna\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://airapi.airly.eu/v2/measurements/nearest?indexType=AIRLY_CAQI&maxDistanceKM=100'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-service.service.ts:25\n                            \n                        \n\n                \n                    \n                        Adres api, z którego pobieramy dane o jakości powietrza. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-service.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { AirData } from './quality-module';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n/**\n * Pobieranie danych z api airly.eu.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class QualityServiceService {\n\n  /**\n   * @ignore\n   */\n  list: any;\n  /**\n   * Adres api, z którego pobieramy dane o jakości powietrza. \n   */\n  apiUrl = 'https://airapi.airly.eu/v2/measurements/nearest?indexType=AIRLY_CAQI&maxDistanceKM=100';  unsubscribe: any;\n\n  /**\n   * Konstruktor klasy 'QualityServiceService'.\n   * @param http \n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Funkcja pobiera dane z api o jakości powietrza w wybranym miejscu opisanym poprzez szerokość i długość geograficzną.\n   * @param lat szerokość geograficzna\n   * @param lng długość geograficzna\n   */\n  public getAirData(lat: string, lng: string): Observable {\n    return this.http\n      .get(`${this.apiUrl}&lat=${lat}&lng=${lng}&apikey=SV8Wb734fM470C2HYs8atebFRNg5LzU9`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new AirData(item.current))),\n        catchError((error: HttpErrorResponse) => {\n          return Observable.throw(error.message || \"Server Message\");\n        })\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Station.html":{"url":"classes/Station.html","title":"class - Station","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Station\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/station.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca listę możliwych do wyboru miejscowości, dla których mogą być policzone statystyki.\nOgraniczenia co do wyboru miejscowości wynikają z danych możliwych do pobrania z API. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/station.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/station.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/station.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Station {\n    constructor(public id: number, public name: string) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StationList.html":{"url":"classes/StationList.html","title":"class - StationList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StationList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/meteo-stat/station-list.ts\n        \n\n            \n                Description\n            \n            \n                Klasa reprezentująca listę miejscowości możliwych do wyboru przy wyznaczaniu statysyk. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/meteo-stat/station-list.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/station-list.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Station } from '../../models/station';\n\n/**\n * Klasa reprezentująca listę miejscowości możliwych do wyboru przy wyznaczaniu statysyk. \n */\nexport class StationList {\n    stationList: Array;\n\n    /**\n     *\n     */\n    constructor() {\n        this.stationList = new Array();\n\n        this.stationList.push(new Station(12100, 'Kolobrzeg                  '));\n        this.stationList.push(new Station(12105, 'Koszalin                   '));\n        this.stationList.push(new Station(12106, 'Koszalin Zegrze Pom.       '));\n        this.stationList.push(new Station(12115, 'Ustka                      '));\n        this.stationList.push(new Station(12120, 'Leba                       '));\n        this.stationList.push(new Station(12125, 'Lebork                     '));\n        this.stationList.push(new Station(12135, 'Hel                        '));\n        this.stationList.push(new Station(12145, 'Gdynia                     '));\n        this.stationList.push(new Station(12150, 'Gdansk-Rebiechowo          '));\n        this.stationList.push(new Station(12155, 'Gdansk-Swibno              '));\n        this.stationList.push(new Station(12160, 'Elblag                     '));\n        this.stationList.push(new Station(12185, 'Ketrzyn                    '));\n        this.stationList.push(new Station(12195, 'Suwalki                    '));\n        this.stationList.push(new Station(12200, 'Swinoujscie                '));\n        this.stationList.push(new Station(12205, 'Szczecin                   '));\n        this.stationList.push(new Station(12206, 'Goleniow                   '));\n        this.stationList.push(new Station(12210, 'Resko                      '));\n        this.stationList.push(new Station(12215, 'Szczecinek                 '));\n        this.stationList.push(new Station(12230, 'Pila                       '));\n        this.stationList.push(new Station(12235, 'Chojnice                   '));\n        this.stationList.push(new Station(12250, 'Torun                      '));\n        this.stationList.push(new Station(12270, 'Mlawa                      '));\n        this.stationList.push(new Station(12272, 'Olsztyn                    '));\n        this.stationList.push(new Station(12280, 'Mikolajki                  '));\n        this.stationList.push(new Station(12285, 'Ostroleka                  '));\n        this.stationList.push(new Station(12295, 'Bialystok                  '));\n        this.stationList.push(new Station(12300, 'Gorzow Wlkp                '));\n        this.stationList.push(new Station(12310, 'Slubice                    '));\n        this.stationList.push(new Station(12330, 'Poznan                     '));\n        this.stationList.push(new Station(12345, 'Kolo                       '));\n        this.stationList.push(new Station(12360, 'Plock                      '));\n        this.stationList.push(new Station(12365, 'Brwinow                    '));\n        this.stationList.push(new Station(12372, 'Warszawa Bielany           '));\n        this.stationList.push(new Station(12374, 'Legionowo                  '));\n        this.stationList.push(new Station(12375, 'Warszawa-Okecie            '));\n        this.stationList.push(new Station(12385, 'Siedlce                    '));\n        this.stationList.push(new Station(12399, 'Terespol                   '));\n        this.stationList.push(new Station(12400, 'Zielona Gora               '));\n        this.stationList.push(new Station(12415, 'Legnica Bartoszow          '));\n        this.stationList.push(new Station(12418, 'Leszno-Strzyzewice         '));\n        this.stationList.push(new Station(12424, 'Wroclaw Copernicus Airport '));\n        this.stationList.push(new Station(12425, 'Wroclaw I                  '));\n        this.stationList.push(new Station(12435, 'Kalisz                     '));\n        this.stationList.push(new Station(12455, 'Wielun                     '));\n        this.stationList.push(new Station(12465, 'Lodz                       '));\n        this.stationList.push(new Station(12469, 'Sulejow                    '));\n        this.stationList.push(new Station(12471, 'Belsk                      '));\n        this.stationList.push(new Station(12485, 'Radom                      '));\n        this.stationList.push(new Station(12488, 'Kozienice                  '));\n        this.stationList.push(new Station(12490, 'Deblin / Irena             '));\n        this.stationList.push(new Station(12491, 'Pulawy                     '));\n        this.stationList.push(new Station(12495, 'Lublin Radawiec            '));\n        this.stationList.push(new Station(12497, 'Wlodawa                    '));\n        this.stationList.push(new Station(12500, 'Jelenia Gora               '));\n        this.stationList.push(new Station(12510, 'Sniezka                    '));\n        this.stationList.push(new Station(12520, 'Klodzko                    '));\n        this.stationList.push(new Station(12530, 'Opole                      '));\n        this.stationList.push(new Station(12540, 'Raciborz                   '));\n        this.stationList.push(new Station(12550, 'Czestochowa                '));\n        this.stationList.push(new Station(12555, 'Pyrzowice                  '));\n        this.stationList.push(new Station(12560, 'Katowice                   '));\n        this.stationList.push(new Station(12566, 'Krakow                     '));\n        this.stationList.push(new Station(12570, 'Kielce                     '));\n        this.stationList.push(new Station(12575, 'Tarnow                     '));\n        this.stationList.push(new Station(12580, 'Rzeszow-Jasionka           '));\n        this.stationList.push(new Station(12585, 'Sandomierz                 '));\n        this.stationList.push(new Station(12595, 'Zamosc                     '));\n        this.stationList.push(new Station(12600, 'Bielsko-Biala              '));\n        this.stationList.push(new Station(12625, 'Zakopane                   '));\n        this.stationList.push(new Station(12650, 'Kasprowy Wierch            '));\n        this.stationList.push(new Station(12660, 'Nowy Sacz                  '));\n        this.stationList.push(new Station(12690, 'Lesko                      '));\n        this.stationList.push(new Station(12695, 'Przemysl                   '));\n        // this.stationList.sort();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatisticType.html":{"url":"classes/StatisticType.html","title":"class - StatisticType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatisticType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistic-type.ts\n        \n\n            \n                Description\n            \n            \n                Klasa określająca typ statystyk możliwych do wyboru przez użytkownika.\nDostępne są trzy typy: statystyki godzinowe, statystyki dzienne oraz statystyki miesięczne.\nTyp statystyk określa jakie dane zostaną pobrane z API, czyli czy pobrane pomiary będą w odtępach godzinowych, dniowych czy miesięcznych.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistic-type.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistic-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistic-type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StatisticType {\n    constructor(public id: number, public name: string) {\n\n    }\n}\n\n\nexport const StatisticTypeList: StatisticType[] =\n    [\n        {\n            id: 1,\n            name: 'Godzinowy'\n        },\n        {\n            id: 2,\n            name: 'Dzienny'\n        },\n        {\n            id: 3,\n            name: 'Miesięczny'\n        }\n    ];\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/calculated-stats.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pressure\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windPower\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(temperature: CalculatedProps, pressure: CalculatedProps, windPower: CalculatedProps)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/calculated-stats.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        temperature\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pressure\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windPower\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windPower\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CalculatedProps } from './statistics';\n\nexport class Statistics {\n\n  /**\n   *\n   * @param temperature\n   * @param pressure\n   * @param windPower\n   */\n\n    constructor(\n        public temperature: CalculatedProps,\n        public pressure: CalculatedProps,\n        public windPower: CalculatedProps) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponentComponent.html":{"url":"components/WeatherComponentComponent.html","title":"component - WeatherComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/weather/weather-component.component.ts\n\n\n    \n        Description\n    \n    \n        Weather component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-component\n            \n\n            \n                styleUrls\n                ./weather-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./weather-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                resultsForecast\n                            \n                            \n                                    Public\n                                resultsForecastToChartData\n                            \n                            \n                                    Public\n                                resultsForecastToChartMaxTemp\n                            \n                            \n                                    Public\n                                resultsForecastToChartMinTemp\n                            \n                            \n                                    Public\n                                resultsForecastToChartTemp\n                            \n                            \n                                    Public\n                                resultsWeather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawChart\n                            \n                            \n                                getForecastService\n                            \n                            \n                                getWeatherService\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showContent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: WeatherServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/weather/weather-component.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WeatherServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawChart\n                        \n                        \n                    \n                \n            \n            \n                \ndrawChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:127\n                \n            \n\n\n            \n                \n                    Funkcja rysująca wykres prognozy pogody. Odwołujemy się do niej w funkcji 'getForecastService()'.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastService\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastService(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:107\n                \n            \n\n\n            \n                \n                    Funkcja inicująca pobieranie danych z prognozą pogody oraz przypisanie ich pod ospowiednie zmienne.\nPrzypisanie pod zmienną 'resultsForecast' danych do wyświetlenia\nw tabeli z prognozą pogody na najbliższe dni.\nDane pobierane są dzięki funkcji 'getWeatherForecastData()' .\nZ danych uzyskanych przez funkcję 'getWeatherForecastData()' wyciągamy i przypisujemy pod odpowiednie zmienne czas pomiaru,\ntemperaturę, temperaturę minimalną i temperaturę maksymalną. Zmienne wykorzystujemy do rysowania wykresu, \nfunkcja 'drawChart()'\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejsowość, dla której pobieramy dane.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherService\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherService(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:82\n                \n            \n\n\n            \n                \n                    Przypisanie pod zmienną 'resultWeather' danych, które będą wyświetlone w tabeli z aktualnym stanem pogody\nw miejscowości podanej przez użytkownika. Dane pobierane są dzięki funkcji 'getWeatherData()'.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość, dla której wyświetlamy dane\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showContent\n                        \n                        \n                    \n                \n            \n            \n                \nshowContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:69\n                \n            \n\n\n            \n                \n                    Funkcja inicjue wyświetlanie się tabel z danymi oraz wykresu poprzez nacisnięcie przycisku \"Pokaż dane!\"\nOdwołuje się do tabel z pogodą w danym momencie '.content__table', z prognozą pogody '.content__chart' oraz wykresem '.chart-area'.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMsg\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:32\n                            \n                        \n\n                \n                    \n                        Informacja o błędzie przy wprowadzaniu przez użytkownika nazwy miasta.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:28\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca dane z prognozą pogody na najbliższe dni analizowanego miasta.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:36\n                            \n                        \n\n                \n                    \n                        Przechowuje dane o czasie pomiaru, wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartMaxTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:48\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury maksymalne wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartMinTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:44\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury minimalne wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:40\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:24\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca dane z aktualnym stanem pogody analizowanego miasta.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WeatherServiceService } from '../../services/weather/weather-service.service';\nimport { Chart } from 'chart.js';\nimport { WeatherData } from '../../services/weather/weather-module';\ndeclare var $: any;\n\n/**\n * Weather component\n */\n@Component({\n  selector: 'app-weather-component',\n  templateUrl: './weather-component.component.html',\n  styleUrls: ['./weather-component.component.css']\n})\n/**\n * Klasa odpowiadająca za informacje wyświetlane na stronie głownej aplikacji\n */\nexport class WeatherComponentComponent implements OnInit {\n\n /**\n  * Zmienna przechowująca dane z aktualnym stanem pogody analizowanego miasta.\n  */\n public resultsWeather = [];\n /**\n * Zmienna przechowująca dane z prognozą pogody na najbliższe dni analizowanego miasta.\n */\npublic resultsForecast: any;\n/**\n * Informacja o błędzie przy wprowadzaniu przez użytkownika nazwy miasta.\n */\npublic errorMsg;\n/**\n * Przechowuje dane o czasie pomiaru, wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartData = [];\n/**\n * Przechowuje temperatury wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartTemp = [];\n/**\n * Przechowuje temperatury minimalne wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartMinTemp = [];\n/**\n * Przechowuje temperatury maksymalne wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartMaxTemp = [];\n\n/**\n * \n * @param http \n * @param service \n */\n  constructor(private http: HttpClient, private service: WeatherServiceService) { }\n\n  ngOnInit() {\n    //podstawowe animacje dla dwóch głownych okien na pierwszej stronie aplikacji\n    $(document).ready(function () {\n      $(\".content\").animate({ opacity: 1, }, 1500);\n      $(\".nav\").fadeTo(\"slow\", 1);\n    })\n  }\n\n  /**\n   * Funkcja inicjue wyświetlanie się tabel z danymi oraz wykresu poprzez nacisnięcie przycisku \"Pokaż dane!\"\n   * Odwołuje się do tabel z pogodą w danym momencie '.content__table', z prognozą pogody '.content__chart' oraz wykresem '.chart-area'.\n   */\n  showContent() {\n    $(document).ready(function () {\n      $(\".content__table\").show();\n      $(\".content__chart\").show();\n      $(\".chart-area\").show();\n    })\n  }\n\n  /**\n   * Przypisanie pod zmienną 'resultWeather' danych, które będą wyświetlone w tabeli z aktualnym stanem pogody\n   * w miejscowości podanej przez użytkownika. Dane pobierane są dzięki funkcji 'getWeatherData()'.\n   * @param {string} term Parametr określający miejscowość, dla której wyświetlamy dane\n   */\n  getWeatherService(term: string) {\n    this.service\n      .getWeatherData(term)\n      .subscribe((records: any) => {\n        console.log(records);\n        this.resultsWeather.push(records);\n      },\n        error => this.errorMsg = \"Nie wprowadzono miejscowości lub wprowadzono złą nazwę!\",\n      )\n    this.errorMsg = null;\n  }\n\n  /**\n   * Funkcja inicująca pobieranie danych z prognozą pogody oraz przypisanie ich pod ospowiednie zmienne.\n   * \n   * Przypisanie pod zmienną 'resultsForecast' danych do wyświetlenia\n   * w tabeli z prognozą pogody na najbliższe dni.\n   * Dane pobierane są dzięki funkcji 'getWeatherForecastData()' .\n   * \n   * Z danych uzyskanych przez funkcję 'getWeatherForecastData()' wyciągamy i przypisujemy pod odpowiednie zmienne czas pomiaru,\n   * temperaturę, temperaturę minimalną i temperaturę maksymalną. Zmienne wykorzystujemy do rysowania wykresu, \n   * funkcja 'drawChart()'\n   * @param {string} term Parametr określający miejsowość, dla której pobieramy dane.\n   * @return \n   */\n  getForecastService(term: string) {\n    this.service\n      .getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        for (let i = 0; i \n    \n\n    \n        \n    \n        Sprawdź pogodę w swoim mieście\n\n    \n\n    \n        \n        Pokaż\n            dane!\n    \n\n    \n        {{errorMsg}}\n    \n\n\n\n    \n        \n\n            \n                \n                    Miasto\n                    Temperatura\n                    Temperatura Odczuwalna\n                    Temperatura Minimalna\n                    Temperatura Maksymalna\n                    Ciśnienie\n                    Wilgotność\n                    Pogoda\n                \n            \n\n            \n                {{result[0].name}}\n                {{result[0].main.temp}} C\n                {{result[0].main.feels_like}} C\n                {{result[0].main.temp_min}} C\n                {{result[0].main.temp_max}} C\n                {{result[0].main.pressure}} hPa\n                {{result[0].main.humidity}} %\n                \n                    \n                \n            \n\n        \n    \n\n    \n        \n\n            \n                \n                    Czas pomiaru\n                    Temperatura max/min\n                    Pogoda\n                \n            \n\n            \n                \n                    {{x.dt_txt}}\n                \n                \n                    {{x.main.temp_max}} C / {{x.main.temp_min}} C\n                \n                \n                    \n                \n            \n\n        \n    \n\n\n\n    {{chart}}\n\n    \n\n    \n                \n                    ./weather-component.component.css\n                \n                .navigation{\n    background-color: #ffffff;\n}\n\n.nav{\n    height: 40vh;\n    background-color: #ffffff;\n\n    background: url(https://www.setaswall.com/wp-content/uploads/2017/03/Sun-Sky-Summer-Wallpaper-2560x1600.jpg);\n    background-repeat: no-repeat;\n    background-position: center;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    opacity: 0;\n}\n\nh2{\n    color: #ffffff;\n    font-family: \"Lato\", sans-serif;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n}\n\n.nav__buttons__input{\n    border-radius: 100px;\n    padding: 25px 60px;\n    height: 15px;\n    text-align: center;\n    text-transform: uppercase;\n\n    animation-name: moveToBottom;\n    animation-duration: 1s;\n    animation-delay: 0.5s;\n    animation-fill-mode: backwards;\n}\n\n.nav__buttons__input:hover{\n    background: linear-gradient(#626d329f,#6e5f33af);\n    color: #ffffff;\n    transition-duration: 2s;\n}\n\n.nav__buttons__btn{\n    border-radius: 100px;\n    padding: 7px 10px;\n    margin-left: 5px;\n\n    animation-name: moveToLeft;\n    animation-duration: 1.5s;\n    animation-delay: 1.2s;\n    animation-fill-mode: backwards;\n}\n\n.nav__buttons__btn:hover{\n    background: linear-gradient(#626d329f,#6e5f33af);\n    color: #ffffff;\n    transition-duration: 0.5s;\n}\n\n.content{\n    opacity: 0;\n    margin-top: 15px;\n    display: flex;\n    justify-content: space-around;\n}\n\n.content__table{\n    display: none;\n    text-align: center;\n    width: 50%;\n    height:0px;\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 0.2;\n}\n\n.content__chart{\n    display: block;\n    text-align: center;\n    width: 40%;\n    background-color: #ffffff;\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 0.4s;\n    animation-fill-mode: backwards;\n}\n\n.table{\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n\n.nav__error{\n    font-size: 22px;\n    color: #ffffff;\n    text-shadow: 1px 1px 6px rgba(172,91,0,0.88);\n}\n\n.content__my-custom-scrollbar {\n    position: relative;\n    height: 350px;\n    overflow: auto;\n}\n\n.chart-area{\n    width: 50%;\n    height: auto;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10px;\n    display: none;\n    background-color: #ffffff;\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 1s;\n    animation-fill-mode: backwards;\n\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sprawdź pogodę w swoim mieście                        Pokaż            dane!                {{errorMsg}}                                                                Miasto                    Temperatura                    Temperatura Odczuwalna                    Temperatura Minimalna                    Temperatura Maksymalna                    Ciśnienie                    Wilgotność                    Pogoda                                                        {{result[0].name}}                {{result[0].main.temp}} C                {{result[0].main.feels_like}} C                {{result[0].main.temp_min}} C                {{result[0].main.temp_max}} C                {{result[0].main.pressure}} hPa                {{result[0].main.humidity}} %                                                                                                                                        Czas pomiaru                    Temperatura max/min                    Pogoda                                                                            {{x.dt_txt}}                                                    {{x.main.temp_max}} C / {{x.main.temp_min}} C                                                                                                {{chart}}'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherData.html":{"url":"classes/WeatherData.html","title":"class - WeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-module.ts\n        \n\n            \n                Description\n            \n            \n                Klasa opisująca dane pogodowe w danym momencie odczytane\nz api openweathermap.org.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                main\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                visibility\n                            \n                            \n                                    Public\n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, visibility: number, main: number, weather: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-module.ts:5\n                            \n                        \n\n                \n                    \n                            Kostruktor klasy WeatherData().\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                nazwa miasta, którą podał użytkownik\n\n                                                        \n                                                \n                                                \n                                                        visibility\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                I don't know \n\n                                                        \n                                                \n                                                \n                                                        main\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n\n                                                        \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ikonka określająca pogodę w danym momencie\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            main\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:16\n                            \n                        \n\n                \n                    \n                        dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:14\n                            \n                        \n\n                \n                    \n                        nazwa miasta, którą podał użytkownik\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:15\n                            \n                        \n\n                \n                    \n                        I don't know \n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:17\n                            \n                        \n\n                \n                    \n                        ikonka określająca pogodę w danym momencie\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WeatherData {\n    /**\n     * Kostruktor klasy WeatherData().\n     * @param {string} name nazwa miasta, którą podał użytkownik\n     * @param {number} visibility I don't know \n     * @param {number} main dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n     * @param {string} weather ikonka określająca pogodę w danym momencie\n     */\n    constructor(\n        public name: string,\n        public visibility: number,\n        public main: number,\n        public weather: string,\n    ) { }\n}\n\n/**\n * Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org.\n */\nexport class ForecastData {\n    /**\n     * Kostruktor klasy ForecastData().\n     * @param list macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n     * (czas pomiaru, temperatura max/min, znak określający pogodę) \n     */\n    constructor(\n        public list = [],\n    ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherServiceService.html":{"url":"injectables/WeatherServiceService.html","title":"injectable - WeatherServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Klasa z funkcjami pobierającymi dane z api openweathermap.org.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                            \n                                apiUrlForecast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                getWeatherForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-service.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherData(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather-service.service.ts:34\n                \n            \n\n\n            \n                \n                    Funkcja wyciąga aktualne dane pogodowe z api openweathermap.org dla wybranej przez użytkownika miejscowości.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość wybraną przez użytkownika.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherForecastData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherForecastData(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather-service.service.ts:55\n                \n            \n\n\n            \n                \n                    Funkcja pobiera z api openwethermap.org dane opisujące prognozę pogody na najbliższe pięć dni.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość wybraną przez użytkownika.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://api.openweathermap.org/data/2.5/weather?q=\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-service.service.ts:21\n                            \n                        \n\n                \n                    \n                        Adres api, z którgo pobierane są dane o aktualnym stanie pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrlForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://api.openweathermap.org/data/2.5/forecast?q=\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-service.service.ts:26\n                            \n                        \n\n                \n                    \n                        Adres api, z którgo pobierane są dane z prognozą pogody na najbliższe dni.\nZ api możemy uzyskać prognozę pogody na pięć dni w przód.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { WeatherData, ForecastData } from './weather-module';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n/**\n * Klasa z funkcjami pobierającymi dane z api openweathermap.org.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherServiceService {\n\n  /**\n   * Adres api, z którgo pobierane są dane o aktualnym stanie pogody.\n   */\n  apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\";\n    /**\n   * Adres api, z którgo pobierane są dane z prognozą pogody na najbliższe dni.\n   * Z api możemy uzyskać prognozę pogody na pięć dni w przód.\n   */\n  apiUrlForecast = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n\n  constructor(private http: HttpClient) { }\n    /**\n   * Funkcja wyciąga aktualne dane pogodowe z api openweathermap.org dla wybranej przez użytkownika miejscowości.\n   * @param {string} term Parametr określający miejscowość wybraną przez użytkownika.\n   * @retruns  ????????\n   */\n  public getWeatherData(term: string): Observable {\n\n    // return this.http\n    //   .get(this.apiUrl)         // do sprawdzenia wszystkich endpointów\n\n    return this.http\n      .get(`${this.apiUrl}${term}&appid=9a3485ea70ca20151b5d5d7b29054807&units=metric`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new WeatherData(item.name, item.visibility, item.main, item.weather))),\n        catchError((error: HttpErrorResponse) => {\n          return Observable.throw(error.message || \"Server Message\");\n        })\n      )\n  }\n\n   /**\n    * Funkcja pobiera z api openwethermap.org dane opisujące prognozę pogody na najbliższe pięć dni.\n    * @param {string} term Parametr określający miejscowość wybraną przez użytkownika.\n    */\n  public getWeatherForecastData(term: string): Observable {\n    return this.http\n      .get(`${this.apiUrlForecast}${term}&appid=b742a4225977a8a94a092feb673aad31&units=metric`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new ForecastData(item.list)))\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routableComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/air-quality-component/air-quality-component.component.ts\n            \n            component\n            AirQualityComponentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/map/map-component.component.ts\n            \n            component\n            MapComponentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/map/map-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            component\n            QualityComponentComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            latitude\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            longitude\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            results\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/stats-component/stats-component.component.ts\n            \n            component\n            StatsComponentComponent\n            \n                96 %\n                (27/28)\n            \n        \n        \n            \n                \n                src/app/components/stats-component/stats-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/weather/weather-component.component.ts\n            \n            component\n            WeatherComponentComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/components/weather/weather-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/calculated-stats.ts\n            \n            class\n            Statistics\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/meteo-stats-data.ts\n            \n            class\n            MeteoStatsData\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/models/station.ts\n            \n            class\n            Station\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/models/statistic-type.ts\n            \n            class\n            StatisticType\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/models/statistic-type.ts\n            \n            variable\n            StatisticTypeList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/statistics.ts\n            \n            class\n            CalculatedProps\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/models/stats-api-model.ts\n            \n            class\n            MeteoStatsModel\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/services/air-quality/air-quality-module.ts\n            \n            class\n            AirQualityData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/air-quality/air-quality.service.ts\n            \n            injectable\n            AirQualityService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/meteo-stat/meteo-stats.service.ts\n            \n            injectable\n            MeteoStatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/meteo-stat/station-list.ts\n            \n            class\n            StationList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/quality/quality-module.ts\n            \n            class\n            AirData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/quality/quality-service.service.ts\n            \n            injectable\n            QualityServiceService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-module.ts\n            \n            class\n            ForecastData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-module.ts\n            \n            class\n            WeatherData\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-service.service.ts\n            \n            injectable\n            WeatherServiceService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.11\n        \n            @angular/common : ~8.2.11\n        \n            @angular/compiler : ~8.2.11\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ~8.2.11\n        \n            @angular/platform-browser : ~8.2.11\n        \n            @angular/platform-browser-dynamic : ~8.2.11\n        \n            @angular/router : ~8.2.11\n        \n            @ng-bootstrap/ng-bootstrap : ^6.0.2\n        \n            chart.js : ^2.9.3\n        \n            jquery : ^3.4.1\n        \n            leaflet : ^1.6.0\n        \n            rxjs : ~6.4.0\n        \n            rxjs-compat : ^6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeteoApp\nThis project was generated with Angular CLI version 8.3.14.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponentComponent\n\nMapComponentComponent\n\nAppModule -->\n\nMapComponentComponent->AppModule\n\n\n\n\n\nQualityComponentComponent\n\nQualityComponentComponent\n\nAppModule -->\n\nQualityComponentComponent->AppModule\n\n\n\n\n\nStatsComponentComponent\n\nStatsComponentComponent\n\nAppModule -->\n\nStatsComponentComponent->AppModule\n\n\n\n\n\nWeatherComponentComponent\n\nWeatherComponentComponent\n\nAppModule -->\n\nWeatherComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../map-component.component.ts)\n                        \n                        \n                            $   (src/.../stats-component.component.ts)\n                        \n                        \n                            $   (src/.../weather-component.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            latitude   (src/.../quality-component.component.ts)\n                        \n                        \n                            longitude   (src/.../quality-component.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            results   (src/.../quality-component.component.ts)\n                        \n                        \n                            routableComponent   (src/.../app-routing.module.ts)\n                        \n                        \n                            StatisticTypeList   (src/.../statistic-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/map/map-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/stats-component/stats-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/weather/weather-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/components/quality/quality-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Współrzędna odpowiadająca szerokości geograficznej\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Współrzędna odpowiadająca długości geograficznej\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n                \n                    \n                        Zmienna pod którą zostaną przypisane dane o jakości powietrza pobrane z api, \na następnie wyświetlone w tabeli.\n\n                    \n                \n\n            \n        \n\n    src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routableComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  WeatherComponentComponent, StatsComponentComponent\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/models/statistic-type.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StatisticTypeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StatisticType[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        {\n            id: 1,\n            name: 'Godzinowy'\n        },\n        {\n            id: 2,\n            name: 'Dzienny'\n        },\n        {\n            id: 3,\n            name: 'Miesięczny'\n        }\n    ]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
