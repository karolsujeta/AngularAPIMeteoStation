var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AirData.html",[0,0.122,1,1.764]],["body/classes/AirData.html",[0,0.178,1,3.076,2,1.356,3,0.414,4,0.351,5,0.351,6,3.667,7,2.582,8,0.479,9,0.736,10,1.58,11,5.958,12,0.825,13,4.522,14,0.651,15,4.522,16,0.771,17,0.034,18,0.546,19,0.493,20,0.771,21,3.759,22,0.414,23,0.024,24,0.029,25,0.024]],["title/components/AirQualityComponentComponent.html",[26,0.707,27,1.104]],["body/components/AirQualityComponentComponent.html",[0,0.1,3,0.233,4,0.198,5,0.198,8,0.269,9,0.503,12,0.39,14,0.573,16,0.434,17,0.034,18,0.523,19,0.337,20,0.434,22,0.233,23,0.014,24,0.02,25,0.027,26,1.201,27,1.696,28,1.726,29,1.313,30,1.313,31,1.313,32,1.313,33,4.185,34,1.841,35,3.208,36,1.193,37,2.103,38,2.472,39,1.313,40,2.859,41,2.368,42,2.368,43,1.9,44,2.472,45,1.9,46,2.103,47,1.439,48,2.709,49,4.744,50,2.116,51,3.023,52,3.684,53,2.103,54,2.116,55,1.439,56,1.313,57,2.116,58,0.695,59,0.699,60,1.622,61,1.622,62,2.546,63,0.994,64,1.088,65,2.546,66,2.116,67,1.833,68,2.116,69,3.684,70,3.684,71,3.165,72,4.744,73,3.684,74,2.653,75,3.944,76,3.684,77,3.344,78,2.653,79,3.684,80,3.684,81,3.684,82,2.103,83,3.684,84,3.684,85,3.684,86,3.684,87,1.574,88,3.684,89,3.684,90,3.944,91,3.684,92,3.684,93,3.684,94,1.9,95,3.684,96,3.684,97,3.684,98,3.684,99,3.684,100,3.684,101,3.684,102,2.103,103,3.062,104,3.684,105,3.684,106,3.684,107,3.062,108,3.684,109,3.684,110,3.684,111,3.684,112,2.653,113,3.684,114,3.684,115,2.653,116,3.684,117,3.684,118,3.062,119,3.684,120,3.684,121,3.684,122,3.684,123,3.684,124,3.684,125,3.684,126,3.684,127,3.684,128,3.684,129,2.103,130,3.684,131,3.684,132,3.684,133,2.103,134,3.684,135,1.454,136,1.454,137,2.546,138,1.088,139,1.9,140,1.9,141,1.313,142,2.447,143,1.313,144,2.447,145,0.91,146,1.313,147,0.834,148,0.91,149,0.834,150,0.763,151,0.994,152,0.763,153,0.994,154,1.313,155,1.313]],["title/classes/AirQualityData.html",[0,0.122,156,1.968]],["body/classes/AirQualityData.html",[0,0.172,2,1.31,3,0.4,4,0.339,5,0.339,7,2.494,12,0.808,14,0.528,16,0.745,17,0.034,18,0.528,19,0.4,20,0.745,21,3.632,22,0.4,23,0.023,24,0.028,25,0.023,34,1.583,58,0.825,60,3.363,61,3.363,71,3.013,133,3.363,156,3.363,157,3.146,158,2.657,159,5.67,160,1.556,161,5.67,162,2.784,163,3.613]],["title/injectables/AirQualityService.html",[51,1.968,164,1.206]],["body/injectables/AirQualityService.html",[0,0.149,3,0.347,4,0.295,5,0.295,8,0.401,9,0.66,12,0.58,14,0.643,16,0.646,17,0.035,18,0.458,19,0.442,20,0.646,22,0.347,23,0.02,24,0.026,25,0.02,34,1.137,42,1.62,47,1.887,51,3.079,55,1.48,58,1.092,59,1.041,60,3.57,61,3.57,63,1.48,64,1.62,148,1.355,156,2.416,160,1.041,164,1.887,165,2.165,166,3.151,167,2.273,168,4.657,169,1.776,170,2.625,171,3.791,172,2.264,173,3.791,174,3.39,175,1.355,176,1.355,177,4.832,178,4.832,179,3.791,180,1.62,181,3.079,182,2.73,183,2.73,184,1.48,185,2.416,186,2.165,187,2.416,188,3.791,189,3.791,190,3.791,191,3.791,192,2.73,193,2.73,194,1.48,195,3.791,196,3.791,197,3.791]],["title/components/AppComponent.html",[26,0.707,145,1.104]],["body/components/AppComponent.html",[0,0.145,3,0.335,4,0.285,5,0.285,8,0.388,9,0.646,14,0.443,17,0.034,18,0.572,19,0.335,22,0.335,23,0.02,24,0.025,25,0.02,26,1.266,27,1.311,28,2.217,29,1.892,30,1.892,31,1.892,32,1.892,34,1.419,39,1.892,40,3.118,41,2.632,42,1.567,43,2.44,45,2.44,58,0.692,59,1.007,75,4.6,90,4.6,138,1.567,139,2.44,140,2.44,141,1.892,142,2.854,143,1.892,144,2.854,145,1.978,146,1.892,147,1.201,148,1.311,149,1.201,150,1.1,151,1.432,152,1.1,153,1.432,154,1.892,155,1.892,160,1.007,175,1.311,176,1.311,186,2.701,198,3.049,199,4.731,200,4.731,201,5.237,202,4.731,203,5.237,204,3.933,205,3.668,206,3.668,207,4.731,208,4.731,209,3.933,210,4.731]],["title/modules/AppModule.html",[184,1.206,211,1.968]],["body/modules/AppModule.html",[0,0.135,3,0.313,4,0.266,5,0.266,17,0.035,22,0.313,23,0.018,24,0.024,25,0.018,27,1.615,34,1.355,35,2.178,41,1.46,58,1.158,59,0.938,138,1.46,145,2.207,147,1.884,149,1.884,150,1.725,152,1.725,180,1.46,184,1.335,211,4.021,212,1.951,213,2.178,214,4.207,215,3.645,216,3.756,217,2.462,218,2.841,219,2.841,220,2.841,221,2.841,222,3.285,223,2.879,224,2.841,225,2.462,226,3.418,227,3.756,228,4.518,229,2.841,230,2.462,231,3.756,232,3.418,233,3.418,234,4.518,235,2.841,236,4.518,237,2.841,238,4.655,239,2.841,240,2.841,241,1.951,242,2.841,243,2.841]],["title/modules/AppRoutingModule.html",[184,1.206,222,1.764]],["body/modules/AppRoutingModule.html",[0,0.149,3,0.347,4,0.295,5,0.295,17,0.035,22,0.442,23,0.02,24,0.026,25,0.02,26,1.324,27,1.727,34,1.68,35,2.416,42,1.62,58,1.135,59,1.041,147,1.582,148,1.355,149,1.582,150,1.595,152,1.595,162,2.416,212,2.165,217,2.73,222,2.759,227,3.151,231,4.017,237,3.151,238,4.81,239,3.151,240,3.151,241,2.165,242,3.151,243,3.151,244,2.73,245,2.73,246,3.39,247,4.832,248,3.079,249,5.916,250,4.832,251,2.165,252,3.791,253,3.791,254,3.791,255,3.791,256,2.73]],["title/classes/CalculatedProps.html",[0,0.122,257,1.764]],["body/classes/CalculatedProps.html",[0,0.136,2,1.035,3,0.316,4,0.268,5,0.268,8,0.365,9,0.621,10,1.722,12,0.528,14,0.697,16,0.588,17,0.035,18,0.417,19,0.528,20,0.588,22,0.316,23,0.019,24,0.024,25,0.019,158,2.897,160,1.673,257,2.596,258,2.868,259,5.085,260,5.768,261,5.768,262,5.405,263,5.768,264,4.546,265,4.154,266,5.405,267,4.493,268,4.546,269,3.45,270,3.45,271,3.45,272,3.45,273,1.78,274,4.546,275,3.45,276,4.546,277,3.45,278,4.546,279,3.45,280,4.546,281,3.45,282,4.546,283,3.45]],["title/classes/ForecastData.html",[0,0.122,284,1.764]],["body/classes/ForecastData.html",[0,0.205,2,0.945,3,0.288,4,0.245,5,0.245,7,1.798,8,0.333,9,0.584,10,1.577,12,0.743,14,0.517,16,0.537,17,0.035,18,0.587,19,0.391,20,0.537,22,0.391,23,0.017,24,0.023,25,0.017,74,3.081,77,3.095,82,3.11,87,2.327,94,2.505,102,3.11,115,2.268,129,2.975,153,1.67,158,2.441,160,1.43,167,1.827,175,1.126,176,1.126,284,2.975,285,3.095,286,2.726,287,2.726,288,3.556,289,3.095,290,3.471,291,3.471,292,3.556,293,3.556,294,3.149,295,3.149,296,4.038,297,4.038,298,4.038,299,3.498,300,3.498,301,4.038,302,3.498,303,3.498,304,3.662,305,3.498,306,4.038,307,3.095,308,3.752,309,3.149,310,2.206,311,3.471,312,2.618,313,2.268,314,2.618,315,2.618,316,3.556,317,2.618,318,2.618,319,3.556,320,2.618,321,3.081,322,3.081,323,2.268,324,2.268,325,2.268,326,2.007,327,2.268,328,2.618,329,2.618]],["title/components/MapComponentComponent.html",[26,0.707,147,1.011]],["body/components/MapComponentComponent.html",[0,0.125,3,0.19,4,0.246,5,0.162,8,0.22,9,0.433,12,0.486,14,0.519,16,0.541,17,0.035,18,0.519,19,0.29,20,0.541,22,0.29,23,0.029,24,0.017,25,0.017,26,1.116,27,0.744,28,1.487,29,1.074,30,1.074,31,1.074,32,1.074,34,0.951,36,0.976,37,2.195,38,2.195,39,1.074,40,2.695,41,2.233,42,0.889,43,1.636,44,2.195,45,1.636,46,1.811,47,1.239,48,2.454,53,2.195,54,2.637,55,1.239,56,1.983,58,0.726,59,0.571,63,0.813,64,0.889,87,1.355,94,1.074,112,1.499,136,1.189,138,0.889,139,1.636,140,1.636,141,1.074,142,2.817,143,1.074,144,2.217,145,0.744,146,1.074,147,1.515,148,2.094,149,0.682,150,0.624,151,0.813,152,0.624,153,0.813,154,1.074,155,1.074,163,3.107,169,0.976,170,2.014,172,1.487,175,0.744,176,0.744,180,0.889,194,1.679,223,2.022,248,1.327,273,2.762,330,3.332,331,3.844,332,3.172,333,2.454,334,3.172,335,1.731,336,1.499,337,1.731,338,1.731,339,1.499,340,1.327,341,2.082,342,1.731,343,1.731,344,2.082,345,3.172,346,3.195,347,2.082,348,2.082,349,1.499,350,2.082,351,2.082,352,1.731,353,2.082,354,2.082,355,2.082,356,1.499,357,2.082,358,2.022,359,0.976,360,1.731,361,2.082,362,2.082,363,2.082,364,2.082,365,2.082,366,1.499,367,2.082,368,1.731,369,2.082,370,2.082,371,3.172,372,3.172,373,2.082,374,3.172,375,3.172,376,2.082,377,2.082,378,2.082,379,2.082,380,2.637,381,2.082,382,2.022,383,2.637,384,2.082,385,2.082,386,2.082,387,2.082,388,2.082,389,2.082,390,2.082,391,2.082,392,2.082,393,2.082,394,2.082,395,1.731,396,1.731,397,1.731,398,1.731,399,1.731,400,1.731,401,1.731,402,1.731,403,1.731,404,1.731,405,1.499,406,1.731,407,1.731,408,1.731,409,1.731,410,1.731,411,1.731,412,1.731,413,3.172,414,1.731,415,2.768,416,1.731,417,2.082,418,2.082,419,2.082,420,2.082,421,2.082,422,2.082,423,1.731,424,3.172,425,3.172,426,3.172,427,2.739,428,3.573,429,2.082,430,2.082,431,2.768,432,2.082,433,2.768,434,2.082,435,1.731,436,2.449,437,1.499,438,1.731,439,2.082,440,2.285,441,2.285,442,2.022,443,2.637,444,1.731,445,1.327,446,1.731,447,1.499,448,1.731,449,2.022,450,1.499]],["title/classes/MeteoStatsData.html",[0,0.122,451,1.764]],["body/classes/MeteoStatsData.html",[0,0.116,2,0.88,3,0.268,4,0.228,5,0.228,8,0.311,9,0.556,10,1.767,12,0.624,14,0.733,16,0.5,17,0.034,18,0.355,19,0.555,20,0.5,22,0.268,23,0.016,24,0.022,25,0.016,58,0.554,133,3.034,151,2.385,158,3.034,162,1.87,265,3.642,451,2.326,452,5.078,453,2.44,454,5.313,455,5.313,456,4.417,457,5.313,458,5.313,459,5.313,460,4.417,461,5.313,462,5.313,463,5.313,464,5.313,465,2.935,466,2.935,467,2.935,468,2.935,469,2.935,470,2.935,471,2.935,472,2.935,473,2.935,474,2.935,475,2.935,476,2.935,477,2.935,478,2.935,479,2.935,480,2.935,481,2.935,482,2.935]],["title/classes/MeteoStatsModel.html",[0,0.122,483,1.968]],["body/classes/MeteoStatsModel.html",[0,0.18,2,1.37,3,0.418,4,0.355,5,0.355,8,0.483,9,0.74,10,1.586,14,0.552,17,0.034,19,0.418,22,0.418,23,0.025,24,0.029,25,0.025,58,0.862,133,3.413,151,1.784,167,2.316,204,3.797,451,3.3,483,3.454,484,4.506,485,3.797,486,4.568]],["title/injectables/MeteoStatsService.html",[164,1.206,487,1.968]],["body/injectables/MeteoStatsService.html",[0,0.125,3,0.291,4,0.247,5,0.247,8,0.337,9,0.588,12,0.487,14,0.696,16,0.832,17,0.035,18,0.59,19,0.536,20,0.832,22,0.291,23,0.017,24,0.023,25,0.017,47,1.682,55,1.682,56,1.642,58,0.988,59,0.874,63,1.243,64,1.36,160,1.547,164,1.682,165,1.817,167,1.36,169,1.491,170,2.452,172,2.019,174,3.112,175,1.54,176,1.54,180,1.36,181,2.028,182,2.292,185,2.028,186,1.817,187,2.028,359,1.491,483,2.028,487,2.745,488,4.222,489,4.222,490,2.646,491,4.883,492,4.883,493,3.517,494,4.883,495,4.308,496,4.308,497,4.308,498,4.308,499,2.82,500,5.232,501,5.232,502,3.183,503,4.308,504,3.183,505,4.308,506,3.183,507,4.308,508,3.183,509,3.183,510,3.183,511,3.183,512,3.183,513,3.183,514,3.183,515,5.232,516,3.183,517,2.646,518,3.183,519,2.646,520,3.183,521,4.883,522,3.183,523,4.883,524,2.028,525,3.183,526,2.292,527,3.183]],["title/components/QualityComponentComponent.html",[26,0.707,149,1.011]],["body/components/QualityComponentComponent.html",[0,0.08,1,1.785,3,0.187,4,0.295,5,0.159,6,1.301,8,0.216,9,0.427,10,0.56,12,0.313,14,0.514,16,0.348,17,0.035,18,0.459,19,0.187,20,0.348,22,0.187,23,0.011,24,0.017,25,0.025,26,1.107,27,0.73,28,1.465,29,1.053,30,1.053,31,1.053,32,1.053,34,1.597,36,0.957,37,1.785,38,2.168,39,1.053,40,2.679,41,2.219,42,0.872,43,1.612,44,2.168,45,1.612,46,1.785,47,1.221,48,2.43,53,2.168,55,1.221,56,1.612,58,0.951,59,0.56,63,0.797,67,1.471,87,0.872,107,1.697,135,1.166,136,1.166,138,0.872,139,1.959,140,2.195,141,1.053,142,2.927,143,1.053,144,2.195,145,0.73,146,1.053,147,0.669,148,1.857,149,1.393,150,0.612,151,0.797,152,0.612,153,0.797,154,1.053,155,1.053,163,2.712,169,0.957,170,1.994,172,1.465,180,0.872,184,0.797,194,2.158,223,1.301,273,2.496,339,2.251,340,1.992,358,1.301,359,0.957,380,1.697,382,1.301,383,1.697,395,1.697,396,1.697,397,1.697,398,1.697,399,1.697,400,1.697,401,1.697,402,1.697,403,1.697,404,1.697,405,1.471,406,1.697,407,1.697,408,1.697,409,1.697,410,2.599,411,2.599,412,1.697,414,1.697,415,1.471,416,1.697,423,1.697,427,2.42,428,2.599,431,2.735,433,2.251,436,2.42,438,1.697,440,2.251,441,2.251,442,1.992,443,2.599,444,1.697,445,2.42,446,1.697,447,2.251,448,1.697,449,1.992,450,1.471,528,3.303,529,4.255,530,2.923,531,2.599,532,1.697,533,2.042,534,2.042,535,1.697,536,3.126,537,1.471,538,2.042,539,1.471,540,3.303,541,3.065,542,1.697,543,2.042,544,1.697,545,2.042,546,3.126,547,2.042,548,2.042,549,2.042,550,2.042,551,2.042,552,2.042,553,2.042,554,2.042,555,2.042,556,2.042,557,1.697,558,1.471,559,1.471,560,1.471,561,2.042,562,2.042,563,2.042,564,2.042,565,2.042,566,2.042,567,2.042,568,2.042,569,2.042,570,2.042,571,1.697,572,2.042,573,2.042,574,2.042,575,2.042,576,2.042,577,2.042,578,2.042,579,2.042,580,2.042,581,2.042,582,2.042,583,2.042,584,2.042,585,2.042,586,2.042,587,2.042,588,2.042,589,2.042,590,2.042,591,3.126,592,2.042,593,3.126,594,2.042,595,2.042,596,2.042,597,2.042,598,2.042,599,2.042,600,5.194,601,3.126,602,5.194,603,3.126,604,3.126,605,3.126,606,3.126,607,3.126,608,3.126,609,3.126,610,3.126,611,3.126,612,3.126,613,3.126,614,2.042,615,1.697,616,1.697,617,2.599,618,1.697,619,2.599,620,1.697,621,2.042,622,3.126,623,2.042,624,1.697,625,1.697,626,1.471,627,1.697,628,2.042]],["title/injectables/QualityServiceService.html",[164,1.206,530,1.968]],["body/injectables/QualityServiceService.html",[0,0.138,1,1.997,3,0.32,4,0.272,5,0.272,6,3.689,8,0.37,9,0.626,10,1.405,12,0.535,14,0.682,16,0.782,17,0.035,18,0.554,19,0.516,20,0.782,22,0.32,23,0.019,24,0.025,25,0.019,34,1.049,47,1.791,55,1.366,58,1.13,59,0.96,63,1.366,64,1.96,102,2.923,148,1.25,160,1.619,164,1.791,165,1.997,168,3.813,169,1.639,170,2.546,172,2.149,174,3.262,175,1.25,176,1.25,180,1.494,181,2.229,183,3.304,184,1.366,185,2.229,186,1.997,187,2.229,192,2.519,193,2.519,194,1.366,415,2.519,493,3.686,530,2.923,537,2.519,629,2.519,630,5.118,631,5.118,632,4.587,633,5.118,634,3.497,635,4.587,636,3.497,637,3.813,638,2.907,639,2.907,640,2.907,641,2.907,642,3.497,643,3.497,644,2.907,645,2.907,646,2.519]],["title/classes/Station.html",[0,0.122,499,1.593]],["body/classes/Station.html",[0,0.172,2,1.307,3,0.399,4,0.339,5,0.339,8,0.461,9,0.72,10,1.654,12,0.667,14,0.684,16,0.743,17,0.034,18,0.74,19,0.518,20,0.743,22,0.399,23,0.023,24,0.028,25,0.023,71,3.36,157,3.139,158,2.757,160,1.615,499,2.718,647,3.623,648,4.358,649,5.27,650,3.623]],["title/classes/StationList.html",[0,0.122,651,1.968]],["body/classes/StationList.html",[0,0.099,2,0.752,3,0.229,4,0.195,5,0.195,8,0.265,9,0.497,12,0.657,14,0.44,17,0.035,19,0.229,22,0.229,23,0.013,24,0.02,25,0.013,58,0.473,194,0.979,488,3.091,499,1.293,651,3.189,652,3.091,653,2.084,654,3.643,655,4.291,656,2.084,657,2.084,658,6.515,659,2.507,660,2.507,661,2.507,662,3.643,663,2.507,664,2.507,665,2.507,666,2.507,667,2.507,668,2.507,669,2.507,670,2.507,671,2.507,672,2.507,673,2.507,674,2.507,675,2.507,676,2.507,677,3.643,678,2.507,679,2.507,680,2.507,681,2.507,682,2.507,683,2.507,684,2.507,685,2.507,686,2.507,687,2.507,688,2.507,689,2.507,690,2.507,691,2.507,692,2.507,693,2.507,694,2.507,695,2.507,696,2.507,697,2.507,698,2.507,699,2.507,700,2.507,701,2.507,702,2.507,703,2.507,704,2.507,705,2.507,706,2.507,707,2.507,708,2.507,709,2.507,710,2.507,711,2.507,712,2.507,713,2.507,714,2.507,715,2.507,716,2.507,717,2.507,718,2.507,719,2.507,720,2.507,721,2.507,722,2.507,723,2.507,724,2.507,725,2.507,726,2.507,727,3.643,728,2.507,729,2.507,730,2.507,731,2.507,732,2.507,733,2.507,734,2.507,735,2.507,736,2.507,737,2.507,738,2.507,739,3.643,740,2.507,741,2.507,742,2.507,743,2.507,744,2.507,745,2.507,746,2.507,747,3.643,748,2.507,749,2.507,750,2.507,751,2.507,752,2.507,753,2.507,754,2.507,755,2.507,756,2.507,757,2.507,758,2.507,759,2.507,760,2.507,761,2.507,762,2.507,763,2.507,764,2.507,765,2.507,766,2.507,767,2.507,768,2.507,769,2.507,770,2.507,771,2.507,772,2.507,773,2.507,774,2.507,775,2.507,776,2.507,777,2.507,778,2.507,779,2.507,780,2.507,781,2.507,782,2.507,783,2.507,784,2.507,785,2.507,786,2.507,787,2.507,788,2.507,789,2.507,790,2.507,791,2.507,792,2.507,793,2.507,794,2.507,795,2.507,796,2.507,797,2.507,798,2.507,799,2.507,800,2.507,801,2.507,802,2.507,803,2.507,804,2.507,805,2.507,806,2.507,807,2.507,808,2.507,809,2.507,810,2.507,811,2.507,812,2.507,813,2.507,814,2.507,815,2.507,816,2.507,817,2.507,818,2.507,819,2.507]],["title/classes/StatisticType.html",[0,0.122,820,1.764]],["body/classes/StatisticType.html",[0,0.161,2,1.222,3,0.373,4,0.316,5,0.316,8,0.431,9,0.69,10,1.623,12,0.623,14,0.664,16,0.694,17,0.035,18,0.752,19,0.503,20,0.694,22,0.462,23,0.022,24,0.027,25,0.022,71,3.488,157,2.934,158,2.694,160,1.578,248,2.596,359,1.909,524,2.596,526,2.934,650,3.386,820,3.139,821,4.141,822,2.934,823,4.073,824,5.056,825,2.596,826,3.386,827,3.386,828,3.386]],["title/classes/Statistics.html",[0,0.122,251,1.764]],["body/classes/Statistics.html",[0,0.161,2,1.227,3,0.374,4,0.318,5,0.318,8,0.433,9,0.692,10,1.709,12,0.776,14,0.696,16,0.697,17,0.034,18,0.494,19,0.527,20,0.697,22,0.374,23,0.022,24,0.027,25,0.022,58,0.772,251,3.145,257,3.629,456,4.921,460,4.787,829,4.921,830,3.401,831,5.919,832,4.092,833,4.092,834,4.092,835,4.092,836,4.092]],["title/components/StatsComponentComponent.html",[26,0.707,150,0.926]],["body/components/StatsComponentComponent.html",[0,0.055,3,0.127,4,0.108,5,0.108,8,0.148,9,0.315,12,0.213,14,0.706,16,0.647,17,0.035,18,0.523,19,0.493,20,0.647,22,0.127,23,0.007,24,0.012,25,0.02,26,0.936,27,0.498,28,1.08,29,0.719,30,0.719,31,0.719,32,0.719,34,0.691,36,0.653,37,1.316,38,1.683,39,0.719,40,2.334,41,1.933,42,0.596,43,1.189,44,1.683,45,1.189,46,1.316,47,0.9,48,1.956,50,1.159,53,1.316,55,1.979,56,2.109,57,1.159,58,0.854,59,0.383,63,0.544,64,1.933,66,1.159,67,1.004,68,1.159,87,0.596,102,0.796,118,1.159,133,1.956,135,1.683,136,0.796,138,0.596,139,1.189,140,1.189,141,0.719,142,1.957,143,0.719,144,1.767,145,0.498,146,0.719,147,0.456,148,0.498,149,0.456,150,1.027,151,1.888,152,0.418,153,0.544,154,0.719,155,0.719,160,1.327,167,0.596,175,0.498,176,0.498,194,1.767,209,1.917,241,3.352,248,3.081,251,1.683,257,2.47,265,2.467,267,3.398,273,2.109,304,1.469,326,1.469,335,1.159,337,1.159,340,0.888,346,1.917,349,2.123,356,1.004,358,0.888,359,1.08,382,2.605,427,0.888,436,0.888,437,1.004,441,1.004,442,0.888,445,1.469,447,1.004,449,1.469,451,0.796,487,2.183,489,1.004,499,0.719,531,1.159,558,2.944,559,2.123,560,1.661,571,1.159,626,2.733,651,2.183,652,1.004,656,1.159,657,1.159,820,1.683,825,1.879,837,4.228,838,2.948,839,2.948,840,2.948,841,2.948,842,4.088,843,2.948,844,2.948,845,2.948,846,2.948,847,2.948,848,2.948,849,3.794,850,2.306,851,3.426,852,2.306,853,2.306,854,3.426,855,3.426,856,3.426,857,3.426,858,2.306,859,3.426,860,3.426,861,2.306,862,2.306,863,5.246,864,1.394,865,1.159,866,2.306,867,1.394,868,2.306,869,1.394,870,1.394,871,1.394,872,1.394,873,1.159,874,1.394,875,2.306,876,1.394,877,1.394,878,1.394,879,1.159,880,4.327,881,1.159,882,1.394,883,1.394,884,1.394,885,1.159,886,1.394,887,1.394,888,1.394,889,1.394,890,2.306,891,1.394,892,1.394,893,1.394,894,1.394,895,1.394,896,2.948,897,2.948,898,2.306,899,2.306,900,2.306,901,1.394,902,1.394,903,1.394,904,1.394,905,1.394,906,2.306,907,1.394,908,2.306,909,2.306,910,2.306,911,1.394,912,1.394,913,1.159,914,1.394,915,1.394,916,1.394,917,1.394,918,1.394,919,1.394,920,1.394,921,1.394,922,1.394,923,1.394,924,2.306,925,1.394,926,2.948,927,1.394,928,1.394,929,1.394,930,2.306,931,1.394,932,2.306,933,1.394,934,1.394,935,1.394,936,1.394,937,1.394,938,1.394,939,1.394,940,1.394,941,1.394,942,1.394,943,2.948,944,1.394,945,1.394,946,1.394,947,1.394,948,1.394,949,1.394,950,1.394,951,1.394,952,2.306,953,1.394,954,2.306,955,1.394,956,1.394,957,1.394,958,1.394,959,1.394,960,1.394,961,1.394,962,1.159,963,1.394,964,1.394,965,1.394,966,4.692,967,2.948,968,1.394,969,2.306,970,2.306,971,1.394,972,1.394,973,1.394,974,2.948,975,1.394,976,2.306,977,1.394,978,1.394,979,1.394,980,2.948,981,1.394,982,2.306,983,1.394,984,1.394,985,1.394,986,2.306,987,2.306,988,2.306,989,2.306,990,1.917,991,1.917,992,2.306,993,2.306,994,2.306,995,2.306,996,2.306,997,2.306,998,2.306,999,2.306,1000,2.306,1001,2.306,1002,2.306,1003,2.306,1004,2.306,1005,2.306,1006,2.306,1007,2.306,1008,2.306,1009,2.306,1010,2.306,1011,2.306,1012,2.306,1013,1.917,1014,1.159,1015,1.394,1016,1.917,1017,1.394,1018,1.394,1019,1.394,1020,1.917,1021,1.159,1022,1.917,1023,1.159,1024,1.159,1025,2.848,1026,1.394,1027,1.394,1028,1.394,1029,1.394,1030,1.394,1031,2.306,1032,1.159,1033,1.394,1034,1.394,1035,2.451,1036,1.917,1037,2.306,1038,1.394,1039,1.394]],["title/components/WeatherComponentComponent.html",[26,0.707,152,0.926]],["body/components/WeatherComponentComponent.html",[0,0.044,3,0.103,4,0.088,5,0.088,8,0.119,9,0.263,10,1.482,12,0.172,14,0.584,16,0.43,17,0.035,18,0.54,19,0.394,20,0.43,22,0.103,23,0.006,24,0.01,25,0.006,26,0.945,27,0.403,28,0.903,29,0.581,30,0.581,31,0.581,32,0.581,34,0.578,36,0.528,37,1.1,38,1.442,39,0.581,40,2.129,41,1.763,42,0.481,43,0.994,44,1.442,45,0.994,46,1.1,47,0.752,48,1.707,53,1.707,55,1.312,56,1.733,58,0.634,59,0.309,63,0.44,64,0.481,77,2.334,78,2.42,82,2.629,87,1.565,94,2.907,112,2.42,129,2.988,135,0.643,136,1.442,138,0.481,139,0.994,140,0.994,141,0.581,142,1.733,143,0.581,144,1.542,145,0.403,146,0.581,147,0.369,148,0.403,149,0.369,150,0.338,151,0.44,152,0.896,153,1.744,154,0.581,155,0.581,160,1.133,163,0.718,169,0.528,170,1.401,172,1.183,175,1.201,176,1.201,180,0.481,184,0.44,273,1.302,286,1.609,287,0.718,289,3.44,290,1.905,291,1.905,299,2.153,300,1.388,303,2.153,304,2.846,305,1.388,307,1.905,308,2.153,310,0.581,311,2.334,313,2.638,321,1.388,322,1.388,323,1.388,324,1.388,325,1.388,326,1.228,327,1.388,333,1.707,336,2.153,338,1.602,339,0.811,340,0.718,342,2.793,343,1.602,349,3.671,352,1.602,356,1.388,358,1.609,359,0.903,360,0.936,366,1.819,368,0.936,382,2.334,405,3.103,427,1.228,431,1.388,433,1.388,435,1.602,436,1.905,437,2.153,440,0.811,442,2.141,445,1.228,532,0.936,542,1.602,544,0.936,557,4.4,560,1.819,615,2.485,616,2.793,617,3.431,618,2.485,619,3.254,620,2.485,624,1.602,625,1.602,626,3.103,627,3.431,865,0.936,873,1.602,879,0.936,881,0.936,885,0.936,962,0.936,990,3.929,991,1.602,1013,1.602,1014,0.936,1016,1.602,1020,1.602,1021,0.936,1022,2.793,1023,2.099,1024,1.602,1025,2.485,1032,0.936,1035,3.044,1036,1.602,1040,3.552,1041,3.36,1042,3.36,1043,2.525,1044,2.525,1045,2.525,1046,2.525,1047,2.525,1048,3.36,1049,2.525,1050,1.927,1051,2.989,1052,1.126,1053,3.254,1054,1.126,1055,1.126,1056,4.309,1057,1.126,1058,1.126,1059,1.927,1060,1.927,1061,1.927,1062,3.431,1063,3.662,1064,3.662,1065,1.927,1066,4.127,1067,1.927,1068,3.662,1069,2.989,1070,2.989,1071,2.485,1072,2.485,1073,2.989,1074,2.485,1075,1.927,1076,3.044,1077,1.927,1078,1.927,1079,1.927,1080,3.662,1081,1.927,1082,1.927,1083,1.927,1084,1.927,1085,2.989,1086,2.485,1087,1.927,1088,1.927,1089,1.927,1090,1.126,1091,1.927,1092,1.927,1093,2.485,1094,2.989,1095,1.927,1096,2.485,1097,1.602,1098,1.602,1099,1.927,1100,1.126,1101,1.927,1102,1.927,1103,2.989,1104,1.927,1105,1.927,1106,1.927,1107,1.927,1108,2.989,1109,1.927,1110,2.525,1111,2.525,1112,1.927,1113,3.914,1114,2.525,1115,1.927,1116,2.485,1117,1.927,1118,1.927,1119,1.927,1120,1.927,1121,2.989,1122,2.989,1123,2.989,1124,1.126,1125,4.127,1126,1.927,1127,4.127,1128,3.662,1129,1.927,1130,1.126,1131,1.927,1132,1.126,1133,0.936,1134,1.126,1135,1.126,1136,1.126,1137,1.126,1138,1.927,1139,1.126,1140,1.927,1141,1.126,1142,1.126,1143,1.126,1144,1.126,1145,1.126,1146,1.126,1147,1.126,1148,1.126,1149,1.126,1150,1.126,1151,1.126,1152,0.936,1153,1.126,1154,1.126,1155,1.126,1156,1.927,1157,1.927,1158,1.126,1159,1.126,1160,1.126,1161,0.936,1162,1.927,1163,1.927,1164,1.927,1165,1.927,1166,2.989,1167,1.927,1168,1.927,1169,1.927,1170,1.927,1171,1.927,1172,1.927,1173,1.927,1174,1.927,1175,1.927,1176,1.927,1177,1.126,1178,4.127,1179,1.126,1180,1.126,1181,1.126,1182,1.126,1183,1.126,1184,1.126,1185,1.126,1186,1.126,1187,1.126,1188,1.126,1189,1.126,1190,1.927,1191,1.126,1192,1.126,1193,1.126,1194,1.126,1195,1.927,1196,1.927,1197,1.126,1198,1.126,1199,1.126,1200,1.126,1201,1.126,1202,1.927,1203,2.989,1204,3.914,1205,1.927,1206,3.36,1207,1.927,1208,2.989,1209,2.989,1210,2.989,1211,1.126,1212,1.927,1213,1.927,1214,1.126,1215,1.126,1216,1.126,1217,1.126,1218,2.989,1219,1.126,1220,1.126,1221,1.126,1222,1.126,1223,1.927,1224,1.927,1225,1.126,1226,1.126,1227,1.126,1228,1.126,1229,1.126,1230,1.126,1231,1.126,1232,1.126,1233,1.126,1234,1.126,1235,1.126,1236,1.126,1237,1.126,1238,1.126,1239,1.126]],["title/classes/WeatherData.html",[0,0.122,310,1.593]],["body/classes/WeatherData.html",[0,0.181,2,0.854,3,0.26,4,0.221,5,0.221,7,1.625,8,0.301,9,0.545,10,1.658,12,0.705,14,0.635,16,0.485,17,0.034,18,0.658,19,0.481,20,0.485,22,0.365,23,0.015,24,0.021,25,0.015,74,2.05,77,1.814,82,3.258,87,1.704,94,2.71,102,2.278,115,3.317,129,3,153,2.127,158,2.753,160,1.613,167,1.704,284,2.278,285,3.47,286,2.542,287,2.542,288,3.316,289,3.18,290,2.542,291,2.542,292,3.316,293,2.366,296,3.828,297,3.828,298,2.366,299,2.05,300,2.05,301,2.366,302,2.873,303,2.05,304,3.849,305,2.05,306,2.366,307,1.814,308,3.594,310,2.574,311,3.348,312,3.828,313,3.317,314,3.828,315,3.828,316,4.527,317,3.828,318,3.828,319,4.527,320,3.828,321,4.027,322,4.027,323,3.317,324,3.317,325,3.317,326,2.934,327,3.317,328,3.828,329,3.828,1240,2.366,1241,2.847,1242,2.847,1243,2.847,1244,2.847,1245,2.847,1246,2.847]],["title/injectables/WeatherServiceService.html",[164,1.206,333,1.764]],["body/injectables/WeatherServiceService.html",[0,0.095,3,0.22,4,0.187,5,0.187,8,0.255,9,0.483,10,1.412,12,0.368,14,0.595,16,0.714,17,0.035,18,0.506,19,0.45,20,0.714,22,0.22,23,0.013,24,0.019,25,0.013,47,1.381,55,1.381,58,1.03,59,0.661,63,0.94,64,1.974,78,2.547,82,2.019,87,2.199,94,3.095,103,2.001,129,3.233,148,0.86,153,0.94,160,1.554,164,1.381,165,1.374,167,2.481,169,1.128,170,2.165,172,1.657,174,3.136,175,1.264,176,1.264,180,1.028,181,2.253,183,2.547,184,0.94,185,1.534,186,1.374,187,2.671,192,2.547,193,2.547,194,1.381,284,1.374,285,3.279,286,2.671,287,2.253,289,3.477,290,2.944,291,3.279,302,2.547,307,2.944,310,1.241,311,2.253,333,2.019,336,3.327,366,2.547,493,3.019,519,2.001,537,1.733,629,1.733,637,2.939,638,2.001,639,2.001,640,2.001,641,2.001,644,2.001,645,2.001,646,1.733,1053,3.841,1062,4.278,1071,3.841,1072,3.841,1074,2.939,1076,4.278,1086,3.841,1093,2.939,1096,4.278,1097,2.939,1098,3.841,1116,2.939,1152,2.939,1161,2.939,1240,3.841,1247,3.536,1248,3.536,1249,4.192,1250,3.536,1251,2.407,1252,3.536,1253,3.536,1254,3.536,1255,4.62,1256,2.407,1257,3.536,1258,3.536,1259,3.536,1260,4.62,1261,3.536,1262,2.407,1263,4.62,1264,4.62,1265,3.536,1266,3.536,1267,3.536,1268,3.536,1269,3.536,1270,2.407,1271,2.407,1272,2.407,1273,2.407,1274,2.407,1275,2.407,1276,2.407,1277,2.407,1278,2.407,1279,2.407]],["title/coverage.html",[1280,3.509]],["body/coverage.html",[0,0.235,1,1.67,5,0.227,6,2.591,7,2.883,17,0.035,19,0.268,23,0.016,24,0.022,25,0.022,26,1.257,27,1.046,33,2.432,34,1.401,35,1.864,36,2.843,51,1.864,60,2.591,61,2.591,135,1.67,145,1.046,147,0.958,149,0.958,150,0.877,151,1.142,152,0.877,156,1.864,164,1.972,166,2.432,167,1.25,194,1.142,198,2.432,241,2.321,244,2.107,245,2.107,251,1.67,256,2.107,257,1.67,258,2.432,273,3.301,284,1.67,285,2.978,310,1.509,330,2.928,333,1.67,449,2.591,451,1.67,452,2.432,453,2.432,483,1.864,484,2.432,485,2.432,487,1.864,488,2.928,489,2.107,490,2.432,499,1.509,528,3.956,530,1.864,539,2.107,540,2.107,541,2.107,629,2.928,647,2.432,651,1.864,652,2.107,653,2.432,820,1.67,821,2.928,822,2.928,825,1.864,829,2.432,830,2.432,837,2.928,913,5.076,1040,2.928,1280,2.432,1281,2.925,1282,2.925,1283,2.925,1284,6.105,1285,4.672,1286,5.05,1287,2.925,1288,2.925,1289,2.925,1290,2.925,1291,4.672,1292,2.925,1293,2.925,1294,4.065,1295,2.925,1296,2.925,1297,2.925,1298,2.925,1299,2.925,1300,2.432,1301,3.38,1302,2.432,1303,3.38,1304,2.432,1305,2.432,1306,2.925]],["title/dependencies.html",[213,2.368,1307,2.577]],["body/dependencies.html",[17,0.035,23,0.023,24,0.028,25,0.023,59,1.199,162,2.784,182,3.801,213,2.784,215,3.146,229,4.387,230,3.801,235,3.632,535,3.632,1133,3.632,1308,4.369,1309,6.198,1310,4.369,1311,4.369,1312,4.369,1313,4.369,1314,3.632,1315,4.369,1316,4.369,1317,4.369,1318,4.369,1319,4.369,1320,4.369,1321,4.369,1322,4.369,1323,4.369,1324,4.369,1325,4.369,1326,4.369,1327,4.369]],["title/index.html",[8,0.273,1328,2.577,1329,2.577]],["body/index.html",[4,0.312,17,0.027,18,0.484,23,0.022,24,0.027,25,0.022,26,1.249,41,1.713,194,1.566,225,2.888,517,4.753,646,3.606,1314,5.061,1330,4.01,1331,5.007,1332,4.01,1333,5.459,1334,5.459,1335,4.01,1336,4.01,1337,4.01,1338,5.884,1339,4.01,1340,4.01,1341,4.01,1342,4.01,1343,4.01,1344,4.01,1345,4.01,1346,4.01,1347,4.01,1348,4.01,1349,5.459,1350,5.459,1351,4.01,1352,5.884,1353,4.01,1354,4.01,1355,4.01,1356,4.01,1357,4.01,1358,4.01,1359,3.333,1360,5.007,1361,5.007,1362,5.717,1363,4.01,1364,5.007,1365,5.007,1366,4.01,1367,4.01,1368,4.01,1369,4.01,1370,5.459,1371,4.01,1372,4.01,1373,4.01,1374,4.01]],["title/modules.html",[212,2.41]],["body/modules.html",[17,0.03,23,0.026,24,0.03,25,0.026,211,3.124,212,2.799,222,2.799,230,3.531,1375,4.903,1376,4.903,1377,5.649,1378,4.903,1379,4.903]],["title/overview.html",[1380,3.509]],["body/overview.html",[2,1.264,17,0.034,23,0.023,24,0.028,25,0.023,28,1.975,138,1.801,145,2.199,147,1.828,149,1.828,150,1.674,152,1.674,165,2.407,184,1.646,211,4.088,212,2.407,213,2.686,214,3.505,215,3.036,216,3.505,217,3.036,218,3.505,219,3.505,220,3.505,221,3.505,222,3.188,223,3.291,224,3.505,225,3.036,246,2.686,450,3.036,524,2.686,1380,3.505,1381,4.216,1382,4.216,1383,4.216]],["title/routes.html",[246,2.69]],["body/routes.html",[17,0.031,23,0.027,24,0.031,25,0.027,246,3.202]],["title/miscellaneous/variables.html",[1384,2.142,1385,3.089]],["body/miscellaneous/variables.html",[8,0.375,17,0.035,18,0.623,19,0.571,23,0.019,24,0.025,25,0.028,36,2.909,71,2.942,150,1.063,152,1.063,175,2.026,176,2.026,241,2.024,244,2.553,245,3.333,256,3.333,330,2.553,359,1.661,524,2.259,526,2.553,528,2.553,539,3.333,540,3.333,541,3.333,558,2.553,559,3.333,820,2.024,821,2.553,822,3.333,825,2.949,826,2.947,827,2.947,828,2.947,837,2.553,1040,2.553,1300,2.947,1301,4.541,1302,2.947,1303,2.947,1304,3.847,1305,3.847,1359,3.847,1384,2.947,1385,2.947,1386,5.666,1387,3.545,1388,3.545,1389,3.545,1390,4.628,1391,3.545,1392,3.545,1393,3.545,1394,3.545,1395,3.545,1396,3.545,1397,4.628]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":273,"title":{},"body":{"classes/CalculatedProps.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["0.05",{"_index":596,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0.2",{"_index":1226,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.4s",{"_index":1229,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.5",{"_index":591,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0.5s",{"_index":1207,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["0.9.1",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1294,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1295,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1292,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1293,"title":{},"body":{"coverage.html":{}}}],["088",{"_index":623,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["0ff",{"_index":628,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["1",{"_index":359,"title":{},"body":{"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"classes/StatisticType.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["1.2s",{"_index":1219,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["1.5s",{"_index":1218,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["1.6.0",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":439,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["100",{"_index":449,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["100px",{"_index":435,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["108",{"_index":425,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["10px",{"_index":625,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["11",{"_index":1383,"title":{},"body":{"overview.html":{}}}],["11px",{"_index":618,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["12/14",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["130px",{"_index":432,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["1500",{"_index":360,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["15px",{"_index":1202,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["19",{"_index":389,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["1px",{"_index":619,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["1rem",{"_index":1037,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["1s",{"_index":1205,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["2",{"_index":524,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.9.3",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":137,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["20px",{"_index":622,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["22px",{"_index":1231,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["23.1688403",{"_index":384,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["25",{"_index":614,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["2560x1600.jpg",{"_index":1185,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["25px",{"_index":1200,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["270",{"_index":426,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["2px",{"_index":446,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["2s",{"_index":1214,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["3",{"_index":526,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["3.4.1",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1296,"title":{},"body":{"coverage.html":{}}}],["30px",{"_index":443,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["30vh",{"_index":1015,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["350px",{"_index":1238,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["390px",{"_index":434,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["3px",{"_index":617,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["4",{"_index":1382,"title":{},"body":{"overview.html":{}}}],["40",{"_index":1228,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["40vh",{"_index":1179,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["5",{"_index":450,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"overview.html":{}}}],["5/6",{"_index":1299,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1224,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["52",{"_index":91,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["53.1324886",{"_index":383,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["5px",{"_index":1032,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["6",{"_index":1381,"title":{},"body":{"overview.html":{}}}],["6.0.2",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1297,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":1201,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["6px",{"_index":1232,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["708192",{"_index":1028,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["7px",{"_index":1216,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["8",{"_index":403,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["8.2.11",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["8.2.14",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["8.3.14",{"_index":1336,"title":{},"body":{"index.html":{}}}],["83",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":385,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["90",{"_index":424,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["absolute",{"_index":428,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["actual_component",{"_index":155,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["adnie",{"_index":111,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["adres",{"_index":1263,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["af6d2285",{"_index":1018,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["afterviewinit",{"_index":376,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["air",{"_index":42,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["airdata",{"_index":1,"title":{"classes/AirData.html":{}},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["airdata(item.current",{"_index":643,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["airly",{"_index":189,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["airport",{"_index":749,"title":{},"body":{"classes/StationList.html":{}}}],["airqualitycomponentcomponent",{"_index":27,"title":{"components/AirQualityComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["airqualitydata",{"_index":156,"title":{"classes/AirQualityData.html":{}},"body":{"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["airqualitydata(item.id",{"_index":195,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["airqualityservice",{"_index":51,"title":{"injectables/AirQualityService.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["aktualne",{"_index":1253,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["aktualnym",{"_index":1093,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["align",{"_index":1025,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["analizowanego",{"_index":1123,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["anchor",{"_index":590,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["anchorxunits",{"_index":592,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["anchoryunits",{"_index":594,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["angular",{"_index":1333,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":180,"title":{},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["angular/compiler",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/i18n/i18n_ast",{"_index":538,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["angular/core",{"_index":59,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":162,"title":{},"body":{"classes/AirQualityData.html":{},"modules/AppRoutingModule.html":{},"classes/MeteoStatsData.html":{},"dependencies.html":{}}}],["animacje",{"_index":1142,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["animation",{"_index":557,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["api",{"_index":167,"title":{},"body":{"injectables/AirQualityService.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/StatsComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["api/rest/aqindex/getindex/52",{"_index":178,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["apibaseurl",{"_index":491,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["apikey",{"_index":492,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["apiurl",{"_index":493,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["apiurlforecast",{"_index":1249,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["aplikacja",{"_index":72,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["aplikacji",{"_index":1140,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["app",{"_index":41,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"index.html":{}}}],["app.component",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":145,"title":{"components/AppComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":211,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":222,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":1114,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["area\").show",{"_index":1151,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["args",{"_index":406,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["around",{"_index":1222,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["array",{"_index":655,"title":{},"body":{"classes/StationList.html":{}}}],["arrow",{"_index":902,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["artifacts",{"_index":1353,"title":{},"body":{"index.html":{}}}],["assets/marker/marker.png",{"_index":598,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["atmosferyczny",{"_index":480,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["attribution",{"_index":390,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["auto",{"_index":437,"title":{},"body":{"components/MapComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["automatically",{"_index":1343,"title":{},"body":{"index.html":{}}}],["available",{"_index":1379,"title":{},"body":{"modules.html":{}}}],["average",{"_index":259,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["averagesum",{"_index":266,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["background",{"_index":626,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["backwards",{"_index":1210,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["bartoszow",{"_index":742,"title":{},"body":{"classes/StationList.html":{}}}],["belsk",{"_index":760,"title":{},"body":{"classes/StationList.html":{}}}],["biala",{"_index":806,"title":{},"body":{"classes/StationList.html":{}}}],["bialystok",{"_index":712,"title":{},"body":{"classes/StationList.html":{}}}],["bielany",{"_index":728,"title":{},"body":{"classes/StationList.html":{}}}],["bielsko",{"_index":805,"title":{},"body":{"classes/StationList.html":{}}}],["black",{"_index":448,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["block",{"_index":1227,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["boolean",{"_index":880,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["bootstrap",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":445,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["bottom",{"_index":441,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["box",{"_index":615,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["brak",{"_index":1012,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["break",{"_index":523,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["browse",{"_index":1377,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["brwinow",{"_index":725,"title":{},"body":{"classes/StationList.html":{}}}],["build",{"_index":1352,"title":{},"body":{"index.html":{}}}],["bylo",{"_index":572,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["będ",{"_index":300,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["będzie",{"_index":116,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["błędzie",{"_index":1117,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["c",{"_index":990,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["ca",{"_index":100,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["calculatedprops",{"_index":257,"title":{"classes/CalculatedProps.html":{}},"body":{"classes/CalculatedProps.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["calculatedprops(minpressure",{"_index":977,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["calculatedprops(mintemperature",{"_index":971,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["calculatedprops(minwindpower",{"_index":983,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["calculatepressurestats",{"_index":850,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["calculatepressurestats(radioselected",{"_index":862,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["calculatestats",{"_index":851,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["calculatetemperaturestats",{"_index":852,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["calculatetemperaturestats(radioselected",{"_index":866,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["calculatewindpowerstats",{"_index":853,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["calculatewindpowerstats(radioselected",{"_index":868,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["caqi",{"_index":605,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["case",{"_index":521,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["catcherror",{"_index":639,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["catcherror((error",{"_index":644,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["cdd6da",{"_index":1029,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["center",{"_index":382,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["change",{"_index":1345,"title":{},"body":{"index.html":{}}}],["chart",{"_index":1113,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["chart.js",{"_index":1133,"title":{},"body":{"components/WeatherComponentComponent.html":{},"dependencies.html":{}}}],["chce",{"_index":120,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["chcemy",{"_index":93,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["check",{"_index":1373,"title":{},"body":{"index.html":{}}}],["chojnice",{"_index":700,"title":{},"body":{"classes/StationList.html":{}}}],["ciśnienie",{"_index":326,"title":{},"body":{"classes/ForecastData.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["class",{"_index":0,"title":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/WeatherData.html":{}},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"classes/WeatherData.html":{},"overview.html":{}}}],["cli",{"_index":1334,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":549,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["cluster_appmodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":85,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["code",{"_index":1347,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":1031,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["color",{"_index":627,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["column",{"_index":1188,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["columngradient",{"_index":1026,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["compat",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":26,"title":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":144,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.css",{"_index":44,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.html",{"_index":46,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts",{"_index":36,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component.component.ts:107",{"_index":865,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts:11",{"_index":52,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["component.component.ts:123",{"_index":867,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:127",{"_index":1052,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:15",{"_index":54,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{}}}],["component.component.ts:162",{"_index":864,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:18",{"_index":57,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["component.component.ts:19",{"_index":337,"title":{},"body":{"components/MapComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["component.component.ts:20",{"_index":888,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:200",{"_index":869,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:21",{"_index":889,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:22",{"_index":884,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:23",{"_index":883,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:24",{"_index":885,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts:25",{"_index":886,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:26",{"_index":531,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["component.component.ts:27",{"_index":887,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:28",{"_index":881,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts:29",{"_index":882,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:30",{"_index":335,"title":{},"body":{"components/MapComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["component.component.ts:31",{"_index":861,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:32",{"_index":532,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts:36",{"_index":1124,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:38",{"_index":874,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:40",{"_index":1132,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:44",{"_index":1130,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:48",{"_index":873,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts:53",{"_index":872,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:57",{"_index":1100,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:59",{"_index":871,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:65",{"_index":876,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:67",{"_index":533,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["component.component.ts:69",{"_index":879,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["component.component.ts:82",{"_index":1090,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["component.component.ts:85",{"_index":870,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component.component.ts:98",{"_index":878,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["component/air",{"_index":35,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["component/stats",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":143,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["components",{"_index":28,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"overview.html":{}}}],["components/air",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/quality/quality",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/stats",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/weather/weather",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["console.log('[statscomponentcomponent.calulatestats",{"_index":964,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["console.log(args.coordinate",{"_index":407,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["console.log(data[0].list[0].wind.deg",{"_index":369,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["console.log(lonlat",{"_index":412,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["console.log(records",{"_index":1153,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["console.log(results",{"_index":67,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["console.log(this.radioselected",{"_index":941,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["console.log(this.results.data.length",{"_index":948,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["console.log(this.selectedfromdate",{"_index":939,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["console.log(this.selectedstation",{"_index":942,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["console.log(this.selectedtodate",{"_index":940,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["const",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"classes/StatisticType.html":{},"components/StatsComponentComponent.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(current",{"_index":13,"title":{},"body":{"classes/AirData.html":{}}}],["constructor(date",{"_index":465,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["constructor(http",{"_index":169,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(id",{"_index":157,"title":{},"body":{"classes/AirQualityData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{}}}],["constructor(list",{"_index":294,"title":{},"body":{"classes/ForecastData.html":{}}}],["constructor(min",{"_index":264,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["constructor(name",{"_index":1241,"title":{},"body":{"classes/WeatherData.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["constructor(public",{"_index":650,"title":{},"body":{"classes/Station.html":{},"classes/StatisticType.html":{}}}],["constructor(service",{"_index":50,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["constructor(temperature",{"_index":832,"title":{},"body":{"classes/Statistics.html":{}}}],["container",{"_index":438,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["content",{"_index":560,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["content\").animate",{"_index":1147,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content/uploads/2017/03/sun",{"_index":1181,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__chart",{"_index":1111,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__chart\").show",{"_index":1150,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__my",{"_index":1234,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__table",{"_index":1110,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["content__table\").show",{"_index":1149,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["context",{"_index":1304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["copernicus",{"_index":748,"title":{},"body":{"classes/StationList.html":{}}}],["copy",{"_index":391,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["cos",{"_index":958,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["coverage",{"_index":1280,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":11,"title":{},"body":{"classes/AirData.html":{}}}],["custom",{"_index":1235,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["czas",{"_index":303,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["czasie",{"_index":1126,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["czestochowa",{"_index":786,"title":{},"body":{"classes/StationList.html":{}}}],["daily",{"_index":525,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["dane",{"_index":129,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["danej",{"_index":365,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["danych",{"_index":349,"title":{},"body":{"components/MapComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["danym",{"_index":321,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["danymi",{"_index":1104,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dat",{"_index":76,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["data",{"_index":133,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/StatsComponentComponent.html":{}}}],["data.ts",{"_index":453,"title":{},"body":{"classes/MeteoStatsData.html":{},"coverage.html":{}}}],["data.ts:10",{"_index":472,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:11",{"_index":471,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:12",{"_index":477,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:13",{"_index":478,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:14",{"_index":468,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:15",{"_index":473,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:16",{"_index":470,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:3",{"_index":466,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:5",{"_index":467,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:6",{"_index":474,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:7",{"_index":476,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:8",{"_index":475,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data.ts:9",{"_index":469,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["data].map((item",{"_index":193,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["datacount",{"_index":267,"title":{},"body":{"classes/CalculatedProps.html":{},"components/StatsComponentComponent.html":{}}}],["datacount).tofixed(2).tostring",{"_index":283,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["datalength",{"_index":863,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["date",{"_index":265,"title":{},"body":{"classes/CalculatedProps.html":{},"classes/MeteoStatsData.html":{},"components/StatsComponentComponent.html":{}}}],["date(datenow",{"_index":921,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["date(this.selectedfromdate",{"_index":931,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["date(this.selectedtodate",{"_index":933,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["date.now",{"_index":920,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":922,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["datefrom",{"_index":500,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["datenow",{"_index":919,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["dateto",{"_index":501,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["deblin",{"_index":766,"title":{},"body":{"classes/StationList.html":{}}}],["declarations",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declare",{"_index":340,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["default",{"_index":175,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["delay",{"_index":1206,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dependencies",{"_index":213,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":286,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["dev",{"_index":1340,"title":{},"body":{"index.html":{}}}],["development",{"_index":1337,"title":{},"body":{"index.html":{}}}],["direction",{"_index":1187,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["directive",{"_index":141,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["directives",{"_index":154,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1351,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1356,"title":{},"body":{"index.html":{}}}],["display",{"_index":1022,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["dist",{"_index":1355,"title":{},"body":{"index.html":{}}}],["dla",{"_index":78,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["dni",{"_index":291,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["document).ready(function",{"_index":356,"title":{},"body":{"components/MapComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["document.getelementbyid(\"inputlat",{"_index":418,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["document.getelementbyid(\"inputlon",{"_index":420,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["document.getelementbyid('popup",{"_index":551,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["documentation",{"_index":1281,"title":{},"body":{"coverage.html":{}}}],["doda",{"_index":573,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["dodanie",{"_index":361,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["dom",{"_index":31,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["don't",{"_index":317,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["dostaliśmy",{"_index":963,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["drawchart",{"_index":1048,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["druga",{"_index":394,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["du",{"_index":101,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["duration",{"_index":1204,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dwóch",{"_index":1143,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["dynamic",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["dzienny",{"_index":827,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["dzięki",{"_index":1073,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["e2e",{"_index":1367,"title":{},"body":{"index.html":{}}}],["elblag",{"_index":682,"title":{},"body":{"classes/StationList.html":{}}}],["element",{"_index":140,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["element).popover",{"_index":555,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["element).popover('show",{"_index":567,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["element.pressure",{"_index":975,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["element.temperature",{"_index":968,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["element.windspeed",{"_index":981,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["emptydatadiv",{"_index":1039,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["encapsulation",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":517,"title":{},"body":{"injectables/MeteoStatsService.html":{},"index.html":{}}}],["endpointów",{"_index":1272,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["environment",{"_index":1301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["epsg:3857",{"_index":410,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["epsg:4326",{"_index":411,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["error",{"_index":1155,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["errormsg",{"_index":1041,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["execute",{"_index":1364,"title":{},"body":{"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["exports",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":558,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1191,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["features",{"_index":582,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ffffff",{"_index":1178,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["files",{"_index":1346,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1208,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["flag",{"_index":1358,"title":{},"body":{"index.html":{}}}],["flex",{"_index":1023,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["font",{"_index":1190,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["forecastdata",{"_index":284,"title":{"classes/ForecastData.html":{}},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["forecastdata(item.list",{"_index":1279,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["formsmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["fraction",{"_index":593,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["frame",{"_index":444,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["fromdate",{"_index":930,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["full",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":405,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["functions",{"_index":903,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["funkcj",{"_index":1077,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["funkcja",{"_index":1053,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["funkcjami",{"_index":1247,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["funkcji",{"_index":342,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["further",{"_index":1369,"title":{},"body":{"index.html":{}}}],["g/m3",{"_index":602,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["gdansk",{"_index":677,"title":{},"body":{"classes/StationList.html":{}}}],["gdynia",{"_index":675,"title":{},"body":{"classes/StationList.html":{}}}],["gdzie",{"_index":107,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["generate",{"_index":1349,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1332,"title":{},"body":{"index.html":{}}}],["generatereport",{"_index":854,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["generuj",{"_index":989,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["geometry",{"_index":584,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["get(`${this.apiurlforecast}${term}&appid=b742a4225977a8a94a092feb673aad31&units=metric",{"_index":1278,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["get(`${this.apiurl}${term}&appid=9a3485ea70ca20151b5d5d7b29054807&units=metric",{"_index":1273,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["get(`${this.apiurl}&lat=${lat}&lng=${lng}&apikey=sv8wb734fm470c2hys8atebfrng5lzu9",{"_index":642,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["get(this.api",{"_index":188,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["get(this.apiurl",{"_index":519,"title":{},"body":{"injectables/MeteoStatsService.html":{},"injectables/WeatherServiceService.html":{}}}],["getairdata",{"_index":168,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{}}}],["getairdata(lat",{"_index":632,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["getairdata(latitude",{"_index":543,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["getairservice",{"_index":529,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["getdatabialystok",{"_index":332,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatabialystok(term",{"_index":334,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["getdatenow",{"_index":855,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["getforecastservice",{"_index":1049,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getforecastservice(term",{"_index":1059,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getselecteditem",{"_index":856,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["getstatsdata",{"_index":495,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getstatsdata(type",{"_index":498,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getting",{"_index":1328,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":496,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["gettype(type",{"_index":503,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["getweatherdata",{"_index":1097,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherdata(term",{"_index":1152,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherforecastdata",{"_index":1074,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherforecastdata(term",{"_index":1161,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["getweatherservice",{"_index":1050,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["getweatherservice(term",{"_index":1089,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["go",{"_index":1372,"title":{},"body":{"index.html":{}}}],["godzinowy",{"_index":826,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["goleniow",{"_index":692,"title":{},"body":{"classes/StationList.html":{}}}],["gora",{"_index":739,"title":{},"body":{"classes/StationList.html":{}}}],["gorzow",{"_index":714,"title":{},"body":{"classes/StationList.html":{}}}],["gradient(#2e85b88e",{"_index":1017,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["gradient(#626d329f,#6e5f33af",{"_index":1212,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["gradient(to",{"_index":1027,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["graph",{"_index":1378,"title":{},"body":{"modules.html":{}}}],["głownej",{"_index":1139,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["głownych",{"_index":1144,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["główna",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["h2",{"_index":1189,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["height",{"_index":436,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["height:0px",{"_index":1225,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["hel",{"_index":673,"title":{},"body":{"classes/StationList.html":{}}}],["help",{"_index":1370,"title":{},"body":{"index.html":{}}}],["hourly",{"_index":522,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["hpa",{"_index":991,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["html",{"_index":139,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["http",{"_index":172,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["http://api.gios.gov.pl/pjp",{"_index":177,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["http://localhost:4200",{"_index":1342,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":170,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["httpclientmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":637,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["https://airapi.airly.eu/v2/measurements/nearest?indextype=airly_caqi&maxdistancekm=100",{"_index":635,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["https://api.meteostat.net/v1/history",{"_index":505,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["https://api.openweathermap.org/data/2.5/forecast?q",{"_index":1266,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["https://api.openweathermap.org/data/2.5/weather?q",{"_index":1261,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["ich",{"_index":1065,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["id",{"_index":71,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["ikonka",{"_index":328,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["image",{"_index":588,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["img",{"_index":430,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["implements",{"_index":37,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["import",{"_index":58,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["imports",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["informacja",{"_index":1115,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["informacje",{"_index":1136,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["inherit",{"_index":1030,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["inicjue",{"_index":1101,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["inicująca",{"_index":1060,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["initializedate",{"_index":857,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["initmap",{"_index":379,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["injectable",{"_index":164,"title":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["injectables",{"_index":165,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"overview.html":{}}}],["inputlat",{"_index":417,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inputlat.setattribute('value',lat",{"_index":421,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inputlon",{"_index":419,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["inputlon.setattribute('value',lon",{"_index":422,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["irena",{"_index":767,"title":{},"body":{"classes/StationList.html":{}}}],["isdataloaded",{"_index":838,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["isformvalid",{"_index":839,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["isrequestsended",{"_index":840,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["isvalid",{"_index":943,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["item",{"_index":877,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["item.main",{"_index":1276,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["item.name",{"_index":987,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["item.stindexlevel",{"_index":196,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["item.stsourcedatadate",{"_index":197,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["item.visibility",{"_index":1275,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["item.weather",{"_index":1277,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["items",{"_index":1186,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["j",{"_index":966,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["jakby",{"_index":570,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["jako",{"_index":90,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{}}}],["jasionka",{"_index":799,"title":{},"body":{"classes/StationList.html":{}}}],["jelenia",{"_index":776,"title":{},"body":{"classes/StationList.html":{}}}],["jeśli",{"_index":92,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["jquery",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(this.radiosel",{"_index":918,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["justify",{"_index":1024,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["kalisz",{"_index":752,"title":{},"body":{"classes/StationList.html":{}}}],["karma",{"_index":1366,"title":{},"body":{"index.html":{}}}],["kasprowy",{"_index":810,"title":{},"body":{"classes/StationList.html":{}}}],["katowice",{"_index":790,"title":{},"body":{"classes/StationList.html":{}}}],["kay",{"_index":190,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["ketrzyn",{"_index":684,"title":{},"body":{"classes/StationList.html":{}}}],["key=xwftslqc",{"_index":507,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["kielce",{"_index":794,"title":{},"body":{"classes/StationList.html":{}}}],["kierunek",{"_index":345,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["kierunku",{"_index":364,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["klasa",{"_index":287,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["klasy",{"_index":297,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["kliknie",{"_index":578,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["klodzko",{"_index":780,"title":{},"body":{"classes/StationList.html":{}}}],["know",{"_index":318,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["kolo",{"_index":721,"title":{},"body":{"classes/StationList.html":{}}}],["kolobrzeg",{"_index":660,"title":{},"body":{"classes/StationList.html":{}}}],["korzysta",{"_index":96,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["kostruktor",{"_index":296,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["koszalin",{"_index":662,"title":{},"body":{"classes/StationList.html":{}}}],["kozienice",{"_index":764,"title":{},"body":{"classes/StationList.html":{}}}],["krakow",{"_index":792,"title":{},"body":{"classes/StationList.html":{}}}],["któr",{"_index":314,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["które",{"_index":343,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["której",{"_index":299,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["którgo",{"_index":1264,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["l",{"_index":534,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["l.map('map",{"_index":381,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["l.tilelayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":387,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["lat",{"_index":415,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{}}}],["latitude",{"_index":540,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lato",{"_index":1192,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["layers",{"_index":397,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["leaflet",{"_index":535,"title":{},"body":{"components/QualityComponentComponent.html":{},"dependencies.html":{}}}],["leba",{"_index":669,"title":{},"body":{"classes/StationList.html":{}}}],["lebork",{"_index":671,"title":{},"body":{"classes/StationList.html":{}}}],["left",{"_index":433,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["legend",{"_index":138,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"overview.html":{}}}],["legionowo",{"_index":730,"title":{},"body":{"classes/StationList.html":{}}}],["legnica",{"_index":741,"title":{},"body":{"classes/StationList.html":{}}}],["lesko",{"_index":816,"title":{},"body":{"classes/StationList.html":{}}}],["leszno",{"_index":744,"title":{},"body":{"classes/StationList.html":{}}}],["letter",{"_index":1197,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["line:no",{"_index":911,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["line:only",{"_index":901,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["linear",{"_index":1016,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["list",{"_index":102,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"classes/WeatherData.html":{}}}],["list.ts",{"_index":653,"title":{},"body":{"classes/StationList.html":{},"coverage.html":{}}}],["list.ts:4",{"_index":654,"title":{},"body":{"classes/StationList.html":{}}}],["lng",{"_index":633,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["lodz",{"_index":756,"title":{},"body":{"classes/StationList.html":{}}}],["lon",{"_index":413,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["long",{"_index":423,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["longitude",{"_index":541,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lonlat",{"_index":408,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["lonlat[0",{"_index":414,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["lonlat[1",{"_index":416,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["lub",{"_index":1158,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["lublin",{"_index":771,"title":{},"body":{"classes/StationList.html":{}}}],["m/s",{"_index":993,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["ma",{"_index":86,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["macierz",{"_index":298,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["main",{"_index":319,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["mainpage",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["maksimum",{"_index":1005,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["maksymaln",{"_index":1082,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["maksymalna",{"_index":325,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["maksymalne",{"_index":1129,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["map",{"_index":148,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["map\").animate",{"_index":357,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["map((data",{"_index":192,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["map__bialystok",{"_index":429,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["mapa",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["mapcomponentcomponent",{"_index":147,"title":{"components/MapComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapie",{"_index":350,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["mapy",{"_index":375,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["margin",{"_index":442,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["marker",{"_index":621,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["matching",{"_index":24,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":260,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["max.tostring",{"_index":279,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["max/min",{"_index":305,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["maxdate",{"_index":261,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["maxdate.tostring",{"_index":281,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["maxpressure",{"_index":974,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["maxpressuredate",{"_index":976,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["maxtempdate",{"_index":969,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["maxtemperature",{"_index":967,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["maxwindpower",{"_index":980,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["maxwindpowerdate",{"_index":982,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["maxzoom",{"_index":388,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["message",{"_index":537,"title":{},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["metadata",{"_index":39,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["meteo",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"classes/MeteoStatsModel.html":{}}}],["meteoapp",{"_index":1330,"title":{},"body":{"index.html":{}}}],["meteorologiczn",{"_index":929,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["meteostatsdata",{"_index":451,"title":{"classes/MeteoStatsData.html":{}},"body":{"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["meteostatsmodel",{"_index":483,"title":{"classes/MeteoStatsModel.html":{}},"body":{"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["meteostatsservice",{"_index":487,"title":{"injectables/MeteoStatsService.html":{}},"body":{"injectables/MeteoStatsService.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["methods",{"_index":47,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miasta",{"_index":313,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["miasto",{"_index":1165,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["miejsc",{"_index":104,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["miejsca",{"_index":80,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["miejscowo",{"_index":1098,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miejscowości",{"_index":366,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["miejsowo",{"_index":1087,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["miesięczny",{"_index":828,"title":{},"body":{"classes/StatisticType.html":{},"miscellaneous/variables.html":{}}}],["mieście",{"_index":1164,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["mikolajki",{"_index":708,"title":{},"body":{"classes/StationList.html":{}}}],["min",{"_index":262,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["min.tostring",{"_index":275,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minadate",{"_index":263,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minadate.tostring",{"_index":277,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["minimaln",{"_index":1081,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["minimalna",{"_index":324,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["minimalne",{"_index":1131,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["minimum",{"_index":998,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["minpressuredate",{"_index":978,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["mintempdate",{"_index":972,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["minwindpowerdate",{"_index":984,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["miscellaneous",{"_index":1384,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mlawa",{"_index":704,"title":{},"body":{"classes/StationList.html":{}}}],["mode",{"_index":1209,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["model",{"_index":511,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["model.ts",{"_index":485,"title":{},"body":{"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["model.ts:4",{"_index":486,"title":{},"body":{"classes/MeteoStatsModel.html":{}}}],["models/calculated",{"_index":893,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["models/meteo",{"_index":894,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["models/station",{"_index":656,"title":{},"body":{"classes/StationList.html":{},"components/StatsComponentComponent.html":{}}}],["models/statistic",{"_index":891,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["models/statistics",{"_index":895,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["models/stats",{"_index":510,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["module",{"_index":184,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"injectables/AirQualityService.html":{},"modules/AppModule.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"overview.html":{}}}],["module.ts",{"_index":7,"title":{},"body":{"classes/AirData.html":{},"classes/AirQualityData.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{},"coverage.html":{}}}],["module.ts:1",{"_index":15,"title":{},"body":{"classes/AirData.html":{}}}],["module.ts:14",{"_index":1244,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:15",{"_index":1245,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:16",{"_index":1243,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:17",{"_index":1246,"title":{},"body":{"classes/WeatherData.html":{}}}],["module.ts:24",{"_index":295,"title":{},"body":{"classes/ForecastData.html":{}}}],["module.ts:3",{"_index":21,"title":{},"body":{"classes/AirData.html":{},"classes/AirQualityData.html":{}}}],["module.ts:31",{"_index":309,"title":{},"body":{"classes/ForecastData.html":{}}}],["module.ts:5",{"_index":1242,"title":{},"body":{"classes/WeatherData.html":{}}}],["modules",{"_index":212,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["mog",{"_index":97,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["momencie",{"_index":322,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["monthly",{"_index":527,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["more",{"_index":1371,"title":{},"body":{"index.html":{}}}],["movetobottom",{"_index":1203,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["movetoleft",{"_index":1217,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["możemy",{"_index":1267,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["musi",{"_index":935,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["móg",{"_index":117,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["na",{"_index":87,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["nacisnięcie",{"_index":1106,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["najbliższe",{"_index":290,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["name",{"_index":18,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":1014,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["nav\").fadeto(\"slow",{"_index":1148,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav').fadeto('slow",{"_index":904,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["nav__buttons__btn",{"_index":1215,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__btn:hover",{"_index":1220,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__input",{"_index":1199,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__buttons__input:hover",{"_index":1211,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nav__error",{"_index":1230,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["navigate",{"_index":1341,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1177,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nazw",{"_index":1159,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["nazwa",{"_index":312,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["nazwy",{"_index":1120,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["new",{"_index":194,"title":{},"body":{"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/StationList.html":{},"components/StatsComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":900,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["ng",{"_index":1314,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":377,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["ngmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":48,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["ni",{"_index":937,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["nie",{"_index":962,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["niej",{"_index":1058,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["none",{"_index":1223,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["northresults",{"_index":331,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["nowy",{"_index":813,"title":{},"body":{"classes/StationList.html":{}}}],["null",{"_index":1160,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["number",{"_index":158,"title":{},"body":{"classes/AirQualityData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/WeatherData.html":{}}}],["o",{"_index":1116,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["object",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obok",{"_index":108,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["observable",{"_index":174,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["observable.throw(error.message",{"_index":645,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["od",{"_index":988,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["odczuwalna",{"_index":323,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["odczytane",{"_index":292,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["odpowiadająca",{"_index":1134,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["odpowiedni",{"_index":125,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["odpowiednie",{"_index":352,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["odpowiedniego",{"_index":79,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["odwołuje",{"_index":1109,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["odwołujemy",{"_index":1057,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["okecie",{"_index":732,"title":{},"body":{"classes/StationList.html":{}}}],["okien",{"_index":1145,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["określająca",{"_index":329,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["określający",{"_index":307,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["ol",{"_index":539,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ol.feature",{"_index":583,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.geom.point(ol.proj.transform([longitude",{"_index":585,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.layer.tile",{"_index":398,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.layer.vector",{"_index":580,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.map",{"_index":395,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.overlay",{"_index":550,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.proj.fromlonlat([23.1688403",{"_index":402,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.proj.transform(args.coordinate",{"_index":409,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.source.osm",{"_index":399,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["ol.source.vector",{"_index":581,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.style.icon",{"_index":589,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.style.style",{"_index":587,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ol.view",{"_index":401,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["olsztyn",{"_index":706,"title":{},"body":{"classes/StationList.html":{}}}],["ona",{"_index":109,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["oninit",{"_index":38,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["onitemchange",{"_index":858,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["onitemchange(item",{"_index":875,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["opacity",{"_index":358,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["opad",{"_index":479,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["openstreetmap",{"_index":392,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["openweathermap.org",{"_index":1240,"title":{},"body":{"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["openwethermap.org",{"_index":1258,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["opeweathermap.org",{"_index":293,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["opis",{"_index":607,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["opisująca",{"_index":288,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["opisujące",{"_index":1259,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["opole",{"_index":782,"title":{},"body":{"classes/StationList.html":{}}}],["optional",{"_index":20,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["oraz",{"_index":1063,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ospowiednie",{"_index":1067,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["ostroleka",{"_index":710,"title":{},"body":{"classes/StationList.html":{}}}],["out",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":1239,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["overview",{"_index":1380,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1307,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":1036,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["param",{"_index":311,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["parametr",{"_index":1086,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["parametrami",{"_index":320,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["path",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["peakgust",{"_index":454,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pi",{"_index":1260,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["pierwsza",{"_index":373,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pierwszej",{"_index":1146,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pila",{"_index":698,"title":{},"body":{"classes/StationList.html":{}}}],["pin",{"_index":574,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pipe",{"_index":181,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["placement",{"_index":556,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["plock",{"_index":723,"title":{},"body":{"classes/StationList.html":{}}}],["pm1",{"_index":601,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pm10",{"_index":603,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["pm25",{"_index":604,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["po",{"_index":69,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pobiera",{"_index":1257,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["pobierającymi",{"_index":1248,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["pobieramy",{"_index":1088,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pobierane",{"_index":1071,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["pobieranie",{"_index":1061,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pobierz",{"_index":128,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pobior",{"_index":344,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pobranego",{"_index":363,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["pod",{"_index":1066,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["poda",{"_index":315,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["podanej",{"_index":1095,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["podmuch",{"_index":482,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["podstawie",{"_index":347,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["podstawowe",{"_index":1141,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pogod",{"_index":308,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["pogoda",{"_index":1166,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["pogodowe",{"_index":302,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pogody",{"_index":289,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pojawi",{"_index":351,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["poka",{"_index":1108,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["polsce",{"_index":83,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pom",{"_index":665,"title":{},"body":{"classes/StationList.html":{}}}],["pomiar",{"_index":122,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiarowego",{"_index":81,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiarowych",{"_index":105,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["pomiaru",{"_index":77,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["poprzenie",{"_index":371,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["poprzez",{"_index":1105,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["popup",{"_index":546,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popup.getelement",{"_index":553,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["popup.setposition(ol.proj.fromlonlat([longitude",{"_index":554,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["position",{"_index":427,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["powietrza",{"_index":75,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{}}}],["poziom",{"_index":606,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["poznan",{"_index":719,"title":{},"body":{"classes/StationList.html":{}}}],["precipitation",{"_index":455,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["pressure",{"_index":456,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["pressurestats",{"_index":952,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["private",{"_index":163,"title":{},"body":{"classes/AirQualityData.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["prod",{"_index":1357,"title":{},"body":{"index.html":{}}}],["production",{"_index":1359,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["prognoz",{"_index":1062,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["prognozy",{"_index":1056,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["project",{"_index":1331,"title":{},"body":{"index.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["prosz",{"_index":927,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["protractor",{"_index":1368,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":185,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["providers",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["przechowuje",{"_index":1125,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przechowująca",{"_index":1122,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przechowywane",{"_index":301,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["przemysl",{"_index":818,"title":{},"body":{"classes/StationList.html":{}}}],["przez",{"_index":1076,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["przy",{"_index":1118,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przycisku",{"_index":1107,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przypisanie",{"_index":1064,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przypisujemy",{"_index":1079,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["przód",{"_index":1269,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["prędko",{"_index":992,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["public",{"_index":10,"title":{},"body":{"classes/AirData.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["pulawy",{"_index":769,"title":{},"body":{"classes/StationList.html":{}}}],["pyrzowice",{"_index":788,"title":{},"body":{"classes/StationList.html":{}}}],["póki",{"_index":84,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["quality",{"_index":34,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["quality.service",{"_index":62,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["quality.service.ts",{"_index":166,"title":{},"body":{"injectables/AirQualityService.html":{},"coverage.html":{}}}],["quality.service.ts:10",{"_index":171,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality.service.ts:14",{"_index":179,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality.service.ts:16",{"_index":173,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["quality/air",{"_index":61,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["qualitycomponentcomponent",{"_index":149,"title":{"components/QualityComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{}}}],["qualityserviceservice",{"_index":530,"title":{"injectables/QualityServiceService.html":{}},"body":{"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["raciborz",{"_index":784,"title":{},"body":{"classes/StationList.html":{}}}],["radawiec",{"_index":772,"title":{},"body":{"classes/StationList.html":{}}}],["radiosel",{"_index":841,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["radioselected",{"_index":842,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["radioselectedstring",{"_index":843,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["radius",{"_index":624,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["radom",{"_index":762,"title":{},"body":{"classes/StationList.html":{}}}],["readme",{"_index":1374,"title":{},"body":{"index.html":{}}}],["rebiechowo",{"_index":678,"title":{},"body":{"classes/StationList.html":{}}}],["records",{"_index":545,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["redirectto",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rednia",{"_index":994,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["relative",{"_index":1237,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["reload",{"_index":1344,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":1020,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["reprezentujace",{"_index":354,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["require",{"_index":1305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resko",{"_index":694,"title":{},"body":{"classes/StationList.html":{}}}],["response",{"_index":965,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["result",{"_index":23,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.current.indexes[0].description",{"_index":613,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.indexes[0].level",{"_index":612,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.indexes[0].value",{"_index":611,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[0].value",{"_index":608,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[1].value",{"_index":610,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.current.values[2].value",{"_index":609,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["result.id",{"_index":130,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result.stindexlevel.indexlevelname",{"_index":132,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result.stsourcedatadate",{"_index":134,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["result[0].main.feels_like",{"_index":1169,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.humidity",{"_index":1173,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.pressure",{"_index":1172,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp",{"_index":1168,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp_max",{"_index":1171,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].main.temp_min",{"_index":1170,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["result[0].name",{"_index":1167,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["results",{"_index":25,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results[0].current.indexes[0].description",{"_index":566,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.indexes[0].level",{"_index":565,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.indexes[0].value",{"_index":564,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.values[0].value",{"_index":561,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.values[1].value",{"_index":563,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["results[0].current.values[2].value",{"_index":562,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["resultsforecast",{"_index":1042,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartdata",{"_index":1043,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartmaxtemp",{"_index":1044,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttochartmintemp",{"_index":1045,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsforecasttocharttemp",{"_index":1046,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultsweather",{"_index":1047,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["resultweather",{"_index":1091,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["retruns",{"_index":1270,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["return",{"_index":64,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["returns",{"_index":55,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/AirQualityService.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["rgba(172,91,0,0.88",{"_index":1233,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rgba(74,100,107,0.8",{"_index":620,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["right",{"_index":440,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["root",{"_index":186,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["root'},{'name",{"_index":146,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["routablecomponent",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":246,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rozpoczęcia",{"_index":934,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["run",{"_index":1338,"title":{},"body":{"index.html":{}}}],["running",{"_index":1360,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":182,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/throw",{"_index":641,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/add/operator/catch",{"_index":640,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/observable",{"_index":638,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rxjs/operators",{"_index":183,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["rysowania",{"_index":1084,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rysująca",{"_index":1054,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["rzeszow",{"_index":798,"title":{},"body":{"classes/StationList.html":{}}}],["s",{"_index":1072,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["sacz",{"_index":814,"title":{},"body":{"classes/StationList.html":{}}}],["sandomierz",{"_index":801,"title":{},"body":{"classes/StationList.html":{}}}],["sans",{"_index":1193,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["scaffolding",{"_index":1348,"title":{},"body":{"index.html":{}}}],["scale",{"_index":595,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["scrollbar",{"_index":1236,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["selectedfromdate",{"_index":844,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["selectedstation",{"_index":845,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["selectedtodate",{"_index":846,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["selector",{"_index":40,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["serif",{"_index":1194,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["serve",{"_index":1339,"title":{},"body":{"index.html":{}}}],["server",{"_index":646,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"index.html":{}}}],["service",{"_index":53,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["service.service",{"_index":339,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["service.service.ts",{"_index":629,"title":{},"body":{"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["service.service.ts:15",{"_index":636,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["service.service.ts:16",{"_index":631,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["service.service.ts:20",{"_index":634,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["service.service.ts:21",{"_index":1262,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:26",{"_index":1250,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:34",{"_index":1251,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["service.service.ts:55",{"_index":1256,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["services/meteo",{"_index":890,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["services/quality/quality",{"_index":536,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["services/weather/weather",{"_index":338,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["shadow",{"_index":616,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["shadowed",{"_index":912,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["showairdata",{"_index":49,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["showcontent",{"_index":1051,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["showing",{"_index":547,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["showmeteostats",{"_index":859,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["si",{"_index":112,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["sie",{"_index":577,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["siedlce",{"_index":734,"title":{},"body":{"classes/StationList.html":{}}}],["size",{"_index":1021,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["sky",{"_index":1182,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["skąd",{"_index":119,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["slubice",{"_index":717,"title":{},"body":{"classes/StationList.html":{}}}],["sniezka",{"_index":778,"title":{},"body":{"classes/StationList.html":{}}}],["snowdepth",{"_index":457,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["snowfall",{"_index":458,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["solid",{"_index":447,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"index.html":{}}}],["space",{"_index":1221,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["spacing",{"_index":1198,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["spec\\.ts",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sprawd",{"_index":1162,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["sprawdzenia",{"_index":1271,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["src",{"_index":597,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["src/.../app",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../map",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../quality",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../statistic",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stats",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/air",{"_index":33,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/map/map",{"_index":330,"title":{},"body":{"components/MapComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/quality/quality",{"_index":528,"title":{},"body":{"components/QualityComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/stats",{"_index":837,"title":{},"body":{"components/StatsComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/weather/weather",{"_index":1040,"title":{},"body":{"components/WeatherComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/calculated",{"_index":829,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["src/app/models/meteo",{"_index":452,"title":{},"body":{"classes/MeteoStatsData.html":{},"coverage.html":{}}}],["src/app/models/station.ts",{"_index":647,"title":{},"body":{"classes/Station.html":{},"coverage.html":{}}}],["src/app/models/station.ts:1",{"_index":648,"title":{},"body":{"classes/Station.html":{}}}],["src/app/models/station.ts:2",{"_index":649,"title":{},"body":{"classes/Station.html":{}}}],["src/app/models/statistic",{"_index":821,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/statistics.ts",{"_index":258,"title":{},"body":{"classes/CalculatedProps.html":{},"coverage.html":{}}}],["src/app/models/statistics.ts:2",{"_index":271,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:3",{"_index":272,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:4",{"_index":269,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:5",{"_index":270,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/statistics.ts:6",{"_index":268,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["src/app/models/stats",{"_index":484,"title":{},"body":{"classes/MeteoStatsModel.html":{},"coverage.html":{}}}],["src/app/services/air",{"_index":60,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"coverage.html":{}}}],["src/app/services/meteo",{"_index":488,"title":{},"body":{"injectables/MeteoStatsService.html":{},"classes/StationList.html":{},"coverage.html":{}}}],["src/app/services/quality/quality",{"_index":6,"title":{},"body":{"classes/AirData.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"coverage.html":{}}}],["src/app/services/weather/weather",{"_index":285,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1300,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stacj",{"_index":928,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["stan",{"_index":74,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["stanem",{"_index":1094,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["stanie",{"_index":1265,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["stany",{"_index":131,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["start",{"_index":516,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["started",{"_index":1329,"title":{"index.html":{}},"body":{}}],["stat/meteo",{"_index":489,"title":{},"body":{"injectables/MeteoStatsService.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["stat/station",{"_index":652,"title":{},"body":{"classes/StationList.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["statdata",{"_index":847,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["statements",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["station",{"_index":499,"title":{"classes/Station.html":{}},"body":{"injectables/MeteoStatsService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["station(12100",{"_index":659,"title":{},"body":{"classes/StationList.html":{}}}],["station(12105",{"_index":661,"title":{},"body":{"classes/StationList.html":{}}}],["station(12106",{"_index":663,"title":{},"body":{"classes/StationList.html":{}}}],["station(12115",{"_index":666,"title":{},"body":{"classes/StationList.html":{}}}],["station(12120",{"_index":668,"title":{},"body":{"classes/StationList.html":{}}}],["station(12125",{"_index":670,"title":{},"body":{"classes/StationList.html":{}}}],["station(12135",{"_index":672,"title":{},"body":{"classes/StationList.html":{}}}],["station(12145",{"_index":674,"title":{},"body":{"classes/StationList.html":{}}}],["station(12150",{"_index":676,"title":{},"body":{"classes/StationList.html":{}}}],["station(12155",{"_index":679,"title":{},"body":{"classes/StationList.html":{}}}],["station(12160",{"_index":681,"title":{},"body":{"classes/StationList.html":{}}}],["station(12185",{"_index":683,"title":{},"body":{"classes/StationList.html":{}}}],["station(12195",{"_index":685,"title":{},"body":{"classes/StationList.html":{}}}],["station(12200",{"_index":687,"title":{},"body":{"classes/StationList.html":{}}}],["station(12205",{"_index":689,"title":{},"body":{"classes/StationList.html":{}}}],["station(12206",{"_index":691,"title":{},"body":{"classes/StationList.html":{}}}],["station(12210",{"_index":693,"title":{},"body":{"classes/StationList.html":{}}}],["station(12215",{"_index":695,"title":{},"body":{"classes/StationList.html":{}}}],["station(12230",{"_index":697,"title":{},"body":{"classes/StationList.html":{}}}],["station(12235",{"_index":699,"title":{},"body":{"classes/StationList.html":{}}}],["station(12250",{"_index":701,"title":{},"body":{"classes/StationList.html":{}}}],["station(12270",{"_index":703,"title":{},"body":{"classes/StationList.html":{}}}],["station(12272",{"_index":705,"title":{},"body":{"classes/StationList.html":{}}}],["station(12280",{"_index":707,"title":{},"body":{"classes/StationList.html":{}}}],["station(12285",{"_index":709,"title":{},"body":{"classes/StationList.html":{}}}],["station(12295",{"_index":711,"title":{},"body":{"classes/StationList.html":{}}}],["station(12300",{"_index":713,"title":{},"body":{"classes/StationList.html":{}}}],["station(12310",{"_index":716,"title":{},"body":{"classes/StationList.html":{}}}],["station(12330",{"_index":718,"title":{},"body":{"classes/StationList.html":{}}}],["station(12345",{"_index":720,"title":{},"body":{"classes/StationList.html":{}}}],["station(12360",{"_index":722,"title":{},"body":{"classes/StationList.html":{}}}],["station(12365",{"_index":724,"title":{},"body":{"classes/StationList.html":{}}}],["station(12372",{"_index":726,"title":{},"body":{"classes/StationList.html":{}}}],["station(12374",{"_index":729,"title":{},"body":{"classes/StationList.html":{}}}],["station(12375",{"_index":731,"title":{},"body":{"classes/StationList.html":{}}}],["station(12385",{"_index":733,"title":{},"body":{"classes/StationList.html":{}}}],["station(12399",{"_index":735,"title":{},"body":{"classes/StationList.html":{}}}],["station(12400",{"_index":737,"title":{},"body":{"classes/StationList.html":{}}}],["station(12415",{"_index":740,"title":{},"body":{"classes/StationList.html":{}}}],["station(12418",{"_index":743,"title":{},"body":{"classes/StationList.html":{}}}],["station(12424",{"_index":746,"title":{},"body":{"classes/StationList.html":{}}}],["station(12425",{"_index":750,"title":{},"body":{"classes/StationList.html":{}}}],["station(12435",{"_index":751,"title":{},"body":{"classes/StationList.html":{}}}],["station(12455",{"_index":753,"title":{},"body":{"classes/StationList.html":{}}}],["station(12465",{"_index":755,"title":{},"body":{"classes/StationList.html":{}}}],["station(12469",{"_index":757,"title":{},"body":{"classes/StationList.html":{}}}],["station(12471",{"_index":759,"title":{},"body":{"classes/StationList.html":{}}}],["station(12485",{"_index":761,"title":{},"body":{"classes/StationList.html":{}}}],["station(12488",{"_index":763,"title":{},"body":{"classes/StationList.html":{}}}],["station(12490",{"_index":765,"title":{},"body":{"classes/StationList.html":{}}}],["station(12491",{"_index":768,"title":{},"body":{"classes/StationList.html":{}}}],["station(12495",{"_index":770,"title":{},"body":{"classes/StationList.html":{}}}],["station(12497",{"_index":773,"title":{},"body":{"classes/StationList.html":{}}}],["station(12500",{"_index":775,"title":{},"body":{"classes/StationList.html":{}}}],["station(12510",{"_index":777,"title":{},"body":{"classes/StationList.html":{}}}],["station(12520",{"_index":779,"title":{},"body":{"classes/StationList.html":{}}}],["station(12530",{"_index":781,"title":{},"body":{"classes/StationList.html":{}}}],["station(12540",{"_index":783,"title":{},"body":{"classes/StationList.html":{}}}],["station(12550",{"_index":785,"title":{},"body":{"classes/StationList.html":{}}}],["station(12555",{"_index":787,"title":{},"body":{"classes/StationList.html":{}}}],["station(12560",{"_index":789,"title":{},"body":{"classes/StationList.html":{}}}],["station(12566",{"_index":791,"title":{},"body":{"classes/StationList.html":{}}}],["station(12570",{"_index":793,"title":{},"body":{"classes/StationList.html":{}}}],["station(12575",{"_index":795,"title":{},"body":{"classes/StationList.html":{}}}],["station(12580",{"_index":797,"title":{},"body":{"classes/StationList.html":{}}}],["station(12585",{"_index":800,"title":{},"body":{"classes/StationList.html":{}}}],["station(12595",{"_index":802,"title":{},"body":{"classes/StationList.html":{}}}],["station(12600",{"_index":804,"title":{},"body":{"classes/StationList.html":{}}}],["station(12625",{"_index":807,"title":{},"body":{"classes/StationList.html":{}}}],["station(12650",{"_index":809,"title":{},"body":{"classes/StationList.html":{}}}],["station(12660",{"_index":812,"title":{},"body":{"classes/StationList.html":{}}}],["station(12690",{"_index":815,"title":{},"body":{"classes/StationList.html":{}}}],["station(12695",{"_index":817,"title":{},"body":{"classes/StationList.html":{}}}],["station.name",{"_index":986,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["stationlist",{"_index":651,"title":{"classes/StationList.html":{}},"body":{"classes/StationList.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["stationlist().stationlist",{"_index":905,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["statistics",{"_index":251,"title":{"classes/Statistics.html":{}},"body":{"modules/AppRoutingModule.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["statistics(tempstats",{"_index":957,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["statistictype",{"_index":820,"title":{"classes/StatisticType.html":{}},"body":{"classes/StatisticType.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statistictype.id",{"_index":916,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["statistictypelist",{"_index":825,"title":{},"body":{"classes/StatisticType.html":{},"components/StatsComponentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statistictypelist.find(statistictype",{"_index":915,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["statistictypes",{"_index":848,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["stats",{"_index":151,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["stats.service",{"_index":892,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["stats.service.ts",{"_index":490,"title":{},"body":{"injectables/MeteoStatsService.html":{},"coverage.html":{}}}],["stats.service.ts:11",{"_index":506,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:12",{"_index":508,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:13",{"_index":509,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:14",{"_index":497,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:17",{"_index":502,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.service.ts:24",{"_index":504,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["stats.ts",{"_index":830,"title":{},"body":{"classes/Statistics.html":{},"coverage.html":{}}}],["stats.ts:3",{"_index":833,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:5",{"_index":835,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:6",{"_index":834,"title":{},"body":{"classes/Statistics.html":{}}}],["stats.ts:7",{"_index":836,"title":{},"body":{"classes/Statistics.html":{}}}],["statscomponentcomponent",{"_index":150,"title":{"components/StatsComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["statstype",{"_index":494,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["statystyki",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/StatsComponentComponent.html":{}}}],["stindexlevel",{"_index":159,"title":{},"body":{"classes/AirQualityData.html":{}}}],["stored",{"_index":1354,"title":{},"body":{"index.html":{}}}],["string",{"_index":160,"title":{},"body":{"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StatisticType.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["strona",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["stronie",{"_index":1138,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["strzaleczka",{"_index":575,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["strzałki",{"_index":353,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["strzyzewice",{"_index":745,"title":{},"body":{"classes/StationList.html":{}}}],["stsourcedatadate",{"_index":161,"title":{},"body":{"classes/AirQualityData.html":{}}}],["style",{"_index":586,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["styles",{"_index":30,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["styleurls",{"_index":43,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((data",{"_index":368,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((records",{"_index":544,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["subscribe((results",{"_index":66,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["sulejow",{"_index":758,"title":{},"body":{"classes/StationList.html":{}}}],["summer",{"_index":1183,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["sumpressure",{"_index":979,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["sumtemperature",{"_index":973,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["sumwindpower",{"_index":985,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["sunshine",{"_index":459,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["support",{"_index":1375,"title":{},"body":{"modules.html":{}}}],["suwalki",{"_index":686,"title":{},"body":{"classes/StationList.html":{}}}],["sv8wb734fm470c2hys8atebfrng5lzu9",{"_index":191,"title":{},"body":{"injectables/AirQualityService.html":{}}}],["svg",{"_index":1376,"title":{},"body":{"modules.html":{}}}],["swibno",{"_index":680,"title":{},"body":{"classes/StationList.html":{}}}],["swinoujscie",{"_index":688,"title":{},"body":{"classes/StationList.html":{}}}],["switch",{"_index":520,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["swoim",{"_index":1163,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["szczecin",{"_index":690,"title":{},"body":{"classes/StationList.html":{}}}],["szczecinek",{"_index":696,"title":{},"body":{"classes/StationList.html":{}}}],["szczytowy",{"_index":481,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["sztywno",{"_index":88,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["t",{"_index":99,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tabel",{"_index":1103,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["tabela",{"_index":114,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tabeli",{"_index":1070,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["table",{"_index":135,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["tablicy",{"_index":362,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["tak",{"_index":110,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tam",{"_index":576,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["target",{"_index":396,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["tarnow",{"_index":796,"title":{},"body":{"classes/StationList.html":{}}}],["tbody",{"_index":1038,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["tego",{"_index":95,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["temp",{"_index":970,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["temperatur",{"_index":1080,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["temperatura",{"_index":304,"title":{},"body":{"classes/ForecastData.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["temperature",{"_index":460,"title":{},"body":{"classes/MeteoStatsData.html":{},"classes/Statistics.html":{}}}],["temperaturemax",{"_index":461,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["temperaturemin",{"_index":462,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["temperatury",{"_index":1128,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["template",{"_index":29,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["templateurl",{"_index":45,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["tempstats",{"_index":950,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["terespol",{"_index":736,"title":{},"body":{"classes/StationList.html":{}}}],["term",{"_index":336,"title":{},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["test",{"_index":1363,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1362,"title":{},"body":{"index.html":{}}}],["text",{"_index":1035,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["thead",{"_index":1034,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.apibaseurl",{"_index":514,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.apikey",{"_index":518,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.apiurl",{"_index":513,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.average",{"_index":282,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.calculatepressurestats(this.radioselected",{"_index":953,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.calculatestats",{"_index":947,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.calculatetemperaturestats(this.radioselected",{"_index":951,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.calculatewindpowerstats(this.radioselected",{"_index":955,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.errormsg",{"_index":1156,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.getdatabialystok(\"białystok",{"_index":355,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.getdatenow",{"_index":909,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.getselecteditem",{"_index":923,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.gettype(type",{"_index":512,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.http",{"_index":187,"title":{},"body":{"injectables/AirQualityService.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"injectables/WeatherServiceService.html":{}}}],["this.initializedate",{"_index":907,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.initmap",{"_index":378,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.isdataloaded",{"_index":896,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.isformvalid",{"_index":898,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.isrequestsended",{"_index":897,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.map",{"_index":380,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["this.map.addlayer(vectorlayer",{"_index":599,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["this.map.addoverlay(popup",{"_index":552,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["this.map.on('click",{"_index":404,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["this.max",{"_index":278,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.maxdate",{"_index":280,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.min",{"_index":274,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.minadate",{"_index":276,"title":{},"body":{"classes/CalculatedProps.html":{}}}],["this.northresults.push(data[0].list[0].wind.deg",{"_index":370,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.radiosel",{"_index":914,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.radioselected",{"_index":906,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.radioselectedstring",{"_index":917,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.results",{"_index":68,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["this.results.data.length",{"_index":949,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.resultsweather.push(records",{"_index":1154,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["this.selectedfromdate",{"_index":908,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.selectedstation",{"_index":924,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.selectedtodate",{"_index":910,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.service",{"_index":542,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["this.service.getairdata",{"_index":65,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["this.service.getstatsdata(this.radioselected",{"_index":946,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.service.getweatherforecastdata(term",{"_index":367,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["this.showmeteostats",{"_index":945,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata",{"_index":956,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.pressure.average",{"_index":996,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.pressure.max",{"_index":1008,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.pressure.maxdate",{"_index":1009,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.pressure.min",{"_index":1001,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.pressure.minadate",{"_index":1002,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.temperature.average",{"_index":995,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.temperature.max",{"_index":1006,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.temperature.maxdate",{"_index":1007,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.temperature.min",{"_index":999,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.temperature.minadate",{"_index":1000,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.windpower.average",{"_index":997,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.windpower.max",{"_index":1010,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.windpower.maxdate",{"_index":1011,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.windpower.min",{"_index":1003,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.statdata.windpower.minadate",{"_index":1004,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.stationlist",{"_index":657,"title":{},"body":{"classes/StationList.html":{},"components/StatsComponentComponent.html":{}}}],["this.stationlist.push(new",{"_index":658,"title":{},"body":{"classes/StationList.html":{}}}],["this.stationlist.sort",{"_index":819,"title":{},"body":{"classes/StationList.html":{}}}],["this.statstype",{"_index":515,"title":{},"body":{"injectables/MeteoStatsService.html":{}}}],["this.validateform",{"_index":944,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["this.validmessage",{"_index":926,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["tiles",{"_index":386,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["tiles.addto(this.map",{"_index":393,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["title",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["todate",{"_index":932,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["top",{"_index":431,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["torun",{"_index":702,"title":{},"body":{"classes/StationList.html":{}}}],["transform",{"_index":1195,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["transition",{"_index":1213,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["tree",{"_index":32,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["true",{"_index":559,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"miscellaneous/variables.html":{}}}],["trzeba",{"_index":571,"title":{},"body":{"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["tslib",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":899,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["tutaj",{"_index":106,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["tych",{"_index":348,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/AirData.html":{},"components/AirQualityComponentComponent.html":{},"classes/AirQualityData.html":{},"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/CalculatedProps.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"classes/MeteoStatsData.html":{},"classes/MeteoStatsModel.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"injectables/QualityServiceService.html":{},"classes/Station.html":{},"classes/StationList.html":{},"classes/StatisticType.html":{},"classes/Statistics.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":822,"title":{},"body":{"classes/StatisticType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.ts:1",{"_index":823,"title":{},"body":{"classes/StatisticType.html":{}}}],["type.ts:2",{"_index":824,"title":{},"body":{"classes/StatisticType.html":{}}}],["ui",{"_index":960,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["undefined",{"_index":925,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["unit",{"_index":1361,"title":{},"body":{"index.html":{}}}],["unsubscribe",{"_index":630,"title":{},"body":{"injectables/QualityServiceService.html":{}}}],["uppercase",{"_index":1196,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["url(https://cdn.benchmark.pl/uploads/article/33432/modernicon/365f2a6b41e4456b9a0c46e76860b1306722e665.jpg",{"_index":1019,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["url(https://www.setaswall.com/wp",{"_index":1180,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["use",{"_index":1350,"title":{},"body":{"index.html":{}}}],["user",{"_index":548,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["ustka",{"_index":667,"title":{},"body":{"classes/StationList.html":{}}}],["uzyska",{"_index":1268,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["uzyskanych",{"_index":1075,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["użytkownik",{"_index":115,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["użytkownika",{"_index":1096,"title":{},"body":{"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["validateform",{"_index":860,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["validmessage",{"_index":849,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["value",{"_index":176,"title":{},"body":{"injectables/AirQualityService.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"injectables/QualityServiceService.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":142,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["variable",{"_index":913,"title":{},"body":{"components/StatsComponentComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1385,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vectorlayer",{"_index":579,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["version",{"_index":1335,"title":{},"body":{"index.html":{}}}],["via",{"_index":1365,"title":{},"body":{"index.html":{}}}],["view",{"_index":400,"title":{},"body":{"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{}}}],["viewencapsulation",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["viewencapsulation.none",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":316,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["void",{"_index":56,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"injectables/MeteoStatsService.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["w",{"_index":82,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["wallpaper",{"_index":1184,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["warszawa",{"_index":727,"title":{},"body":{"classes/StationList.html":{}}}],["warto",{"_index":600,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wcześniejsza",{"_index":936,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["wczyta",{"_index":98,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["weather",{"_index":153,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["weathercomponentcomponent",{"_index":152,"title":{"components/WeatherComponentComponent.html":{}},"body":{"components/AirQualityComponentComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["weatherdata",{"_index":310,"title":{"classes/WeatherData.html":{}},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["weatherdata(item.name",{"_index":1274,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["weatherserviceservice",{"_index":333,"title":{"injectables/WeatherServiceService.html":{}},"body":{"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"injectables/WeatherServiceService.html":{},"coverage.html":{}}}],["wersja",{"_index":374,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wersje",{"_index":372,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["white",{"_index":1033,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["wiatru",{"_index":346,"title":{},"body":{"components/MapComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["width",{"_index":136,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["wielun",{"_index":754,"title":{},"body":{"classes/StationList.html":{}}}],["wierch",{"_index":811,"title":{},"body":{"classes/StationList.html":{}}}],["wilgotno",{"_index":327,"title":{},"body":{"classes/ForecastData.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{}}}],["winddirection",{"_index":463,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["windpower",{"_index":831,"title":{},"body":{"classes/Statistics.html":{}}}],["windpowerstats",{"_index":954,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["windspeed",{"_index":464,"title":{},"body":{"classes/MeteoStatsData.html":{}}}],["wlkp",{"_index":715,"title":{},"body":{"classes/StationList.html":{}}}],["wlodawa",{"_index":774,"title":{},"body":{"classes/StationList.html":{}}}],["wpisze",{"_index":123,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wprowadzaniu",{"_index":1119,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wprowadzeniu",{"_index":70,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wprowadzono",{"_index":1157,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wroclaw",{"_index":747,"title":{},"body":{"classes/StationList.html":{}}}],["wszelki",{"_index":568,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wszystkich",{"_index":103,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"injectables/WeatherServiceService.html":{}}}],["wtedy",{"_index":124,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wybra",{"_index":118,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"components/StatsComponentComponent.html":{}}}],["wybran",{"_index":1255,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wybranej",{"_index":1254,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wyciąga",{"_index":1252,"title":{},"body":{"injectables/WeatherServiceService.html":{}}}],["wyciągamy",{"_index":1078,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyciągnięte",{"_index":1127,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykorzystujemy",{"_index":1083,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykres",{"_index":1055,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykresem",{"_index":1112,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wykresu",{"_index":1085,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wynik",{"_index":126,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wypadek",{"_index":569,"title":{},"body":{"components/QualityComponentComponent.html":{}}}],["wyskoczy",{"_index":127,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wyswietlic",{"_index":959,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["wywołanie",{"_index":341,"title":{},"body":{"components/MapComponentComponent.html":{}}}],["wyświetlamy",{"_index":1099,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlane",{"_index":1137,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlanie",{"_index":1102,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["wyświetlenia",{"_index":1013,"title":{},"body":{"components/StatsComponentComponent.html":{},"components/WeatherComponentComponent.html":{}}}],["wyświetli",{"_index":113,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["wyświetlone",{"_index":1092,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["x.dt_txt",{"_index":1174,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["x.main.temp_max",{"_index":1175,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["x.main.temp_min",{"_index":1176,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["z",{"_index":94,"title":{},"body":{"components/AirQualityComponentComponent.html":{},"classes/ForecastData.html":{},"components/MapComponentComponent.html":{},"components/WeatherComponentComponent.html":{},"classes/WeatherData.html":{},"injectables/WeatherServiceService.html":{}}}],["za",{"_index":1135,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["zadeklarowane",{"_index":89,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["zakopane",{"_index":808,"title":{},"body":{"classes/StationList.html":{}}}],["zakończenia",{"_index":938,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["zamosc",{"_index":803,"title":{},"body":{"classes/StationList.html":{}}}],["ze",{"_index":961,"title":{},"body":{"components/StatsComponentComponent.html":{}}}],["zegrze",{"_index":664,"title":{},"body":{"classes/StationList.html":{}}}],["zielona",{"_index":738,"title":{},"body":{"classes/StationList.html":{}}}],["zmienn",{"_index":1069,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["zmienna",{"_index":1121,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["zmienne",{"_index":1068,"title":{},"body":{"components/WeatherComponentComponent.html":{}}}],["znak",{"_index":306,"title":{},"body":{"classes/ForecastData.html":{},"classes/WeatherData.html":{}}}],["znale",{"_index":121,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}],["zone.js",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/MapComponentComponent.html":{},"components/QualityComponentComponent.html":{},"overview.html":{}}}],["zwraca",{"_index":73,"title":{},"body":{"components/AirQualityComponentComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AirData.html":{"url":"classes/AirData.html","title":"class - AirData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quality/quality-module.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(current: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quality/quality-module.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-module.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AirData {\n    constructor(\n        public current: any\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AirQualityComponentComponent.html":{"url":"components/AirQualityComponentComponent.html","title":"component - AirQualityComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AirQualityComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/air-quality-component/air-quality-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-air-quality-component\n            \n\n            \n                styleUrls\n                ./air-quality-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./air-quality-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                results\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                showAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: AirQualityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/air-quality-component/air-quality-component.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AirQualityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showAirData\n                        \n                        \n                    \n                \n            \n            \n                \nshowAirData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/air-quality-component/air-quality-component.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AirQualityService } from 'src/app/services/air-quality/air-quality.service';\n\n@Component({\n  selector: 'app-air-quality-component',\n  templateUrl: './air-quality-component.component.html',\n  styleUrls: ['./air-quality-component.component.css']\n})\nexport class AirQualityComponentComponent implements OnInit {\n\n  results: any;\n\n  constructor(private service: AirQualityService) { }\n\n  ngOnInit() {\n  }\n\n  showAirData() {\n    return this.service.getAirData()\n      .subscribe((results: any) => {\n        console.log(results);\n        this.results = results;\n      })\n  }\n}\n\n    \n\n    \n            Po wprowadzeniu id aplikacja zwraca stan powietrza i datę pomiaru dla odpowiedniego miejsca pomiarowego w polsce\n    Póki co aplikacja ma na sztywno zadeklarowane id pomiaru jako 52\n    Jeśli chcemy z tego korzystać to mogę wczytać tę całą dużą listę wszystkich miejsc pomiarowych tutaj gdzieś obok. Ona tak ładnie się wyświetli jako tabela i użytkownik będzie mógł wybrać skąd chce znaleźć pomiar. Wpisze wtedy odpowiedni ID i wynik wyskoczy\n\n\n    \n    Pobierz dane!\n\n\n\n\n    \n        \n            ID\n            {{result.id}}\n        \n\n        \n            Stany powietrza\n            {{result.stIndexLevel.indexLevelName}}\n        \n\n        \n            Data pomiaru\n            {{result.stSourceDataDate}}\n        \n    \n\n    \n\n    \n                \n                    ./air-quality-component.component.css\n                \n                .table{\n    width: 20%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Po wprowadzeniu id aplikacja zwraca stan powietrza i datę pomiaru dla odpowiedniego miejsca pomiarowego w polsce    Póki co aplikacja ma na sztywno zadeklarowane id pomiaru jako 52    Jeśli chcemy z tego korzystać to mogę wczytać tę całą dużą listę wszystkich miejsc pomiarowych tutaj gdzieś obok. Ona tak ładnie się wyświetli jako tabela i użytkownik będzie mógł wybrać skąd chce znaleźć pomiar. Wpisze wtedy odpowiedni ID i wynik wyskoczy        Pobierz dane!                        ID            {{result.id}}                            Stany powietrza            {{result.stIndexLevel.indexLevelName}}                            Data pomiaru            {{result.stSourceDataDate}}            '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AirQualityComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AirQualityData.html":{"url":"classes/AirQualityData.html","title":"class - AirQualityData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AirQualityData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/air-quality/air-quality-module.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, stIndexLevel: string, stSourceDataDate: Data)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/air-quality/air-quality-module.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stIndexLevel\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stSourceDataDate\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Data } from '@angular/router';\n\nexport class AirQualityData {\n    constructor(\n        private id: number,\n        private stIndexLevel: string,\n        private stSourceDataDate: Data\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AirQualityService.html":{"url":"injectables/AirQualityService.html","title":"injectable - AirQualityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AirQualityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/air-quality/air-quality.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/air-quality/air-quality.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAirData\n                        \n                        \n                    \n                \n            \n            \n                \ngetAirData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/air-quality/air-quality.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://api.gios.gov.pl/pjp-api/rest/aqindex/getIndex/52'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/air-quality/air-quality.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { pipe, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AirQualityData } from './air-quality-module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AirQualityService {\n\n  constructor(private http: HttpClient) { }\n\n  api = 'http://api.gios.gov.pl/pjp-api/rest/aqindex/getIndex/52';\n\n  getAirData(): Observable {\n    return this.http\n      .get(this.api)        // airly kay:  SV8Wb734fM470C2HYs8atebFRNg5LzU9\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new AirQualityData(item.id, item.stIndexLevel, item.stSourceDataDate)))\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'meteo-app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'meteo-app';\n}\n\n    \n\n    \n        \n    Strona główna\n    Statystyki\n    Mapa\n    Jakość powietrza -->\n    Jakość powietrza\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Strona główna    Statystyki    Mapa    Jakość powietrza -->    Jakość powietrza'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponentComponent\n\nMapComponentComponent\n\nAppModule -->\n\nMapComponentComponent->AppModule\n\n\n\n\n\nQualityComponentComponent\n\nQualityComponentComponent\n\nAppModule -->\n\nQualityComponentComponent->AppModule\n\n\n\n\n\nStatsComponentComponent\n\nStatsComponentComponent\n\nAppModule -->\n\nStatsComponentComponent->AppModule\n\n\n\n\n\nWeatherComponentComponent\n\nWeatherComponentComponent\n\nAppModule -->\n\nWeatherComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            MapComponentComponent\n                        \n                        \n                            QualityComponentComponent\n                        \n                        \n                            StatsComponentComponent\n                        \n                        \n                            WeatherComponentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { WeatherComponentComponent } from './components/weather/weather-component.component';\nimport { MapComponentComponent } from './components/map/map-component.component';\nimport { StatsComponentComponent } from './components/stats-component/stats-component.component';\nimport { QualityComponentComponent } from './components/quality/quality-component.component';\n// import { AirQualityComponentComponent } from './components/air-quality-component/air-quality-component.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponentComponent,\n    MapComponentComponent,\n    StatsComponentComponent,\n    QualityComponentComponent\n    // AirQualityComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { StatsComponentComponent } from './components/stats-component/stats-component.component';\nimport { WeatherComponentComponent } from './components/weather/weather-component.component';\nimport { MapComponentComponent } from './components/map/map-component.component';\nimport { QualityComponentComponent } from './components/quality/quality-component.component';\n// import { AirQualityComponentComponent } from './components/air-quality-component/air-quality-component.component';\n\n\nconst routes: Routes = [\n  { path: 'mainpage', component: WeatherComponentComponent },\n  { path: 'statistics', component: StatsComponentComponent },\n  { path: 'map', component: MapComponentComponent },\n  { path: 'quality', component: QualityComponentComponent },\n  // { path: 'air-quality', component: AirQualityComponentComponent },\n  { path: '', redirectTo: '/mainpage', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routableComponent = [\n  WeatherComponentComponent, StatsComponentComponent\n];\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CalculatedProps.html":{"url":"classes/CalculatedProps.html","title":"class - CalculatedProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CalculatedProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistics.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                average\n                            \n                            \n                                    Public\n                                max\n                            \n                            \n                                    Public\n                                maxDate\n                            \n                            \n                                    Public\n                                min\n                            \n                            \n                                    Public\n                                minaDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(min: number, minaDate: Date, max: number, maxDate: Date, averageSum: number, dataCount: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistics.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        min\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        minaDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        max\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        averageSum\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            average\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            max\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            maxDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            min\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minaDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistics.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CalculatedProps {\n    public min: string;\n    public minaDate: string;\n    public max: string;\n    public maxDate: string;\n    public average: string;\n    constructor(min: number, minaDate: Date, max: number, maxDate: Date, averageSum: number, dataCount: number\n    ) {\n        if (dataCount > 0) {\n            this.min = min.toString();\n            this.minaDate = minaDate.toString();\n            this.max = max.toString();\n            this.maxDate = maxDate.toString();\n            this.average = (averageSum / dataCount).toFixed(2).toString();\n        } else {\n            this.min = '-';\n            this.minaDate = '-';\n            this.max = '-';\n            this.maxDate = '-';\n            this.average = '-';\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForecastData.html":{"url":"classes/ForecastData.html","title":"class - ForecastData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForecastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-module.ts\n        \n\n            \n                Description\n            \n            \n                Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(list: [])\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-module.ts:24\n                            \n                        \n\n                \n                    \n                            Kostruktor klasy @class ForecastData()\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                  \n                                                        \n                                                                    []\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n(czas pomiaru, temperatura max/min, znak określający pogodę) \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:31\n                            \n                        \n\n                \n                    \n                        macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n(czas pomiaru, temperatura max/min, znak określający pogodę) \n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WeatherData {\n    /**\n     * Kostruktor klasy WeatherData()\n     * @param {string} name nazwa miasta, którą podał użytkownik\n     * @param {number} visibility I don't know \n     * @param {number} main dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n     * @param {string} weather ikonka określająca pogodę w danym momencie\n     */\n    constructor(\n        public name: string,\n        public visibility: number,\n        public main: number,\n        public weather: string,\n    ) { }\n}\n\n/**\n * Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org\n */\nexport class ForecastData {\n    /**\n     * Kostruktor klasy @class ForecastData()\n     * @param list macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n     * (czas pomiaru, temperatura max/min, znak określający pogodę) \n     */\n    constructor(\n        public list = [],\n    ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponentComponent.html":{"url":"components/MapComponentComponent.html","title":"component - MapComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/map/map-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-map-component\n            \n\n            \n                styleUrls\n                ./map-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./map-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                northresults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDataBialystok\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: WeatherServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/map/map-component.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WeatherServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDataBialystok\n                        \n                        \n                    \n                \n            \n            \n                \ngetDataBialystok(term)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    term\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/map/map-component.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            northresults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/map/map-component.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherServiceService } from '../../services/weather/weather-service.service';\nimport { HttpClient } from '@angular/common/http';\ndeclare var $: any;\n\n\n@Component({\n  selector: 'app-map-component',\n  templateUrl: './map-component.component.html',\n  styleUrls: ['./map-component.component.css']\n})\n\nexport class MapComponentComponent implements OnInit {\n\n  private northresults = [];\n\n  constructor(private http: HttpClient, private service: WeatherServiceService) { }\n\n  ngOnInit() {\n    //wywołanie funkcji, które pobiorą kierunek wiatru; na podstawie tych danych na mapie pojawią się odpowiednie strzałki reprezentujace kierunek wiatru\n    this.getDataBialystok(\"Białystok\");\n\n    $(document).ready(function () {\n      $(\".map\").animate({ opacity: 1 }, 1500)\n    })\n\n  }\n\n  //dodanie do tablicy pobranego kierunku wiatru z danej miejscowości\n  getDataBialystok(term) {\n    return this.service.getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        //console.log(data[0].list[0].wind.deg\n        this.northresults.push(data[0].list[0].wind.deg);\n      })\n  }\n\n}\n\n\n\n  //************************************************************POPRZENIE WERSJE MAP*************************************************************************/\n\n// ---------------------------PIERWSZA WERSJA MAPY-------------------------------- //\n// export class MapComponentComponent implements AfterViewInit {\n\n//   private map;\n\n//   constructor() { }\n\n//   ngAfterViewInit(): void {\n//     this.initMap();\n//   }\n\n//   private initMap(): void {\n//     this.map = L.map('map', {\n//       center: [53.1324886, 23.1688403],\n//       zoom: 9\n//     });\n\n//     const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n//       maxZoom: 19,\n//       attribution: '&copy; OpenStreetMap'\n//     });\n\n//     tiles.addTo(this.map);\n//   }\n// }\n\n\n\n\n// ---------------------------DRUGA WERSJA MAPY-------------------------------- //\n\n//   this.map = new ol.Map({\n  //     target: 'map',\n  //     layers: [\n  //       new ol.layer.Tile({\n  //         source: new ol.source.OSM()\n  //       })\n  //     ],\n  //     view: new ol.View({\n  //       center: ol.proj.fromLonLat([23.1688403, 53.1324886]),\n  //       zoom: 8,\n\n  //     })\n  //   });\n\n  //   this.map.on('click', function (args) {\n  //     console.log(args.coordinate);\n  //     var lonlat = ol.proj.transform(args.coordinate, 'EPSG:3857', 'EPSG:4326');\n  //     console.log(lonlat);\n\n  //     var lon = lonlat[0];\n  //     var lat = lonlat[1];\n  //     var inputlat = document.getElementById(\"inputLat\");\n  //     var inputlon = document.getElementById(\"inputLon\");\n  //     inputlat.setAttribute('value',lat);\n  //     inputlon.setAttribute('value',lon);\n  //     (`lat: ${lat} long: ${lon}`);\n  //   });\n  // }\n\n\n  //************************************************************POPRZENIE WERSJE MAP*************************************************************************/\n    \n\n    \n        \n  \n\n  \n\n    = 0 && result \n      \n    \n\n    = 90 && result \n      \n    \n\n    = 108 && result \n      \n    \n\n    = 270 && result \n      \n     -->\n\n  \n\n\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n      \n    \n   -->\n\n\n\n\n  \n  \n\n\n  \n\n    \n    \n  \n   -->\n    \n\n    \n                \n                    ./map-component.component.css\n                \n                .map{\n    position: absolute;\n    opacity: 0;\n}\n\n.map__bialystok img{\n    position: absolute;\n    top: 130px;\n    left: 390px;\n    width: 100px;\n    height: auto;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* .map-container {\n    position: absolute;\n    top: 10%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n.map-frame {\n    border: 2px solid black;\n    height: 100%;\n}\n.results {\n    position: absolute;\n    top: 5%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n#map {\n    height: 100%;\n} */\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        = 0 && result               = 90 && result               = 108 && result               = 270 && result            -->                         -->                   -->'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeteoStatsData.html":{"url":"classes/MeteoStatsData.html","title":"class - MeteoStatsData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeteoStatsData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/meteo-stats-data.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                peakgust\n                            \n                            \n                                    Public\n                                precipitation\n                            \n                            \n                                    Public\n                                pressure\n                            \n                            \n                                    Public\n                                snowdepth\n                            \n                            \n                                    Public\n                                snowfall\n                            \n                            \n                                    Public\n                                sunshine\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                temperatureMax\n                            \n                            \n                                    Public\n                                temperatureMin\n                            \n                            \n                                    Public\n                                winddirection\n                            \n                            \n                                    Public\n                                windspeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(date: Data, temperature: number, temperatureMin: number, temperatureMax: number, precipitation: number, snowfall: number, snowdepth: number, winddirection: number, windspeed: number, peakgust: number, sunshine: number, pressure: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/meteo-stats-data.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        date\n                                                  \n                                                        \n                                                                        Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        temperature\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        temperatureMin\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        temperatureMax\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        precipitation\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snowfall\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snowdepth\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        winddirection\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windspeed\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        peakgust\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sunshine\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pressure\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Data\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            peakgust\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            precipitation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snowdepth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            snowfall\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sunshine\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureMax\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperatureMin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            winddirection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windspeed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/meteo-stats-data.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Data } from '@angular/router';\n\nexport class MeteoStatsData {\n    constructor(\n        public date: Data,\n        public temperature: number,\n        public temperatureMin: number,\n        public temperatureMax: number,\n        public precipitation: number, // opad atmosferyczny\n        public snowfall: number,\n        public snowdepth: number,\n        public winddirection: number,\n        public windspeed: number,\n        public peakgust: number, // szczytowy podmuch\n        public sunshine: number,\n        public pressure: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MeteoStatsModel.html":{"url":"classes/MeteoStatsModel.html","title":"class - MeteoStatsModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MeteoStatsModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/stats-api-model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MeteoStatsData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/stats-api-model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MeteoStatsData } from './meteo-stats-data';\n\nexport class MeteoStatsModel {\n    public data: MeteoStatsData[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MeteoStatsService.html":{"url":"injectables/MeteoStatsService.html","title":"injectable - MeteoStatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MeteoStatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/meteo-stat/meteo-stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiBaseUrl\n                            \n                            \n                                apiKey\n                            \n                            \n                                apiURL\n                            \n                            \n                                statsType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStatsData\n                            \n                            \n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/meteo-stat/meteo-stats.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStatsData\n                        \n                        \n                    \n                \n            \n            \n                \ngetStatsData(type, station, dateFrom, dateTo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    station\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dateFrom\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dateTo\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \ngetType(type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.meteostat.net/v1/history/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '&key=XWfTSLqc'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statsType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/meteo-stats.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { pipe, Observable } from 'rxjs';\nimport { MeteoStatsModel } from '../../models/stats-api-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeteoStatsService {\n\n  apiBaseUrl = 'https://api.meteostat.net/v1/history/';\n  apiKey = '&key=XWfTSLqc';\n  apiURL: string;\n  statsType: string;\n  constructor(private http: HttpClient) { }\n\n  getStatsData(type, station, dateFrom, dateTo): Observable {\n    this.getType(type);\n    this.apiURL = this.apiBaseUrl + this.statsType + '?station=' + station + '&start=' + dateFrom + '&end=' + dateTo + this.apiKey;\n    return this.http\n      .get(this.apiURL);\n  }\n\n  getType(type) {\n    switch (type) {\n      case '1': this.statsType = 'hourly'; break;\n      case '2': this.statsType = 'daily'; break;\n      case '3': this.statsType = 'monthly'; break;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QualityComponentComponent.html":{"url":"components/QualityComponentComponent.html","title":"component - QualityComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QualityComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/quality/quality-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quality-component\n            \n\n            \n                styleUrls\n                ./quality-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./quality-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                map\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAirService\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: QualityServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/quality/quality-component.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QualityServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAirService\n                        \n                        \n                    \n                \n            \n            \n                \ngetAirService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quality/quality-component.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/quality/quality-component.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            map\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/quality/quality-component.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as L from 'leaflet';\nimport { QualityServiceService } from '../../services/quality/quality-service.service';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { AirData } from '../../services/quality/quality-module';\n// import { QualityServiceService } from 'src/app/services/quality/quality-service.service';\n\n\ndeclare var ol: any;\ndeclare var $: any;\nvar latitude: any;\nvar longitude: any;\nvar results: any;\n\n@Component({\n  selector: 'app-quality-component',\n  templateUrl: './quality-component.component.html',\n  styleUrls: ['./quality-component.component.css']\n})\n\n\nexport class QualityComponentComponent implements OnInit {\n\n\n  private map;\n  //public results : AirData[] = [];\n\n  constructor(private http: HttpClient, private service: QualityServiceService) { }\n\n\n  getAirService() {\n\n    this.service\n      .getAirData(latitude, longitude)\n      .subscribe((records: any) => {\n        results = records;\n\n        // Popup showing the position the user clicked\n        var popup = new ol.Overlay({\n          element: document.getElementById('popup')\n        });\n        this.map.addOverlay(popup);\n\n        var element = popup.getElement();\n        console.log(results);\n        popup.setPosition(ol.proj.fromLonLat([longitude, latitude]));\n        $(element).popover({\n          placement: 'top',\n          animation: false,\n          html: true,\n          content: '' + \n            results[0].current.values[0].value + ' ' +\n            results[0].current.values[2].value + ' ' +\n            results[0].current.values[1].value + ' ' +\n            results[0].current.indexes[0].value + ' ' +\n            results[0].current.indexes[0].level + ' ' +\n            results[0].current.indexes[0].description + ''\n        });\n        $(element).popover('show');\n      })\n\n\n\n  }\n\n  ngOnInit() {\n    this.map = new ol.Map({\n      target: 'map',\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM()\n        })\n      ],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([23.1688403, 53.1324886]),\n        zoom: 8,\n\n      })\n    });\n\n\n    this.map.on('click', function (args) {\n      console.log(args.coordinate);\n      var lonlat = ol.proj.transform(args.coordinate, 'EPSG:3857', 'EPSG:4326');\n      console.log(lonlat);\n\n      longitude = lonlat[0];\n      latitude = lonlat[1];\n      (`lat: ${latitude} long: ${longitude}`);\n\n\n    });\n\n\n  }\n}\n\n//Na wszelki wypadek jakby trzeba bylo dodać pin (strzaleczka tam gdzie sie kliknie)\n\n    // var vectorLayer = new ol.layer.Vector({\n    //   source: new ol.source.Vector({\n    //     features: [new ol.Feature({\n    //       geometry: new ol.geom.Point(ol.proj.transform([longitude, latitude], 'EPSG:4326', 'EPSG:3857')),\n    //     })]\n    //   }),\n    //   style: new ol.style.Style({\n    //     image: new ol.style.Icon({\n    //       anchor: [0.5, 1],\n    //       anchorXUnits: \"fraction\",\n    //       anchorYUnits: \"fraction\",\n    //       scale: 0.05,\n    //       src: \"assets/marker/marker.png\"\n\n    //     })\n    //   })\n    // });\n    // this.map.addLayer(vectorLayer);\n    \n\n    \n        \n  \n    \n      \n        Wartość PM1 (µg/m3)\n        Wartość PM10 (µg/m3)\n        Wartość PM25 (µg/m3)\n        Wartość CAQI (µg/m3)\n        Poziom\n        Opis\n      \n    \n    \n      {{result.current.values[0].value}} \n      {{result.current.values[2].value}} \n      {{result.current.values[1].value}} \n      {{result.current.indexes[0].value}} \n      {{result.current.indexes[0].level}} \n      {{result.current.indexes[0].description}} \n     -->\n    \n\n\n  \n    \n    \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./quality-component.component.css\n                \n                .map-container {\n    position: absolute;\n    top: 25%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n.map-frame {\n    border: 2px solid black;\n    height: 100%;\n}\n\n.results {\n    position: absolute;\n    top: 5%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    margin: 30px;\n}\n\n.table{\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n\n#map {\n    height: 100%;\n}\n#marker {\n    width: 20px;\n    height: 20px;\n    border: 1px solid #088;\n    border-radius: 10px;\n    background-color: #0FF;\n    opacity: 0.5;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wartość PM1 (µg/m3)        Wartość PM10 (µg/m3)        Wartość PM25 (µg/m3)        Wartość CAQI (µg/m3)        Poziom        Opis                    {{result.current.values[0].value}}       {{result.current.values[2].value}}       {{result.current.values[1].value}}       {{result.current.indexes[0].value}}       {{result.current.indexes[0].level}}       {{result.current.indexes[0].description}}      -->                                '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QualityComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QualityServiceService.html":{"url":"injectables/QualityServiceService.html","title":"injectable - QualityServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QualityServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quality/quality-service.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                            \n                                list\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAirData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/quality/quality-service.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAirData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAirData(lat: string, lng: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/quality/quality-service.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lat\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lng\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://airapi.airly.eu/v2/measurements/nearest?indexType=AIRLY_CAQI&maxDistanceKM=100'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-service.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-service.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/quality/quality-service.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { AirData } from './quality-module';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QualityServiceService {\n\n  list: any;\n  apiUrl = 'https://airapi.airly.eu/v2/measurements/nearest?indexType=AIRLY_CAQI&maxDistanceKM=100';  unsubscribe: any;\n\n  constructor(private http: HttpClient) { }\n\n  public getAirData(lat: string, lng: string): Observable {\n    return this.http\n      .get(`${this.apiUrl}&lat=${lat}&lng=${lng}&apikey=SV8Wb734fM470C2HYs8atebFRNg5LzU9`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new AirData(item.current))),\n        catchError((error: HttpErrorResponse) => {\n          return Observable.throw(error.message || \"Server Message\");\n        })\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Station.html":{"url":"classes/Station.html","title":"class - Station","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Station\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/station.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/station.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/station.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/station.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Station {\n    constructor(public id: number, public name: string) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StationList.html":{"url":"classes/StationList.html","title":"class - StationList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StationList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/meteo-stat/station-list.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                stationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/meteo-stat/station-list.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/meteo-stat/station-list.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Station } from '../../models/station';\n\nexport class StationList {\n    stationList: Array;\n\n    /**\n     *\n     */\n    constructor() {\n        this.stationList = new Array();\n\n        this.stationList.push(new Station(12100, 'Kolobrzeg                  '));\n        this.stationList.push(new Station(12105, 'Koszalin                   '));\n        this.stationList.push(new Station(12106, 'Koszalin Zegrze Pom.       '));\n        this.stationList.push(new Station(12115, 'Ustka                      '));\n        this.stationList.push(new Station(12120, 'Leba                       '));\n        this.stationList.push(new Station(12125, 'Lebork                     '));\n        this.stationList.push(new Station(12135, 'Hel                        '));\n        this.stationList.push(new Station(12145, 'Gdynia                     '));\n        this.stationList.push(new Station(12150, 'Gdansk-Rebiechowo          '));\n        this.stationList.push(new Station(12155, 'Gdansk-Swibno              '));\n        this.stationList.push(new Station(12160, 'Elblag                     '));\n        this.stationList.push(new Station(12185, 'Ketrzyn                    '));\n        this.stationList.push(new Station(12195, 'Suwalki                    '));\n        this.stationList.push(new Station(12200, 'Swinoujscie                '));\n        this.stationList.push(new Station(12205, 'Szczecin                   '));\n        this.stationList.push(new Station(12206, 'Goleniow                   '));\n        this.stationList.push(new Station(12210, 'Resko                      '));\n        this.stationList.push(new Station(12215, 'Szczecinek                 '));\n        this.stationList.push(new Station(12230, 'Pila                       '));\n        this.stationList.push(new Station(12235, 'Chojnice                   '));\n        this.stationList.push(new Station(12250, 'Torun                      '));\n        this.stationList.push(new Station(12270, 'Mlawa                      '));\n        this.stationList.push(new Station(12272, 'Olsztyn                    '));\n        this.stationList.push(new Station(12280, 'Mikolajki                  '));\n        this.stationList.push(new Station(12285, 'Ostroleka                  '));\n        this.stationList.push(new Station(12295, 'Bialystok                  '));\n        this.stationList.push(new Station(12300, 'Gorzow Wlkp                '));\n        this.stationList.push(new Station(12310, 'Slubice                    '));\n        this.stationList.push(new Station(12330, 'Poznan                     '));\n        this.stationList.push(new Station(12345, 'Kolo                       '));\n        this.stationList.push(new Station(12360, 'Plock                      '));\n        this.stationList.push(new Station(12365, 'Brwinow                    '));\n        this.stationList.push(new Station(12372, 'Warszawa Bielany           '));\n        this.stationList.push(new Station(12374, 'Legionowo                  '));\n        this.stationList.push(new Station(12375, 'Warszawa-Okecie            '));\n        this.stationList.push(new Station(12385, 'Siedlce                    '));\n        this.stationList.push(new Station(12399, 'Terespol                   '));\n        this.stationList.push(new Station(12400, 'Zielona Gora               '));\n        this.stationList.push(new Station(12415, 'Legnica Bartoszow          '));\n        this.stationList.push(new Station(12418, 'Leszno-Strzyzewice         '));\n        this.stationList.push(new Station(12424, 'Wroclaw Copernicus Airport '));\n        this.stationList.push(new Station(12425, 'Wroclaw I                  '));\n        this.stationList.push(new Station(12435, 'Kalisz                     '));\n        this.stationList.push(new Station(12455, 'Wielun                     '));\n        this.stationList.push(new Station(12465, 'Lodz                       '));\n        this.stationList.push(new Station(12469, 'Sulejow                    '));\n        this.stationList.push(new Station(12471, 'Belsk                      '));\n        this.stationList.push(new Station(12485, 'Radom                      '));\n        this.stationList.push(new Station(12488, 'Kozienice                  '));\n        this.stationList.push(new Station(12490, 'Deblin / Irena             '));\n        this.stationList.push(new Station(12491, 'Pulawy                     '));\n        this.stationList.push(new Station(12495, 'Lublin Radawiec            '));\n        this.stationList.push(new Station(12497, 'Wlodawa                    '));\n        this.stationList.push(new Station(12500, 'Jelenia Gora               '));\n        this.stationList.push(new Station(12510, 'Sniezka                    '));\n        this.stationList.push(new Station(12520, 'Klodzko                    '));\n        this.stationList.push(new Station(12530, 'Opole                      '));\n        this.stationList.push(new Station(12540, 'Raciborz                   '));\n        this.stationList.push(new Station(12550, 'Czestochowa                '));\n        this.stationList.push(new Station(12555, 'Pyrzowice                  '));\n        this.stationList.push(new Station(12560, 'Katowice                   '));\n        this.stationList.push(new Station(12566, 'Krakow                     '));\n        this.stationList.push(new Station(12570, 'Kielce                     '));\n        this.stationList.push(new Station(12575, 'Tarnow                     '));\n        this.stationList.push(new Station(12580, 'Rzeszow-Jasionka           '));\n        this.stationList.push(new Station(12585, 'Sandomierz                 '));\n        this.stationList.push(new Station(12595, 'Zamosc                     '));\n        this.stationList.push(new Station(12600, 'Bielsko-Biala              '));\n        this.stationList.push(new Station(12625, 'Zakopane                   '));\n        this.stationList.push(new Station(12650, 'Kasprowy Wierch            '));\n        this.stationList.push(new Station(12660, 'Nowy Sacz                  '));\n        this.stationList.push(new Station(12690, 'Lesko                      '));\n        this.stationList.push(new Station(12695, 'Przemysl                   '));\n        // this.stationList.sort();\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatisticType.html":{"url":"classes/StatisticType.html","title":"class - StatisticType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatisticType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/statistic-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/statistic-type.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistic-type.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/statistic-type.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class StatisticType {\n    constructor(public id: number, public name: string) {\n\n    }\n}\n\n\nexport const StatisticTypeList: StatisticType[] =\n    [\n        {\n            id: 1,\n            name: 'Godzinowy'\n        },\n        {\n            id: 2,\n            name: 'Dzienny'\n        },\n        {\n            id: 3,\n            name: 'Miesięczny'\n        }\n    ];\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Statistics.html":{"url":"classes/Statistics.html","title":"class - Statistics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Statistics\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/calculated-stats.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                pressure\n                            \n                            \n                                    Public\n                                temperature\n                            \n                            \n                                    Public\n                                windPower\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(temperature: CalculatedProps, pressure: CalculatedProps, windPower: CalculatedProps)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/calculated-stats.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        temperature\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pressure\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windPower\n                                                  \n                                                        \n                                                                        CalculatedProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressure\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            temperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            windPower\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CalculatedProps\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/calculated-stats.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CalculatedProps } from './statistics';\n\nexport class Statistics {\n    constructor(\n        public temperature: CalculatedProps,\n        public pressure: CalculatedProps,\n        public windPower: CalculatedProps) {\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponentComponent.html":{"url":"components/StatsComponentComponent.html","title":"component - StatsComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StatsComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/stats-component/stats-component.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats-component\n            \n\n            \n                styleUrls\n                ./stats-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stats-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDataLoaded\n                            \n                            \n                                isFormValid\n                            \n                            \n                                isRequestSended\n                            \n                            \n                                radioSel\n                            \n                            \n                                radioSelected\n                            \n                            \n                                radioSelectedString\n                            \n                            \n                                results\n                            \n                            \n                                selectedFromDate\n                            \n                            \n                                selectedStation\n                            \n                            \n                                selectedToDate\n                            \n                            \n                                statData\n                            \n                            \n                                stationList\n                            \n                            \n                                statisticTypes\n                            \n                            \n                                validMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculatePressureStats\n                            \n                            \n                                calculateStats\n                            \n                            \n                                calculateTemperatureStats\n                            \n                            \n                                calculateWindPowerStats\n                            \n                            \n                                generateReport\n                            \n                            \n                                getDateNow\n                            \n                            \n                                getSelecteditem\n                            \n                            \n                                initializeDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onItemChange\n                            \n                            \n                                showMeteoStats\n                            \n                            \n                                validateForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(service: MeteoStatsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/stats-component/stats-component.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        MeteoStatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculatePressureStats\n                        \n                        \n                    \n                \n            \n            \n                \ncalculatePressureStats(radioSelected, dataLength)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radioSelected\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataLength\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CalculatedProps\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateStats\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateStats()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateTemperatureStats\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateTemperatureStats(radioSelected, dataLength)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radioSelected\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataLength\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CalculatedProps\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateWindPowerStats\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateWindPowerStats(radioSelected, dataLength)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    radioSelected\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataLength\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CalculatedProps\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generateReport\n                        \n                        \n                    \n                \n            \n            \n                \ngenerateReport()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDateNow\n                        \n                        \n                    \n                \n            \n            \n                \ngetDateNow()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSelecteditem\n                        \n                        \n                    \n                \n            \n            \n                \ngetSelecteditem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeDate\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeDate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onItemChange\n                        \n                        \n                    \n                \n            \n            \n                \nonItemChange(item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMeteoStats\n                        \n                        \n                    \n                \n            \n            \n                \nshowMeteoStats()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validateForm\n                        \n                        \n                    \n                \n            \n            \n                \nvalidateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/stats-component/stats-component.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDataLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRequestSended\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            radioSel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            radioSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            radioSelectedString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedFromDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedToDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Statistics\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statisticTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StatisticType[]\n\n                        \n                    \n                    \n                        \n                            Default value : StatisticTypeList\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/stats-component/stats-component.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { StationList } from '../../services/meteo-stat/station-list';\nimport { Station } from '../../models/station';\nimport { StatisticTypeList, StatisticType } from '../../models/statistic-type';\nimport { MeteoStatsService } from '../../services/meteo-stat/meteo-stats.service';\nimport { Statistics } from '../../models/calculated-stats';\nimport { MeteoStatsData } from '../../models/meteo-stats-data';\nimport { CalculatedProps } from '../../models/statistics';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-stats-component',\n  templateUrl: './stats-component.component.html',\n  styleUrls: ['./stats-component.component.css']\n})\nexport class StatsComponentComponent implements OnInit {\n\n  selectedFromDate: string;\n  selectedToDate: string;\n  stationList: any[];\n  statisticTypes: StatisticType[] = StatisticTypeList;\n  radioSelected: any;\n  radioSel: any;\n  radioSelectedString: string;\n  selectedStation: string;\n  results: any;\n  statData: Statistics;\n  isDataLoaded: boolean;\n  isRequestSended: boolean;\n  isFormValid: boolean;\n  validMessage: string;\n  constructor(private service: MeteoStatsService) {\n    this.isDataLoaded = false;\n    this.isRequestSended = false;\n    this.isFormValid = true;\n  }\n\n  ngOnInit() {\n    // tslint:disable-next-line:only-arrow-functions\n    $(document).ready(function() {\n      $('.nav').fadeTo('slow', 1);\n    });\n    this.stationList = new StationList().stationList;\n    this.radioSelected = '1';\n    this.initializeDate();\n  }\n\n  initializeDate() {\n    this.selectedFromDate = this.getDateNow();\n    this.selectedToDate = this.getDateNow();\n  }\n\n  getSelecteditem() {\n    // tslint:disable-next-line:no-shadowed-variable\n    this.radioSel = StatisticTypeList.find(StatisticType => StatisticType.id === this.radioSelected);\n    this.radioSelectedString = JSON.stringify(this.radioSel);\n  }\n\n  getDateNow() {\n    const dateNow = Date.now();\n    const date = new Date(dateNow);\n    return date.toISOString().split('T')[0];\n  }\n\n  onItemChange(item) {\n    this.getSelecteditem();\n  }\n\n  validateForm() {\n    if (this.selectedStation === undefined) {\n      this.validMessage = 'Proszę wybrać stację meteorologiczną';\n      return false;\n    }\n\n    const fromDate = new Date(this.selectedFromDate);\n    const toDate = new Date(this.selectedToDate);\n    if (fromDate > toDate) {\n      this.validMessage = 'Data rozpoczęcia musi być wcześniejsza niż data zakończenia'; //\n      return false;\n    }\n\n    this.validMessage = '';\n    return true;\n  }\n  generateReport() {\n    this.isRequestSended = false;\n    console.log(this.selectedFromDate);\n    console.log(this.selectedToDate);\n    console.log(this.radioSelected);\n    console.log(this.selectedStation);\n    const isValid = this.validateForm();\n    this.isFormValid = isValid;\n    if (isValid) {\n      this.showMeteoStats();\n    }\n  }\n\n  showMeteoStats() {\n    return this.service.getStatsData(this.radioSelected, this.selectedStation, this.selectedFromDate, this.selectedToDate)\n      .subscribe((results: any) => {\n        console.log(results);\n        this.results = results;\n        this.calculateStats();\n      });\n  }\n\n  calculateStats() {\n    console.log(this.results.data.length);\n    const dataLength = this.results.data.length;\n    if (dataLength > 0) {\n      const tempStats = this.calculateTemperatureStats(this.radioSelected, dataLength);\n      const pressureStats = this.calculatePressureStats(this.radioSelected, dataLength);\n      const windPowerStats = this.calculateWindPowerStats(this.radioSelected, dataLength);\n      this.statData = new Statistics(tempStats, pressureStats, windPowerStats);\n      this.isDataLoaded = this.isRequestSended = true;\n    } else {\n      // trzeba cos wyswietlic na UI ze nie dostaliśmy danych\n      this.isDataLoaded = false;\n      console.log('[StatsComponentComponent.calulateStats()] -> No data on API response');\n    }\n  }\n\n  calculateTemperatureStats(radioSelected, dataLength): CalculatedProps {\n    let j = 0;\n    for (j; j  maxTemperature) {\n          maxTemperature = element.temperature;\n          maxTempDate = date;\n        }\n        dataCount++;\n      }\n    }\n    const temp = new CalculatedProps(minTemperature, minTempDate, maxTemperature, maxTempDate, sumTemperature, dataCount);\n    return temp;\n  }\n\n  calculatePressureStats(radioSelected, dataLength): CalculatedProps {\n    let j = 0;\n    for (j; j  maxPressure) {\n            maxPressure = element.pressure;\n            maxPressureDate = date;\n          }\n          dataCount++;\n          }\n        }\n    return new CalculatedProps(minPressure, minPressureDate, maxPressure, maxPressureDate, sumPressure, dataCount);\n  }\n\n  calculateWindPowerStats(radioSelected, dataLength): CalculatedProps {\n    let j = 0;\n    for (j; j  maxWindPower) {\n          maxWindPower = element.windspeed;\n          maxWindPowerDate = date;\n        }\n        dataCount++;\n      }\n    }\n    return new CalculatedProps(minWindPower, minWindPowerDate, maxWindPower, maxWindPowerDate, sumWindPower, dataCount);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            STATYSTYKI\n        \n        \n            \n                {{station.name}}\n            \n        \n    \n\n\n\n\n\n    \n        \n            \n                \n                    \n                         {{item.name}}\n                    \n                \n                \n                    Od:\n                    \n                \n\n                \n                    Do:\n                    \n                \n\n                \n                    Generuj\n                \n\n                \n                    {{validMessage}}\n                \n            \n\n\n            \n                \n                    \n                        \n                            \n                            Temperatura [°C]\n                            Ciśnienie [hPa]\n                            Prędkość wiatru [m/s]\n                        \n                        \n                            \n                                Średnia\n                                {{this.statData.temperature.average}}\n                                {{this.statData.pressure.average}}\n                                {{this.statData.windPower.average}}\n                            \n                            \n                                Minimum\n                                \n                                    {{this.statData.temperature.min}}\n                                    \n                                    ({{this.statData.temperature.minaDate}})\n                                \n                                \n                                    {{this.statData.pressure.min}}\n                                    \n                                    ({{this.statData.pressure.minaDate}})\n    \n                                \n                                \n                                    {{this.statData.windPower.min}}\n                                    \n                                    ({{this.statData.windPower.minaDate}})\n                                \n                            \n                            \n                                Maksimum\n                                \n                                    {{this.statData.temperature.max}}\n                                    \n                                    ({{this.statData.temperature.maxDate}})\n                                \n                                \n                                    {{this.statData.pressure.max}}\n                                    \n                                    ({{this.statData.pressure.maxDate}})\n                                \n                                \n                                    {{this.statData.windPower.max}}\n                                    \n                                    ({{this.statData.windPower.maxDate}})\n                                \n                            \n                        \n                    \n                    \n                        Brak danych do wyświetlenia\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./stats-component.component.css\n                \n                .nav{\n    height: 30vh;\n    background: linear-gradient(#2e85b88e, #af6d2285),\n        url(https://cdn.benchmark.pl/uploads/article/33432/MODERNICON/365f2a6b41e4456b9a0c46e76860b1306722e665.jpg);\n\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: 100%;\n    opacity: 0;\n\n    display: flex;\n    justify-content: center;\n    align-content: center;\n}\n\n.columnGradient {\n    background: linear-gradient(to bottom, #708192, #cdd6da)\n}\n\ntable {\n    /* display: inherit; */\n    border-collapse: collapse;\n    margin: 0 auto;\n    width: 100%;\n    /* border: 5px solid white; */\n}\ntable thead{\n    text-align: center;\n    padding: 1rem;\n}\ntable tbody{\n    text-align: center;\n    padding: 1rem;\n}\n\n#emptyDataDiv{\n    text-align: center;\n}\n\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        STATYSTYKI                                            {{station.name}}                                                                                                             {{item.name}}                                                                        Od:                                                                        Do:                                                                        Generuj                                                    {{validMessage}}                                                                                                                                                            Temperatura [°C]                            Ciśnienie [hPa]                            Prędkość wiatru [m/s]                                                                                                            Średnia                                {{this.statData.temperature.average}}                                {{this.statData.pressure.average}}                                {{this.statData.windPower.average}}                                                                                        Minimum                                                                    {{this.statData.temperature.min}}                                                                        ({{this.statData.temperature.minaDate}})                                                                                                    {{this.statData.pressure.min}}                                                                        ({{this.statData.pressure.minaDate}})                                                                                                        {{this.statData.windPower.min}}                                                                        ({{this.statData.windPower.minaDate}})                                                                                                                        Maksimum                                                                    {{this.statData.temperature.max}}                                                                        ({{this.statData.temperature.maxDate}})                                                                                                    {{this.statData.pressure.max}}                                                                        ({{this.statData.pressure.maxDate}})                                                                                                    {{this.statData.windPower.max}}                                                                        ({{this.statData.windPower.maxDate}})                                                                                                                                                    Brak danych do wyświetlenia                                                            '\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponentComponent.html":{"url":"components/WeatherComponentComponent.html","title":"component - WeatherComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/weather/weather-component.component.ts\n\n\n    \n        Description\n    \n    \n        Weather component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-component\n            \n\n            \n                styleUrls\n                ./weather-component.component.css\n            \n\n\n\n            \n                templateUrl\n                ./weather-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMsg\n                            \n                            \n                                    Public\n                                resultsForecast\n                            \n                            \n                                    Public\n                                resultsForecastToChartData\n                            \n                            \n                                    Public\n                                resultsForecastToChartMaxTemp\n                            \n                            \n                                    Public\n                                resultsForecastToChartMinTemp\n                            \n                            \n                                    Public\n                                resultsForecastToChartTemp\n                            \n                            \n                                    Public\n                                resultsWeather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawChart\n                            \n                            \n                                getForecastService\n                            \n                            \n                                getWeatherService\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showContent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, service: WeatherServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/weather/weather-component.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        WeatherServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drawChart\n                        \n                        \n                    \n                \n            \n            \n                \ndrawChart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:127\n                \n            \n\n\n            \n                \n                    Funkcja rysująca wykres prognozy pogody. Odwołujemy się do niej w funkcji @function getForecastService() .\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastService\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastService(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:107\n                \n            \n\n\n            \n                \n                    Funkcja inicująca pobieranie danych z prognozą pogody oraz przypisanie ich pod ospowiednie zmienne.\nPrzypisanie pod zmienną @param resultsForecast danych do wyświetlenia\nw tabeli z prognozą pogody na najbliższe dni.\nDane pobierane są dzięki funkcji @function getWeatherForecastData() .\nZ danych uzyskanych przez funkcję @function getWeatherForecastData() wyciągamy i przypisujemy pod odpowiednie zmienne czas pomiaru,\ntemperaturę, temperaturę minimalną i temperaturę maksymalną. Zmienne wykorzystujemy do rysowania wykresu, \nfunkcja @function drawChart()\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejsowość, dla której pobieramy dane.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherService\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherService(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:82\n                \n            \n\n\n            \n                \n                    Przypisanie pod zmienną 'resultWeather' danych, które będą wyświetlone w tabeli z aktualnym stanem pogody\nw miejscowości podanej przez użytkownika. Dane pobierane są dzięki funkcji @function getWeatherData().\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość, dla której wyświetlamy dane\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showContent\n                        \n                        \n                    \n                \n            \n            \n                \nshowContent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/weather/weather-component.component.ts:69\n                \n            \n\n\n            \n                \n                    Funkcja inicjue wyświetlanie się tabel z danymi oraz wykresu poprzez nacisnięcie przycisku \"Pokaż dane!\"\nOdwołuje się do tabel z pogodą w danym momencie '.content__table', z prognozą pogody '.content__chart' oraz wykresem '.chart-area'.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMsg\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:32\n                            \n                        \n\n                \n                    \n                        Informacja o błędzie przy wprowadzaniu przez użytkownika nazwy miasta.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:28\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca dane z prognozą pogody na najbliższe dni analizowanego miasta.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:36\n                            \n                        \n\n                \n                    \n                        Przechowuje dane o czasie pomiaru, wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartMaxTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:48\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury maksymalne wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartMinTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:44\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury minimalne wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsForecastToChartTemp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:40\n                            \n                        \n\n                \n                    \n                        Przechowuje temperatury wyciągnięte z danych prognozy pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultsWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather/weather-component.component.ts:24\n                            \n                        \n\n                \n                    \n                        Zmienna przechowująca dane z aktualnym stanem pogody analizowanego miasta.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { WeatherServiceService } from '../../services/weather/weather-service.service';\nimport { Chart } from 'chart.js';\nimport { WeatherData } from '../../services/weather/weather-module';\ndeclare var $: any;\n\n/**\n * Weather component\n */\n@Component({\n  selector: 'app-weather-component',\n  templateUrl: './weather-component.component.html',\n  styleUrls: ['./weather-component.component.css']\n})\n/**\n * Klasa odpowiadająca za informacje wyświetlane na stronie głownej aplikacji\n */\nexport class WeatherComponentComponent implements OnInit {\n\n /**\n  * Zmienna przechowująca dane z aktualnym stanem pogody analizowanego miasta.\n  */\n public resultsWeather = [];\n /**\n * Zmienna przechowująca dane z prognozą pogody na najbliższe dni analizowanego miasta.\n */\npublic resultsForecast: any;\n/**\n * Informacja o błędzie przy wprowadzaniu przez użytkownika nazwy miasta.\n */\npublic errorMsg;\n/**\n * Przechowuje dane o czasie pomiaru, wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartData = [];\n/**\n * Przechowuje temperatury wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartTemp = [];\n/**\n * Przechowuje temperatury minimalne wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartMinTemp = [];\n/**\n * Przechowuje temperatury maksymalne wyciągnięte z danych prognozy pogody.\n */\npublic resultsForecastToChartMaxTemp = [];\n\n/**\n * \n * @param http \n * @param service \n */\n  constructor(private http: HttpClient, private service: WeatherServiceService) { }\n\n  ngOnInit() {\n    //podstawowe animacje dla dwóch głownych okien na pierwszej stronie aplikacji\n    $(document).ready(function () {\n      $(\".content\").animate({ opacity: 1, }, 1500);\n      $(\".nav\").fadeTo(\"slow\", 1);\n    })\n  }\n\n  /**\n   * Funkcja inicjue wyświetlanie się tabel z danymi oraz wykresu poprzez nacisnięcie przycisku \"Pokaż dane!\"\n   * Odwołuje się do tabel z pogodą w danym momencie '.content__table', z prognozą pogody '.content__chart' oraz wykresem '.chart-area'.\n   */\n  showContent() {\n    $(document).ready(function () {\n      $(\".content__table\").show();\n      $(\".content__chart\").show();\n      $(\".chart-area\").show();\n    })\n  }\n\n  /**\n   * Przypisanie pod zmienną 'resultWeather' danych, które będą wyświetlone w tabeli z aktualnym stanem pogody\n   * w miejscowości podanej przez użytkownika. Dane pobierane są dzięki funkcji @function getWeatherData().\n   * @param {string} term Parametr określający miejscowość, dla której wyświetlamy dane\n   */\n  getWeatherService(term: string) {\n    this.service\n      .getWeatherData(term)\n      .subscribe((records: any) => {\n        console.log(records);\n        this.resultsWeather.push(records);\n      },\n        error => this.errorMsg = \"Nie wprowadzono miejscowości lub wprowadzono złą nazwę!\",\n      )\n    this.errorMsg = null;\n  }\n\n  /**\n   * Funkcja inicująca pobieranie danych z prognozą pogody oraz przypisanie ich pod ospowiednie zmienne.\n   * \n   * Przypisanie pod zmienną @param resultsForecast danych do wyświetlenia\n   * w tabeli z prognozą pogody na najbliższe dni.\n   * Dane pobierane są dzięki funkcji @function getWeatherForecastData() .\n   * \n   * Z danych uzyskanych przez funkcję @function getWeatherForecastData() wyciągamy i przypisujemy pod odpowiednie zmienne czas pomiaru,\n   * temperaturę, temperaturę minimalną i temperaturę maksymalną. Zmienne wykorzystujemy do rysowania wykresu, \n   * funkcja @function drawChart()\n   * @param {string} term Parametr określający miejsowość, dla której pobieramy dane.\n   * @return \n   */\n  getForecastService(term: string) {\n    this.service\n      .getWeatherForecastData(term)\n      .subscribe((data: any) => {\n        for (let i = 0; i \n    \n\n    \n        \n    \n        Sprawdź pogodę w swoim mieście\n\n    \n\n    \n        \n        Pokaż\n            dane!\n    \n\n    \n        {{errorMsg}}\n    \n\n\n\n    \n        \n\n            \n                \n                    Miasto\n                    Temperatura\n                    Temperatura Odczuwalna\n                    Temperatura Minimalna\n                    Temperatura Maksymalna\n                    Ciśnienie\n                    Wilgotność\n                    Pogoda\n                \n            \n\n            \n                {{result[0].name}}\n                {{result[0].main.temp}} C\n                {{result[0].main.feels_like}} C\n                {{result[0].main.temp_min}} C\n                {{result[0].main.temp_max}} C\n                {{result[0].main.pressure}} hPa\n                {{result[0].main.humidity}} %\n                \n                    \n                \n            \n\n        \n    \n\n    \n        \n\n            \n                \n                    Czas pomiaru\n                    Temperatura max/min\n                    Pogoda\n                \n            \n\n            \n                \n                    {{x.dt_txt}}\n                \n                \n                    {{x.main.temp_max}} C / {{x.main.temp_min}} C\n                \n                \n                    \n                \n            \n\n        \n    \n\n\n\n    {{chart}}\n\n    \n\n    \n                \n                    ./weather-component.component.css\n                \n                .navigation{\n    background-color: #ffffff;\n}\n\n.nav{\n    height: 40vh;\n    background-color: #ffffff;\n\n    background: url(https://www.setaswall.com/wp-content/uploads/2017/03/Sun-Sky-Summer-Wallpaper-2560x1600.jpg);\n    background-repeat: no-repeat;\n    background-position: center;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    opacity: 0;\n}\n\nh2{\n    color: #ffffff;\n    font-family: \"Lato\", sans-serif;\n    text-transform: uppercase;\n    letter-spacing: 1px;\n}\n\n.nav__buttons__input{\n    border-radius: 100px;\n    padding: 25px 60px;\n    height: 15px;\n    text-align: center;\n    text-transform: uppercase;\n\n    animation-name: moveToBottom;\n    animation-duration: 1s;\n    animation-delay: 0.5s;\n    animation-fill-mode: backwards;\n}\n\n.nav__buttons__input:hover{\n    background: linear-gradient(#626d329f,#6e5f33af);\n    color: #ffffff;\n    transition-duration: 2s;\n}\n\n.nav__buttons__btn{\n    border-radius: 100px;\n    padding: 7px 10px;\n    margin-left: 5px;\n\n    animation-name: moveToLeft;\n    animation-duration: 1.5s;\n    animation-delay: 1.2s;\n    animation-fill-mode: backwards;\n}\n\n.nav__buttons__btn:hover{\n    background: linear-gradient(#626d329f,#6e5f33af);\n    color: #ffffff;\n    transition-duration: 0.5s;\n}\n\n.content{\n    opacity: 0;\n    margin-top: 15px;\n    display: flex;\n    justify-content: space-around;\n}\n\n.content__table{\n    display: none;\n    text-align: center;\n    width: 50%;\n    height:0px;\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 0.2;\n}\n\n.content__chart{\n    display: block;\n    text-align: center;\n    width: 40%;\n    background-color: #ffffff;\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 0.4s;\n    animation-fill-mode: backwards;\n}\n\n.table{\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n\n.nav__error{\n    font-size: 22px;\n    color: #ffffff;\n    text-shadow: 1px 1px 6px rgba(172,91,0,0.88);\n}\n\n.content__my-custom-scrollbar {\n    position: relative;\n    height: 350px;\n    overflow: auto;\n}\n\n.chart-area{\n    width: 50%;\n    height: auto;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 10px;\n    display: none;\n    background-color: #ffffff;\n\n    animation-name: moveToBottom;\n    animation-duration: 1.5s;\n    animation-delay: 1s;\n    animation-fill-mode: backwards;\n\n    box-shadow: 3px 3px 11px -1px rgba(74,100,107,0.8);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sprawdź pogodę w swoim mieście                        Pokaż            dane!                {{errorMsg}}                                                                Miasto                    Temperatura                    Temperatura Odczuwalna                    Temperatura Minimalna                    Temperatura Maksymalna                    Ciśnienie                    Wilgotność                    Pogoda                                                        {{result[0].name}}                {{result[0].main.temp}} C                {{result[0].main.feels_like}} C                {{result[0].main.temp_min}} C                {{result[0].main.temp_max}} C                {{result[0].main.pressure}} hPa                {{result[0].main.humidity}} %                                                                                                                                        Czas pomiaru                    Temperatura max/min                    Pogoda                                                                            {{x.dt_txt}}                                                    {{x.main.temp_max}} C / {{x.main.temp_min}} C                                                                                                {{chart}}'\n    var COMPONENTS = [{'name': 'AirQualityComponentComponent', 'selector': 'app-air-quality-component'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MapComponentComponent', 'selector': 'app-map-component'},{'name': 'QualityComponentComponent', 'selector': 'app-quality-component'},{'name': 'StatsComponentComponent', 'selector': 'app-stats-component'},{'name': 'WeatherComponentComponent', 'selector': 'app-weather-component'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherData.html":{"url":"classes/WeatherData.html","title":"class - WeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-module.ts\n        \n\n            \n                Description\n            \n            \n                Klasa opisująca dane pogodowe w danym momencie odczytane\nz api openweathermap.org.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                main\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                visibility\n                            \n                            \n                                    Public\n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, visibility: number, main: number, weather: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-module.ts:5\n                            \n                        \n\n                \n                    \n                            Kostruktor klasy WeatherData()\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                nazwa miasta, którą podał użytkownik\n\n                                                        \n                                                \n                                                \n                                                        visibility\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                I don't know \n\n                                                        \n                                                \n                                                \n                                                        main\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n\n                                                        \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ikonka określająca pogodę w danym momencie\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            main\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:16\n                            \n                        \n\n                \n                    \n                        dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:14\n                            \n                        \n\n                \n                    \n                        nazwa miasta, którą podał użytkownik\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            visibility\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:15\n                            \n                        \n\n                \n                    \n                        I don't know \n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-module.ts:17\n                            \n                        \n\n                \n                    \n                        ikonka określająca pogodę w danym momencie\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class WeatherData {\n    /**\n     * Kostruktor klasy WeatherData()\n     * @param {string} name nazwa miasta, którą podał użytkownik\n     * @param {number} visibility I don't know \n     * @param {number} main dane z parametrami pogody w danym momencie (temperatura, temperatura odczuwalna, temperatura minimalna, temperatura maksymalna, ciśnienie, wilgotność)\n     * @param {string} weather ikonka określająca pogodę w danym momencie\n     */\n    constructor(\n        public name: string,\n        public visibility: number,\n        public main: number,\n        public weather: string,\n    ) { }\n}\n\n/**\n * Klasa opisująca stan pogody na najbliższe dni odczytane z api opeweathermap.org\n */\nexport class ForecastData {\n    /**\n     * Kostruktor klasy @class ForecastData()\n     * @param list macierz, w której będą przechowywane dane pogodowe na najbliższe dni \n     * (czas pomiaru, temperatura max/min, znak określający pogodę) \n     */\n    constructor(\n        public list = [],\n    ) { }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherServiceService.html":{"url":"injectables/WeatherServiceService.html","title":"injectable - WeatherServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather/weather-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Klasa z funkcjami pobierającymi dane z api openweathermap.org.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                            \n                                apiUrlForecast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getWeatherData\n                            \n                            \n                                    Public\n                                getWeatherForecastData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather/weather-service.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherData(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather-service.service.ts:34\n                \n            \n\n\n            \n                \n                    Funkcja wyciąga aktualne dane pogodowe z api openweathermap.org dla wybranej przez użytkownika miejscowości.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość wybraną przez użytkownika.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherForecastData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherForecastData(term: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather/weather-service.service.ts:55\n                \n            \n\n\n            \n                \n                    Funkcja pobiera z api openwethermap.org dane opisujące prognozę pogody na najbliższe pięć dni.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Parametr określający miejscowość wybraną przez użytkownika.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://api.openweathermap.org/data/2.5/weather?q=\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-service.service.ts:21\n                            \n                        \n\n                \n                    \n                        Adres api, z którgo pobierane są dane o aktualnym stanie pogody.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiUrlForecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://api.openweathermap.org/data/2.5/forecast?q=\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/weather/weather-service.service.ts:26\n                            \n                        \n\n                \n                    \n                        Adres api, z którgo pobierane są dane z prognozą pogody na najbliższe dni.\nZ api możemy uzyskać prognozę pogody na pięć dni w przód.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { WeatherData, ForecastData } from './weather-module';\nimport { map } from 'rxjs/operators';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\n/**\n * Klasa z funkcjami pobierającymi dane z api openweathermap.org.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherServiceService {\n\n  /**\n   * Adres api, z którgo pobierane są dane o aktualnym stanie pogody.\n   */\n  apiUrl = \"https://api.openweathermap.org/data/2.5/weather?q=\";\n    /**\n   * Adres api, z którgo pobierane są dane z prognozą pogody na najbliższe dni.\n   * Z api możemy uzyskać prognozę pogody na pięć dni w przód.\n   */\n  apiUrlForecast = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\n\n  constructor(private http: HttpClient) { }\n    /**\n   * Funkcja wyciąga aktualne dane pogodowe z api openweathermap.org dla wybranej przez użytkownika miejscowości.\n   * @param {string} term Parametr określający miejscowość wybraną przez użytkownika.\n   * @retruns  ????????\n   */\n  public getWeatherData(term: string): Observable {\n\n    // return this.http\n    //   .get(this.apiUrl)         // do sprawdzenia wszystkich endpointów\n\n    return this.http\n      .get(`${this.apiUrl}${term}&appid=9a3485ea70ca20151b5d5d7b29054807&units=metric`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new WeatherData(item.name, item.visibility, item.main, item.weather))),\n        catchError((error: HttpErrorResponse) => {\n          return Observable.throw(error.message || \"Server Message\");\n        })\n      )\n  }\n\n   /**\n    * Funkcja pobiera z api openwethermap.org dane opisujące prognozę pogody na najbliższe pięć dni.\n    * @param {string} term Parametr określający miejscowość wybraną przez użytkownika.\n    */\n  public getWeatherForecastData(term: string): Observable {\n    return this.http\n      .get(`${this.apiUrlForecast}${term}&appid=b742a4225977a8a94a092feb673aad31&units=metric`)\n      .pipe(\n        map((data: any) =>\n          [data].map((item: any) =>\n            new ForecastData(item.list)))\n      )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            routableComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/air-quality-component/air-quality-component.component.ts\n            \n            component\n            AirQualityComponentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/map/map-component.component.ts\n            \n            component\n            MapComponentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/map/map-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            component\n            QualityComponentComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            latitude\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            longitude\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            ol\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/quality/quality-component.component.ts\n            \n            variable\n            results\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/stats-component/stats-component.component.ts\n            \n            component\n            StatsComponentComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/components/stats-component/stats-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/weather/weather-component.component.ts\n            \n            component\n            WeatherComponentComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/components/weather/weather-component.component.ts\n            \n            variable\n            $\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/calculated-stats.ts\n            \n            class\n            Statistics\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/meteo-stats-data.ts\n            \n            class\n            MeteoStatsData\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/models/station.ts\n            \n            class\n            Station\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/statistic-type.ts\n            \n            class\n            StatisticType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/statistic-type.ts\n            \n            variable\n            StatisticTypeList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/statistics.ts\n            \n            class\n            CalculatedProps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/stats-api-model.ts\n            \n            class\n            MeteoStatsModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/air-quality/air-quality-module.ts\n            \n            class\n            AirQualityData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/air-quality/air-quality.service.ts\n            \n            injectable\n            AirQualityService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/meteo-stat/meteo-stats.service.ts\n            \n            injectable\n            MeteoStatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/meteo-stat/station-list.ts\n            \n            class\n            StationList\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/quality/quality-module.ts\n            \n            class\n            AirData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/quality/quality-service.service.ts\n            \n            injectable\n            QualityServiceService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-module.ts\n            \n            class\n            ForecastData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-module.ts\n            \n            class\n            WeatherData\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/weather/weather-service.service.ts\n            \n            injectable\n            WeatherServiceService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.11\n        \n            @angular/common : ~8.2.11\n        \n            @angular/compiler : ~8.2.11\n        \n            @angular/core : ^8.2.14\n        \n            @angular/forms : ~8.2.11\n        \n            @angular/platform-browser : ~8.2.11\n        \n            @angular/platform-browser-dynamic : ~8.2.11\n        \n            @angular/router : ~8.2.11\n        \n            @ng-bootstrap/ng-bootstrap : ^6.0.2\n        \n            chart.js : ^2.9.3\n        \n            jquery : ^3.4.1\n        \n            leaflet : ^1.6.0\n        \n            rxjs : ~6.4.0\n        \n            rxjs-compat : ^6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMeteoApp\nThis project was generated with Angular CLI version 8.3.14.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMapComponentComponent\n\nMapComponentComponent\n\nAppModule -->\n\nMapComponentComponent->AppModule\n\n\n\n\n\nQualityComponentComponent\n\nQualityComponentComponent\n\nAppModule -->\n\nQualityComponentComponent->AppModule\n\n\n\n\n\nStatsComponentComponent\n\nStatsComponentComponent\n\nAppModule -->\n\nStatsComponentComponent->AppModule\n\n\n\n\n\nWeatherComponentComponent\n\nWeatherComponentComponent\n\nAppModule -->\n\nWeatherComponentComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            $   (src/.../quality-component.component.ts)\n                        \n                        \n                            $   (src/.../stats-component.component.ts)\n                        \n                        \n                            $   (src/.../map-component.component.ts)\n                        \n                        \n                            $   (src/.../weather-component.component.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            latitude   (src/.../quality-component.component.ts)\n                        \n                        \n                            longitude   (src/.../quality-component.component.ts)\n                        \n                        \n                            ol   (src/.../quality-component.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            results   (src/.../quality-component.component.ts)\n                        \n                        \n                            routableComponent   (src/.../app-routing.module.ts)\n                        \n                        \n                            StatisticTypeList   (src/.../statistic-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/quality/quality-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            latitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            longitude\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/stats-component/stats-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/map/map-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/components/weather/weather-component.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            $\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routableComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  WeatherComponentComponent, StatsComponentComponent\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/models/statistic-type.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StatisticTypeList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StatisticType[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        {\n            id: 1,\n            name: 'Godzinowy'\n        },\n        {\n            id: 2,\n            name: 'Dzienny'\n        },\n        {\n            id: 3,\n            name: 'Miesięczny'\n        }\n    ]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
